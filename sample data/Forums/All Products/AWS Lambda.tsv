label	description
AWS Lambda	"Check the invocation type for a lambda function
Is there a way to tell if the lambda function code running is the result of a RequestResponse
 type or an Event
 type.

In the later I'd like to write the payload I would have returned from the former to a key in S3. It would be easier than passing in a custom parameter. I don't see any part of the context
 object that would hint at what the invocation type is though."
AWS Lambda	"Re: Check the invocation type for a lambda function
If the requests are coming from a supported Event Source for AWS Lambda, you can identify the source of the request since all event sources have standard event payload structure. You can view the sample event data at http://docs.aws.amazon.com/lambda/latest/dg/eventsources.html. Based on the event source, you can determine if the request was RequestResponse or Event.

If the requests are coming directly from a custom client, then you control the event payload and can insert a parameter in the event based on the invocation type. Hope this helps."
AWS Lambda	"Re: Check the invocation type for a lambda function
In my world functions are most often called by my code directly (i.e. I control the client). It's continuing to be a pain in the shorts (going on three years?) for me to add a redundant property to all payloads just to know if the function needs to return a result (RequestResponse) or send the result via other channels (Event).  A specific use case for this is handling UDP traffic, where there may be two response channels based on the client's needs.  In such a case, a RequestResponse invocation indicates the need for synchronous processing and the client is taking responsibility for the return communication of the result.  By contrast, an Event invocation indicates that the client is delegating the return response to the lambda (or downstream).  

I'm not sure why this is difficult to add to the Lambda context -- seems like a gimme to me. Further, AWS seems to agree: The documented behavior of the Lambda service itself relies on this distinction in determining how to communicate error information. See https://docs.aws.amazon.com/lambda/latest/dg/dotnet-exceptions.html:

The method in which error information is conveyed depends on the invocation type

So, is this going to be fixed at some point? Any update here? Or is this yet another ""we decided and we aren't going to fix it"" situation?"
AWS Lambda	"How can I have Lambda read the APP ID and therefore customize it's response
I have a few skills that are using the same lambda function but I'd like to have some customization for each application.  Bear with me as I am a newbie to javascript and coding so this may be a simple answer.  I know the appID is sent in the JSON from Alexa to Lambda, but not sure how to read that portion of the JSON.  Any advice appreciated. Thank you."
AWS Lambda	"Best practice for creating truly serverless AWS dynamic web application
What is AWS's advice on best practices regarding the development of a truly serverless multi-page dynamic web application? By truly serverless, I mean that the web pages themselves (and not just the Lambdas behind them) are managed without explicitly having to configure an EC2 instance.

I've done some research but haven't found a clear-cut answer. Yes, static websites can be hosted serverlessly in S3. I also accept that a truly serverless dynamic website can be created in AWS, with the HTML dynamically generated by invoking a Lambda function, but is this an official recommended practice? Googling the subject shows that there are many developers that think it is a poor approach.

Can an AWS representative please advise whether a purely serverless architecture is suitable for multi-page dynamic web application?

Thank you"
AWS Lambda	"Re: Best practice for creating truly serverless AWS dynamic web application
I do not work for AWS, so apologies for that in advance.

Generally, the advice is to have your static website in S3, with the dynamic bits handled via calls to a separate service composed of API Gateway and Lambda.

Here's an example blog post from AWS detailing a contact form using this setup. https://aws.amazon.com/blogs/architecture/create-dynamic-contact-forms-for-s3-static-websites-using-aws-lambda-amazon-api-gateway-and-amazon-ses/"
AWS Lambda	"Re: Best practice for creating truly serverless AWS dynamic web application
Thanks, Ellison. The article you reference shows how to bring dynamic behaviour to a static web page. I'm seeking guidance on the serverless generation of a dynamic web page - i.e. a page for which an html fragment such as a div block can be selectively included or excluded based on the value of a session variable.

I suspect that the answer to my question is ""no, there is no official AWS guidance for this scenario""."
AWS Lambda	"Recommended Lambda function size
What is the best recommended memory size of the lambda function if we have to respond to 50,000 users at the same time ?
In my case, right now lambda function uses maximum of 80 to 100MB of memory for single request.

Edited by: awsIsg on Feb 26, 2019 5:09 AM"
AWS Lambda	"Re: Recommended Lambda function size
The concurrency of the function is not related to the memory size of the function. The Lambda infrastructure will create multiple instances of your function to handle multiple requests, and each instance will have a seperate block of memory of the configured size.

If you're aiming for 50,000 though, you will have other problems, the first of which being the default concurrency limit in lambda being 1000 (https://docs.aws.amazon.com/lambda/latest/dg/limits.html)."
AWS Lambda	"Re: Recommended Lambda function size
Thanks Ellison, it's really useful."
AWS Lambda	"Lambda function doesnt work sequentially?
I'm trying to implement a function which is called by API Gateway. It gets passed a email address+password, then checks if the Email address is already in use. If thats not the case it should be put in my dynamo DB table.

When testing it with an Email address which is already in use, the put operation is still executed, eventhough the boolean should be set to false.


'use strict';

var AWS = require('aws-sdk'),
    uuid = require('uuid'),
    documentClient = new AWS.DynamoDB.DocumentClient();

exports.handler = function(event, context, callback) {

    if (event.body !== null && event.body !== undefined) {

        let body = JSON.parse(event.body);
        let eMailAddress = body.mail;
        let password = body.password;
        var EmailInUse = Boolean(false);

        var paramsScan = {
            TableName: ""accounts""
        };
        documentClient.scan(paramsScan, function(err, data) {
            for (var i in data.Items) {
                i = data.Items;
                if (i.EmailAddress == eMailAddress) {
                    console.log(""already used"");
                    callback(err, ""Email Address already in Use!"");
                    EmailInUse = true;
                }
            }

        });

        console.log(EmailInUse);
        if (EmailInUse == false) {
            console.log(""should not enter if email used"");
            var params = {
                Item: {
                    ""AccountID"": uuid.v1(),
                    ""Password"": password,
                    ""EmailAddress"": eMailAddress
                },
                TableName: ""accounts""
            };

            documentClient.put(params, function(err, data) {
                if (err) {
                    callback(err, null);
                }
                else {
                    const response = { statusCode: ""200"", ""headers"": {}, body: JSON.stringify(params), ""isBase64Encoded"": ""false"" };
                    callback(null, response);
                }
            });

        }
    }
};

this is my Cloudwatch log for calling it 2 times with the same parameters:

12:54:01
START RequestId: 281b0eda-950b-40fc-a2e2-d326cd04f8a4 Version: $LATEST
12:54:01
2019-02-26T12:54:01.434Z 281b0eda-950b-40fc-a2e2-d326cd04f8a4 false
12:54:01
2019-02-26T12:54:01.471Z 281b0eda-950b-40fc-a2e2-d326cd04f8a4 should not enter if email used
12:54:01
END RequestId: 281b0eda-950b-40fc-a2e2-d326cd04f8a4
12:54:01
REPORT RequestId: 281b0eda-950b-40fc-a2e2-d326cd04f8a4 Duration: 320.98 ms Billed Duration: 400 ms Memory Size: 128 MB Max Memory Used: 31 MB
12:54:47
START RequestId: b9df94ce-0d59-4dfb-8b61-8098db566431 Version: $LATEST
12:54:47
2019-02-26T12:54:47.591Z b9df94ce-0d59-4dfb-8b61-8098db566431 false
12:54:47
2019-02-26T12:54:47.591Z b9df94ce-0d59-4dfb-8b61-8098db566431 should not enter if email used
12:54:47
2019-02-26T12:54:47.812Z b9df94ce-0d59-4dfb-8b61-8098db566431 already used
12:54:47
END RequestId: b9df94ce-0d59-4dfb-8b61-8098db566431
12:54:47
REPORT RequestId: b9df94ce-0d59-4dfb-8b61-8098db566431 Duration: 311.87 ms Billed Duration: 400 ms Memory Size: 128 MB Max Memory Used: 31 MB"
AWS Lambda	"[OT] Just ignore
Just ignore

Edited by: Cvele on Feb 25, 2019 2:25 PM

Edited by: Cvele on Feb 25, 2019 2:26 PM"
AWS Lambda	"Concept of Lambda triggers/events and Web App request-response integration
While concept of events and triggers for invoking Lambda are the great, I simply cannot see way how to integrate this with standard HTTP request-response sequence which happens during the usual web application scenario.

Consider a classic example, file processing. 
So, user of the web app can upload file to some S3 bucket.
As a response, user gets HTTP status 200, so file upload was successful.

On the other side,  we have Lambda function attached to S3Event, which does some business related to that file. Now, suppose we have a business rule  which can be disturbed - wrong file type, wrong file content, simply runtime error etc.. Out Lambda can check for that and throw appropriate exception. And here is a problem: there is no way to  notify the user that's something goes wrong. Because of execution of our lambda is completely unrelated to user's  original HTTP request (notify user about problem via email using SNS is unacceptable). And here is no way to track what's going on with that Lambda

So, how are you doing  this?"
AWS Lambda	"Lambda Function Event problem when calling from API Gateway
Hello lads.
'use strict';

var AWS = require('aws-sdk'),
    uuid = require('uuid'),
    documentClient = new AWS.DynamoDB.DocumentClient();


exports.handler = function(event, context, callback) {
    var tableName = ""profile"" + event.id;
    console.log(event);

    var params = {
        Item: {
            ""UUID"": uuid.v1(),
            ""Value"": event.value,
            ""Time"": new Date().getTime().toString()
        },
        TableName: tableName
    };

    const response = { ""headers"": {}, statusCode: ""200"", body: JSON.stringify(params), ""isBase64Encoded"": ""false"" };

    documentClient.put(params, function(err, data) {
        if (err) {
            callback(err, null);
        }
        else {
            callback(null, response);
        }
    });
};

This is my code which works perfectly fine when tested in lambda. It is triggered when an API Post Request is made. I called it with following request body:
{
  ""id"": ""1"",
  ""value"": ""13123123""
}

it gives me following error:

Sun Feb 24 14:11:15 UTC 2019 : Lambda execution failed with status 200 due to customer function error: Requested resource not found. Lambda request id: 1bd795f4-cd5b-4704-835b-df4caca4b5b4
Sun Feb 24 14:11:15 UTC 2019 : Method completed with status: 502

I really have no idea how to resolve this problem. Obviously there is an problem with the request body passing from API to my Lambda Function. I've also set the permissions for my Lambda function to AmazonDynamoDBFullAccess and CloudWatchLogs which give me this output:

""2019-02-24T14:10:24.046Z xxxxx {""errorMessage"":""Requested resource not found"",""errorType"":""ResourceNotFoundException"",""stackTrace"":[""Request.extractError (/var/runtime/node_modules/aws-sdk/lib/protocol/json.js:48:27)"",""Request.callListeners (/var/runtime/node_modules/aws-sdk/lib/sequential_executor.js:105:20)"",""Request.emit (/var/runtime/node_modules/aws-sdk/lib/sequ
2019-02-24T14:10:24.046Z xxxx
{
    ""errorMessage"": ""Requested resource not found"",
    ""errorType"": ""ResourceNotFoundException"",
    ""stackTrace"": [
        ""Request.extractError (/var/runtime/node_modules/aws-sdk/lib/protocol/json.js:48:27)"",
        ""Request.callListeners (/var/runtime/node_modules/aws-sdk/lib/sequential_executor.js:105:20)"",
        ""Request.emit (/var/runtime/node_modules/aws-sdk/lib/sequential_executor.js:77:10)"",
        ""Request.emit (/var/runtime/node_modules/aws-sdk/lib/request.js:683:14)"",
        ""Request.transition (/var/runtime/node_modules/aws-sdk/lib/request.js:22:10)"",
        ""AcceptorStateMachine.runTo (/var/runtime/node_modules/aws-sdk/lib/state_machine.js:14:12)"",
        ""/var/runtime/node_modules/aws-sdk/lib/state_machine.js:26:10"",
        ""Request.<anonymous> (/var/runtime/node_modules/aws-sdk/lib/request.js:38:9)"",
        ""Request.<anonymous> (/var/runtime/node_modules/aws-sdk/lib/request.js:685:12)"",
        ""Request.callListeners (/var/runtime/node_modules/aws-sdk/lib/sequential_executor.js:115:18)""
    ]
}"
AWS Lambda	"Node JS 8.10 not authorized
I created a Lambda function using Node js 8.10 to start an EC2 instance. It is using an IAM role that has permissions to start instances. When I test it, it returns as unauthorized. I created the same function using Python 3.7, using the same IAM role, with all the configuration parameters the same (VPC, security groups, etc.). The Python function works, but the Node JS function does not. The documentation states that both runtime platforms use the permissions of the role, so the Node function should work.

Here is the function code
const AWS = require('aws-sdk');
 
exports.handler = async (event) => {
    const EC2 = new AWS.EC2();
    var instanceId = ""i-xxxxxxxxxxxxxx"";
    var params = {
        InstanceIds: [instanceId], 
        DryRun: false
    };
    try {
        const startInstance = await EC2.startInstances(params, function(err, data) {
            if (err) {
                console.log(""error: "" + err.code);
            } else if (data) {
                console.log(data);
            }
        }).promise();
    } catch(err) {
        console.log(err);
    }
};


Here is the Python function code:

import json
import boto3
import botocore
 
def lambda_handler(event, context):
    INSTANCE_ID = ""i-xxxxxxxxxxx""
    client = boto3.client('ec2')
    try:
        responseTry = client.start_instances(
        InstanceIds=[
            INSTANCE_ID,
        ],
        AdditionalInfo='string',
        DryRun=True
        )
    except Exception as e:
        if e.response['Error']['Code'] == 'DryRunOperation':
            try:
                response = client.start_instances(
                InstanceIds=[
                    INSTANCE_ID,
                ],
                DryRun=False
                )
                return {
                'statusCode': 200,
                'body': json.dumps(response)
                }
            except Exception as e2:
                return e2.response"
AWS Lambda	"Bug in lambda python 3.7
Hi, we believe we've discovered a bug in the python 3.7 lambda environment.

If a StopIteration exception is raised, for example using next(), the lambda bootstrap fails to handle the exception correctly, because it expects an error message, which StopIteration does not supply.

To reproduce, create a new lambda function, and insert the following code:
next(iter([]))


Run a test against the lambda, and observe that the lambda fails (as expected), but does not tell you the exception that occurred inside your code. Instead it prints the exception that is generated inside bootstrap.py.

This does not happen in the python 3.6 environment.

The bug in bootstrap.py originates here:
if error_message:
    result['errorMessage'] = error_message


With no exception message, errorMessage is never set. Later in bootstrap.py it accesses error_result which will does not exist, throwing KeyError.

For anyone else having this issue, our workaround is to wrap our lambda in a try/except block, using the following exception handler:

except Exception as e:
    raise Exception(f""{str(type(e).__name__)}: {str(e)}"")


Which will catch any exception and always raise an exception with an error message.

Let me know if you need any more information. Cheers!"
AWS Lambda	"Frequency of Lambda Execution Environment updated? Boto3 really out of date
Just seeing how often the execution environment is updated as the page here: https://docs.aws.amazon.com/lambda/latest/dg/current-supported-versions.html lists that Boto3 is is 3-1.7.74 but the current is 3-1.9.98 is the latest.

I'm trying to write commands specifically for CodeDeploy ""list_deployment_instances()"", but that is being marked as deprecated and will be phased out in the future.  They recommend you switch to ""list_deployment_targets()"", but it is not available in the current version installed in the environment.

Any ideas when it will get updated as I don't want to have to keep writing functions that may eventually stop working because a command is deprecated by the library.

Thanks!"
AWS Lambda	"Re: Frequency of Lambda Execution Environment updated? Boto3 really out of date
yes! The version is old.
+1 Please update to new version of Lambda Runtime for boto3 as mentioned on documentation."
AWS Lambda	"Re: Frequency of Lambda Execution Environment updated? Boto3 really out of date
@ssm-alex:
You can work-around by include boto3 and botocore packages to your lambda deployment.
https://docs.aws.amazon.com/lambda/latest/dg/lambda-python-how-to-create-deployment-package.html#python-package-dependencies"
AWS Lambda	"Re: Frequency of Lambda Execution Environment updated? Boto3 really out of date
Thanks.  Unfortunately, that also creates unnecessary bloat for a function, even if it does work this way.

Hoping that this can be updated in the near future."
AWS Lambda	"Lambda connect to mssql
Can anyone provide some sample code on connecting to MSSQL (not rds) server"
AWS Lambda	"Re: Lambda connect to mssql
Hi,

Here is a sample code for connecting mysql server and query table using runtime Node.js 6.10.

'use strict';
 
const mysql = require('mysql');
 
exports.handler = (event, context, callback) => {
  const connection = mysql.createConnection({
    host: 'sql01.freemysqlhosting.net',
    user: 'sql12345678',
    password: '********',
    database: 'sql12345678'
  });
 
  connection.connect();
  
  connection.query('SELECT * FROM test_table', (error, results) => {
    if (error) {
      console.log('fail:');
      console.log(error);
      callback(error, null);
    } else {
      console.log('success:');
      console.log(results);
      connection.end((err) => {
        if (err) {
          console.log('fail:');
          console.log(err);
          callback(err, null);
        } else {
          callback(null, results);
        }
      });
    }
  });
};"
AWS Lambda	"Re: Lambda connect to mssql
Im still having issue trying to use lambda with Python (pyodbc) connecting to *MS*SQL

I'm getting the following error at execution and I already zipped and uploaded this so file (not the folder)

libodbc.so.2: cannot open shared object file: No such file or directory

anyone know why and how to fix this?

Edited by: helloworld232232 on Jun 22, 2017 1:29 PM"
AWS Lambda	"Re: Lambda connect to mssql
Sorry, I misread. It's an example for connecting MSSQL using Node.js. To install a workable pyodbc with MS SQL ODBC driver with the lambda package seems very complicated. I tried to pack pymssql into lambda pyton2.7 deployment pacakge on an Amazon Linux AMI EC2 instance, it works fine.

What I had done are:
1. create an Amazon Linux AMI EC2 instance.
2. yum install freetds-deve
3. pip install pymssql
4. copied libsybdb.so.5
5. pack all shared libraries and python site-packages with the lambda deployment package
6. update lambda function code
7. test on AWS lambda console

Here is the sample code of python using pymssql to connect MS SQL and fetch data:
import pymssql
 
def lambda_handler(event, context):
    # TODO implement
 
    server = 'server'
    user = 'user_id'
    password = 'password'
 
    conn = pymssql.connect(server, user, password, ""dbname"")
    cursor = conn.cursor()
    cursor.execute('SELECT * FROM test_table')
 
    rows = []
 
    for row in cursor:
        print('row = %r' % (row,))
        rows.append(row)
 
    conn.close()
 
    return rows


And here is an example for connecting MSSQL using Node.js, Packing deployment package support MSSQL for Node.js is more easy than python.
'use strict';
 
const sql = require('mssql');
 
exports.handler = (event, context, callback) => {
  const config = {
    user: 'username',
    password: 'password',
    server: 'server',
    database: 'database',
  };
 
  sql.connect(config, (err) => {
    if (err) {
      console.log(err);
      callback(err);
    } else {
      const req = new sql.Request();
      req.query('SELECT * FROM test_table', (error, result) => {
        if (error) {
          console.log(error);
          callback(error);
        } else {
          console.log(result);
          sql.close();
          callback(null, result.recordset);
        }
      });
    }
  });
 
  sql.on('error', (err) => {
    console.log(err);
    callback(err);
  });
};


Edited by: yihua1218 on Jun 22, 2017 11:59 PM

Edited by: yihua1218 on Jun 23, 2017 3:09 AM"
AWS Lambda	"Re: Lambda connect to mssql
Thank you yihua1218 for the detailed explanation. I created the ec2 install but having issue with steps 
4. copied libsybdb.so.5
5. pack all shared libraries and python site-packages with the lambda deployment package

I can't find the libsybdb.so.5 and not sure the shared libraries. Can you attach your sample deployment package? I can upload it here and test than use it as reference.

Many thanks in advance."
AWS Lambda	"Re: Lambda connect to mssql
Here is the dropbox download link of the connectMSSQL.zip file which is an example of lambda runtime python2.7 for connecting MS SQL Server with this message.

https://www.dropbox.com/s/jrxl7jsqab3wo2p/connectMSSQL.zip?dl=0"
AWS Lambda	"Re: Lambda connect to mssql
I had tried to run python function that you provided and I got next error:

{
""errorMessage"": ""Unable to import module 'lambda_function'""
}
Unable to import module 'lambda_function': No module named 'pymssql'

I can't find the way to install pymssql on lambda function."
AWS Lambda	"Re: Lambda connect to mssql
The dropbox link doesn't work anymore. Does anyone have a package for pymssql that can be used on lambda?

Edited by: edwinevans on Nov 13, 2018 10:31 AM"
AWS Lambda	"Re: Lambda connect to mssql
The file is inside a hidden directory:
 ls venv/lib64/python2.7/site-packages/.libs_mssql/

Copy it to the your package, zip and upload to lambda"
AWS Lambda	"Lambda using Nodejs only returning 502 and no error information
Attached files are my nodejs (v6.10) files for Lambda QueryString & Resize functions. I only get 502 back when I try to request an image however. And it says ""The Lambda function result failed validation: The specified URI is in an invalid format. ""

QueryString function has 128 MB memory.
Timeout 1s

Resize function has 1024 MB memory.
Timeout 10s

From logging I only get this:

QueryString function test:
START RequestId:  Version: $LATEST
2019-02-19T10:13:14.397Z		=== QUERY STRING ==>
2019-02-19T10:13:14.397Z		request.uri
2019-02-19T10:13:14.397Z		media/catalog/product/3/0/30007901221/164x/webp/30007901221.jpg
2019-02-19T10:13:14.397Z		 
2019-02-19T10:13:14.397Z		prefix
2019-02-19T10:13:14.397Z		media/catalog/product/3/0/30007901221
2019-02-19T10:13:14.397Z		 
2019-02-19T10:13:14.397Z		realImageName
2019-02-19T10:13:14.397Z		30007901221
2019-02-19T10:13:14.397Z		 
2019-02-19T10:13:14.397Z		imageSize
2019-02-19T10:13:14.397Z		164
2019-02-19T10:13:14.454Z		 
2019-02-19T10:13:14.454Z		headers
2019-02-19T10:13:14.454Z		text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,/;q=0.8
2019-02-19T10:13:14.454Z		 
2019-02-19T10:13:14.454Z		extension
2019-02-19T10:13:14.454Z		jpg
2019-02-19T10:13:14.454Z		 
2019-02-19T10:13:14.454Z		fwdUri
2019-02-19T10:13:14.454Z		media/catalog/product/3/0/30007901221/164x/webp/30007901221.jpg
2019-02-19T10:13:14.454Z		 
END RequestId: 
REPORT RequestId: xxx	Duration: 68.02 ms	Billed Duration: 100 ms 	Memory Size: 128 MB	Max Memory Used: 20 MB	

Resize function test:
2019-02-19T09:56:11.427Z		=== RESIZE ==>
2019-02-19T09:56:11.427Z		prefix
2019-02-19T09:56:11.427Z		media/catalog/product/3/0
2019-02-19T09:56:11.427Z		 
2019-02-19T09:56:11.427Z		requiredFormat
2019-02-19T09:56:11.427Z		webp
2019-02-19T09:56:11.427Z		 
2019-02-19T09:56:11.427Z		imageName
2019-02-19T09:56:11.427Z		30007901221
2019-02-19T09:56:11.427Z		 
2019-02-19T09:56:11.427Z		width
2019-02-19T09:56:11.427Z		164
2019-02-19T09:56:11.428Z		 
2019-02-19T09:56:11.428Z		contentType
2019-02-19T09:56:11.428Z		image/webp
2019-02-19T09:56:11.428Z		 
2019-02-19T09:56:11.428Z		S3 key
2019-02-19T09:56:11.428Z		media/catalog/product/3/0/30007901221/164x/webp/30007901221.jpg
2019-02-19T09:56:11.428Z		 
2019-02-19T09:56:11.428Z		originalKey
2019-02-19T09:56:11.428Z		media/catalog/product/3/0/30007901221.jpg
2019-02-19T09:56:11.428Z		 
2019-02-19T09:56:12.618Z		Not sure how we got here.. :{}
END RequestId: 
REPORT RequestId: xxx	Duration: 1257.10 ms	Billed Duration: 1300 ms 	Memory Size: 1024 MB	Max Memory Used: 130 MB

It doesn't seem to create the image in the location I specified.

The request url should look like:
<edge_domain>/media/catalog/product/3/0/30007901221/164x/SEO-name.jpg

The original image is located on S3:
media/catalog/product/3/0/30007901221.jpg

And the resulting image should be placed at:
media/catalog/product/3/0/30007901221/164x/<webp|jpg>/30007901221.jpg

It has created some images but it seems to refuse to create any more. Not sure if it's because I broke it during development or if we have hit some invisible limit.

At some point it created some kind of folder without name, which I wasn't allowed to delete, if I hovered on it I just see a lot of underscores ""______"" and then there was one image located there nested similar to what I want. I managed to get rid of this folder by going in to that folder and delete it's contents, then the whole folder just vanished.. It hasn't recreated it afterwards either.

Our current plan is ""Basic"" since we want to test this tool first before deciding if we should use it in production.

Edited by: OZZ1E on Feb 19, 2019 3:07 AM

Edited by: OZZ1E on Feb 19, 2019 3:13 AM"
AWS Lambda	"Re: Lambda using Nodejs only returning 502 and no error information
So it turns out that:

the OriginalKey CANNOT start with / (S3.getObject)
the Key HAS to start with / (S3.putObject)


Using a test case inside the web interface for Lambda at AWS doesn't reveal this at all! You can start with slash or not it displays success anyway...

The error is stashed away deeply in AWS useless interface.

1. In the Header you have to pick the correct region - this might not correlate with where you are physically located. In my case I should pick Frankfurt for some reason (I am in EU but not near Frankfurt)
2. CloudWatch > Log Groups
3. Pick the one containing ""LamdaEdge""
4. Sort by date/time
5. Open the latest ones one by one and Look for a string ""ERROR Validation error:"" (you cannot search for this - search doesn't work at all)
6. ""ERROR Validation error: Lambda function result validation failed, the specified URI is in an invalid format, uri must start with '/'""

""Funnily"" enough trying to fetch the image via the browser it only outputs the first part of this error: ""ERROR Validation error: Lambda function result validation failed, the specified URI is in an invalid format"" - which gives you zero information.

I also had to guess if it was OriginalKey or Key causing it..

Did you intentionally make this tool as hard to use as possible?? It's inconsistent! I assume the Web Lambda test interface adds the initial / when it should be there, and removes it when it shouldn't which just causes this issue to be even harder to find!!

I am so happy that I can pick region also for my global code..

Edited by: OZZ1E on Feb 19, 2019 10:44 PM"
AWS Lambda	"Re: Lambda using Nodejs only returning 502 and no error information
Seems like it's again placing the images in this empty name folder.. Or is this just a UI bug?

Also if I enable GZIP on Cloudfront I get an error ""The Lambda function returned an invalid json output, parsed json should be an object type."" Edit: seems like you shouldn't GZIP images: https://webmasters.stackexchange.com/a/57590 - so this part we can skip  

For some reason it doesn't return the contentType as 'image/webp' as it should either any more, it always returns 'image/jpeg'..

It always returns jpeg even though I use Chrome which supports webp and
X-Cache: Error from cloudfront

Edited by: OZZ1E on Feb 20, 2019 3:09 AM

Edited by: OZZ1E on Feb 20, 2019 4:53 AM"
AWS Lambda	"Re: Lambda using Nodejs only returning 502 and no error information
CloudFront > Behaviors > Edit > Whitelist Headers > Accept

now I get webp.. just wondering what was caching jpeg as it's only me that is using this atm.."
AWS Lambda	"Problem with port 25 on lambdas
Hi all,
I'm having problems with lambdas and use of port 25. 
I use port 25 not to send email nor spam people.
I need to use it in order to be able to use this npm package in my node-based lambda https://www.npmjs.com/package/email-exists.

It uses telnet to connect to the mail servers and check if a email is not only valid, but in use.

My question is, how can i address the throttling problem on my lambdas ? 
I already submitted the Limit Increase: SES Sending Limits ticket, but that is for ec2 instances and does nothing to lambda to my knowledge.

If anybody has infos on how to resolve this problem let me know. 

P.S: Also im not able to change the port in use as i read in other forum posts because the package needs to use port 25 in order to work."
AWS Lambda	"Logging Custom Metric to CloudWatch takes too long
Hi all,

I implemented a Lambda function in Python which is called by the API Gateway. It basically provides stats for an interactive reporting system and as such it must be as fast as possible in order to maintain a pleasant user experience. In case the request is valid a data store is queried. At one point, I decided to log the duration of this query to CloudWatch as custom metric using boto3 and code similar to the following one:
ts = time.time()
cloudwatch_logger.put_metric_data(
    Namespace=""MyNameSpace"",
    MetricData=[
        {
            ""MetricName"": ""request-duration"",
            ""Value"": duration,
            ""Unit"": ""Seconds""
        }
    ]
)
logger.info(""Call to Cloudwatch Logger took %2.3f seconds."", time.time() - ts)


I admit, that I was a little bit paranoid by logging the duration of put_metric_data, however the results were quite interesting:
[INFO] 2019-02-20T06:00:36.331Z 800860c0-4af0-4863-81a1-81547e950d56 Call to Cloudwatch Logger took 0.194 seconds.
[INFO] 2019-02-20T06:00:37.337Z 88955441-fffc-447c-aebd-1ad974e02c73 Call to Cloudwatch Logger took 0.013 seconds.
[INFO] 2019-02-20T06:00:38.997Z 3861f438-560e-420b-a153-14e0ebae06fc Call to Cloudwatch Logger took 0.025 seconds.
[INFO] 2019-02-20T06:01:48.870Z 0f1483d3-bdf6-4115-9c18-652ba50a107d Call to Cloudwatch Logger took 0.158 seconds.
[INFO] 2019-02-20T06:01:49.836Z d02b5553-8ebf-4092-aae8-98bfd81a406f Call to Cloudwatch Logger took 0.020 seconds.

Request durations around 20 ms are acceptable but user experience suffers from delays of nearly 200 ms.

Did anybody of you ever observe a behaviour like that?

For me, the perfect solution to this problem would be a fire-and-forget architecture where CloudWatch logging does not affect the performance of the service at all. Therefore I considered the following ideas:


I thought about launching a separate Python process for doing the CloudWatch logging. However in case the original handler process is faster, the logging process would be frozen AFAIK.
I also thought about invoking a second lambda function for doing the CloudWatch logging as asynchronous call. However that would mean making a synchronous call using boto3 in order to launch Invoke, which may result in a similar delay.


Did anybody of you ever find an efficient solution to this problem?

Thank you very much in advance
Best regards
Jay"
AWS Lambda	"Cannot delete Lambda@Edge
I am getting the following when trying to delete a Lambda@Edge (or its version):
An error occurred when deleting your function: Lambda was unable to delete arn:aws:lambda:us-east-1:123456789123:function:my-function:1 because it is a replicated function. Please see our documentation for Deleting Lambda@Edge Functions and Replicas.

The CloudFront distribution associated with the function has been deleted more than 10 days ago. Any ideas?"
AWS Lambda	"25 second cold starts
I have Python 3.6 lambda functions deployed to my API.  Normally they take < 1 second to initialize, but I'm now seeing occasional 25+ second initialization times according to AWS X-ray.  What could be causing this?  I'm not inside a VPC.

X-Ray trace IDs: 1-5c6df1f2-883ca188939bf858a1cb6968 and 
1-5c6df4b7-63a943b4e1760896265b2e80
for example.

thank you

Edited by: zeboioadmin on Feb 20, 2019 8:17 PM"
AWS Lambda	"Endpoint Connection Error when Too Many Requests
When I make about 250 concurrent invocations using the boto3 client in Python 2.7, I get the ""botocore.exceptions.EndpointConnectionError: Could not connect to the endpoint URL"". Strangely, if I lower the number of invocations to like 200, I no longer have any issues. When I check the Lambda Management Console, I see no errors or throttling(limit is set to 1000). I am using ""concurrent.futures.ThreadPoolExecutor"" to make the multiple invocations. I also have my endpoint region set correctly.

EDIT: So it looks like if I try to invoke 300 calls to the function, only about 245 of the invocations get through to the Lambda, and I am guessing that the other invocations fail to connect to the endpoint. Anyone know why that could happen?

Edited by: Qual on Feb 20, 2019 8:14 PM"
AWS Lambda	"Configuring multiple lambda execution roles or permissions per alias
Hi all,

looking for advice how to best accomplish resource/permission separation across multiple stages for lambda functions.

Brief use-case: 
  - several envs, dev/staging/production
  - currently envs separated via lambda function aliases
  - lambda functions themselves using other AWS resources, S3 buckets or SQS queues, e.t.c.

What we want is to limit resource access per alias. E.g. function aliased as DEV can't access production S3 bucket. And vice versa.

After some try and fail attempts it seems there can be only single IAM role configured per lambda function. Which doesn't play very nicely with resource separation.

Probably we overlooked something? What are best practices to achieve it if possible?

Thank you."
AWS Lambda	"Re: Configuring multiple lambda execution roles or permissions per alias
up. Anybody?"
AWS Lambda	"Re: Configuring multiple lambda execution roles or permissions per alias
You're correct, there can only be one IAM role per function. If you require that a dev version of the function needs different access than a stage or prod version, you need different functions with separate roles."
AWS Lambda	"Re: Configuring multiple lambda execution roles or permissions per alias
Alternatively, you'll need to handle this programmatically inside your own code.  You can tell what alias it is by reaching into StageVariables.  So if you want to not talk to the Prod S3 if you are in ""dev"" alias, then gate that off when you go to make the call to S3."
AWS Lambda	"Re: Configuring multiple lambda execution roles or permissions per alias
The OP did specify that, ""function aliased as DEV can't access production S3 bucket."" which would not be served by choosing what to access programmatically."
AWS Lambda	"Re: Configuring multiple lambda execution roles or permissions per alias
+1
Just recently ran into this myself. I can't believe this functionality is missing!"
AWS Lambda	"Support of Java 9 in Lambda
Can anyone say if this is coming?
Mostly I'm interested in it because of the possibility that it might lower the cold start times."
AWS Lambda	"Re: Support of Java 9 in Lambda
I certainly hope they do this soon. It's not just that AOT and discarding disused modules should improve cold start times. Public updates to Java 8 end in September of 2018."
AWS Lambda	"Re: Support of Java 9 in Lambda
I think I can see where they're going with this:
https://aws.amazon.com/about-aws/whats-new/2019/02/amazon-corretto-11-is-now-in-preview/
All we need is lambda to support that, which certainly looks like that's where they're headed."
AWS Lambda	"502 malformed lambda proxy response
hi guys, i have another problem with my lambda function. I think i deployed it correctly but when testing the api i get a 502 malformed lambda proxy response. I've already looked at the documentation but cant find any problems in my code. Anyways here is my code who has been frustrating me for days now:
const AWS = require('aws-sdk');
var s3 = new AWS.S3();

exports.handler = (event, context, callback) => {

     function putObjectToS3(bucket, key, data){
    var s3 = new AWS.S3();
        var params = {
            Bucket : ""mybucket"",
            Key : key,
            Body : data
    };
    s3.upload(params, function(err, data){
       if(err) {
           callback(err, null);
       } else {
           let response = {
        ""statusCode"": 200,
         headers: {
        ""Accept"" : ""Application\json"" },
        ""body"": JSON.stringify(data),
        ""isBase64Encoded"": false
    };
           callback(null, response);
    }
    });
};}

Some help would really be appreciated!

Edited by: Bautista on Feb 18, 2019 12:15 PM"
AWS Lambda	"Re: 502 malformed lambda proxy response
Hi Bautista,

As per AWS documentation - https://aws.amazon.com/premiumsupport/knowledge-center/malformed-502-api-gateway/

For API Gateway to handle a Lambda function's response, the response must be JSON in this format:

{
    ""isBase64Encoded"": true|false,
    ""statusCode"": httpStatusCode,
    ""headers"": { ""headerName"": ""headerValue"", ... },
    ""body"": ""...""
}"
AWS Lambda	"Re: 502 malformed lambda proxy response
Hi!

Thanks for your response. I think i basically have the same response. Or is there an issue with my body or headers?"
AWS Lambda	"UpdateFunctionConfiguration body size limit is too low
I have several customers — using https://github.com/apex/up — whom have hit the UpdateFunctionConfiguration size limit of 5120 bytes due to environment variables. Is there any possibility of increasing this limitation? Even 100-200% would go quite a long way I think, it seems to be a reasonably common problem.

cheers"
AWS Lambda	"Result when Lambda function hits memory limit?
I have a Lambda function with a 2.5 GB memory limit. I've noticed that it occasionally fails, and in those cases, the logs indicate that the function with about 2.5 GB memory usage. Bumping up the limit to the max 3 GB memory limit seems to resolve the issue (for now). Is this expected behavior, and is there any way for Lambda to signal that the error was due to the memory limit in the logs?"
AWS Lambda	"Re: Result when Lambda function hits memory limit?
Hi there,

When the lambda function fails due to insufficient memory the error ""Process exited before completing request” appears in the logs. Note that, Lambda function could produce such error due to some error (Syntactical or Runtime error) in the code as well. Hence, you can confirm the same from the logs using the Memory Size and the Max Memory Used attributes. If the Max memory used is same as Memory Size then, you should be hitting the insufficient memory issue.

The following snippet of a sample log:

'REPORT RequestId: 902b4063-eebe-11e7-bd5a-335ec0*******        Duration: 805.32 ms        Billed Duration: 900 ms Memory Size: 128 MB        Max Memory Used: 128 MB’

Hope this helps. Let us know if you have any further queries."
AWS Lambda	"Re: Result when Lambda function hits memory limit?
Just out of curiosity, is the failure from a single execution or during peak load ?
is there any alarm / throttling set up ?"
AWS Lambda	"Implementing an Rest API with Lambda and S3 to upload and save Json Data
Hello guys!
At the moment i try to build an api which lets authorized users upload and retrieve data from my S3 bucket. I tried to do so by creating an api which calls a lambda function. This lambda function should save the data sent convert to a json file and save them in the S3 Bucket.
Im currently stuck with developing my lambda function. It obviously doesnt work and i am really new to AWS. 

What it looks like now:
const AWS = require('aws-sdk');
var bucket = new AWS.S3();

exports.handler = (event, context, callback) => {

     let data =JSON.parse(event.body);

     var params = {
       ""Body"": data,
       ""Bucket"": ""smartmatressbucket"",
      // ""Key"": ?? 
    };
    bucket.upload(params, function(err, data){
       if(err) {
           callback(err, null);
       } else {
           let response = {
        ""statusCode"": 200,
        ""headers"": {
            ""my_header"": ""my_value""
        },
        ""body"": JSON.stringify(data),
        ""isBase64Encoded"": false
    };
           callback(null, response);
    }
    });

};
https://imgur.com/a/jAAAM8u - Link to the code for better clarity

so my question is: how can i adapt the code so it will fulfill my requirements? how can i add keys to the uploaded files? How can i add an timestamp to the data or the S3 entry? The sent data will most probably be an int array and a string.

Thanks for your help in advance!"
AWS Lambda	"Re: Implementing an Rest API with Lambda and S3 to upload and save Json Data
Hi Bautista,

From a put sample JSON, it does have timestamp and authorization key attributes. Did you try fetching below attributes from the JSON ?

PUT /my-image.jpg HTTP/1.1
Host: myBucket.s3.amazonaws.com
Date: Wed, 12 Oct 2009 17:50:00 GMT
Authorization: authorization string
Content-Type: text/plain
Content-Length: 11434
x-amz-meta-author: Janet
Expect: 100-continue
https://forums.aws.amazon.com/

Also, isn't the correction method s3.upload ?

s3.upload(params, function(err, data) {
  console.log(err, data);
});

Hope this helps.

~Rahul"
AWS Lambda	"AWS Lambda Library Issue
I have dependencies for image rendering which should be installed using yum not by pip on EC2. SO when i package my zip for lambda with libraries how should i include those libraries in my zip? Any help ?

Edited by: adithyadinesh96 on Feb 18, 2019 3:36 AM"
AWS Lambda	"Lambda custom runtime lifecycle questions
Hi,

I think the Lambda custom runtime support added last month is great.  I have a few questions around how the runtime lifecycle works, so I can make best use of it.

To explain the basis for some of my questions, when considering writing the boostrap process for one of my projects, I instinctively lean toward a boostrapper that can asynchronously handle multiple requests simultaneously. If supported by Lambda, this would be a good thing for Amazon, since I'd be using less resources for more Lambda requests, which means more money / less cost for Amazon 

So, my questions...

1. Can my bootstrap application process multiple requests at once?  ie can I fetch /runtime/invocation/next multiple times to get additional jobs, before updating /runtime/invocation/AwsRequestId/response? or will the endpoint only return the same job repeatedly, or return an error, or not return until the existing outstanding job is updated, or assume that I crashed and invalidate the later /runtime/invocation/AwsRequestId/response updates?

2. Assuming yes to #1, how are such requests billed?  It would seem like each request (ie AwsRequestId) could be billed based on time between the fetch and the update, however, initialisation is also billed, so I don't see how you could apportion that cost... unless initialisation is measured from start till the first fetch? (I guess that would make sense)

3. What happens if there's nothing to fetch?  Will the endpoint take a long time respond (ie perform a ""long poll"" in the SQS terminology) or the bootstrapper simply get killed? Presumably both, its really a question of how long is the poll? immediate? seconds? minutes?.  Not expecting Amazon to document the actual time (probably varies based on all sorts of internal metrcis), but a high-level understanding of what to expect would be good.  The API specification does not record any response type to indicate ""nothing available"".

4. When the bootstrapper does get killed, are there any grace signals sent first? eg a SIGINT, SIGTERM, SIGUSR1?  I wouldn't expect to have time for any real cleanup, but at least being to log something could be valuable.

Thanks! 

Edited by: Paul Colby on Dec 20, 2018 11:29 AM"
AWS Lambda	"Re: Lambda custom runtime lifecycle questions
Ok, I've done some playing, and managed to answer my own questions.  For anyone interested:

1. No, the bootstrap application can only fetch one request at a time.  Multiple successive fetches of /runtime/invocation/next without calling /runtime/invocation/AwsRequestId/response result in the same Lambda job being returned immediately every time (up until the timeout is reached).

2. N/A, since #1 is no.

3. If there are no jobs to fetch, the bootstrapper gets killed.  Interestingly, the death occurs at the next fetch time, not earlier.  That is, if we update the response, then sleep for a while, then fetch the next (non-existent) job, the script gets killed in the fetch, not in the sleep.  Not really surprising, but interesting. I do wonder if there's a risk of people exploiting that dead-time to do further work (I certainly wouldn't recommend it), but presumably AWS either had protections in place, or more likely, simply charges for that time too.

4. It appears that no trappable signals are sent at all.  I tried trapping all valid signals, but the script is simply killed without warning.  Again, not surprising, but good to know.

Cheers."
AWS Lambda	"Re: Lambda custom runtime lifecycle questions
Thanks for this post, I came here looking for just these answers!"
AWS Lambda	"Re: Lambda custom runtime lifecycle questions
Glad I could help (more than just myself)"
AWS Lambda	"AWS Amplify Console unable to attach lamda@edge to Cloudfront distribution
Hi,

I have a React project running with Amplify using the hosting functionality. I want to use Amplify Console for Continuous Delivery but I can’t attach a lambda@edge if I configure the hosting via the Console. However, doing the deployment via Amplify CLI with amplify add hosting && amplify publish
 it creates a *.cloudfront.net distribution and it works (I’m able to successfully attach lambda@edge functions).

This behaviour is odd and highly misleading, coming from two tools that are supposed to work “together”. Looks like the Cloudfront distribution created by Amplify Console (*.amplifyapp.com) is severily limited and totally disconnected from the CLI.

Is there any way to attach these lambdas to the Console?"
AWS Lambda	"Re: AWS Amplify Console unable to attach lamda@edge to Cloudfront distribution
moved to : https://forums.aws.amazon.com/thread.jspa?messageID=889700"
AWS Lambda	"Is there a lambda local testing server/hosting environment?
I am working to build a custom run-time and was wondering if there's a dummy lambda environment that would set the environment vars and respond to the defined urls like 
http://AWS_LAMBDA_RUNTIME_API/runtime/invocation

which can be run locally to test against?"
AWS Lambda	"Loading libMagickCore via Java JNA on AWS Lambda
I'm currently trying to deploy the latest version of libvips[1] (`8.7.4`) to an AWS Lambda Java 8 Function. The function defined a JNA interface to libvips. 

We forked the libvips-lambda[2] GitHub repository, which provided a build-chain for an older version, and updated it to work for `8.7.4` (see the `develop` branch in our fork[2]).

We then moved libvips and all it's dependencies into a folder called `lib` in our AWS Lambda deployment ZIP Archive and set these environment variable: LD_LIBRARY_PATH: /var/task/lib
.

Then we try to load the library in our Java function:

Native.load(""lib/libvips.so"", ...


This eventually leads to the following exception:

libMagickCore-7.Q16HDRI.so.2: cannot open shared object file: No such file or directory: java.lang.UnsatisfiedLinkError
java.lang.UnsatisfiedLinkError: libMagickCore-7.Q16HDRI.so.2: cannot open shared object file: No such file or directory
at com.sun.jna.Native.open(Native Method)
at com.sun.jna.NativeLibrary.loadLibrary(NativeLibrary.java:288)
at com.sun.jna.NativeLibrary.getInstance(NativeLibrary.java:427)
at com.sun.jna.Library$Handler.<init>(Library.java:179)
at com.sun.jna.Native.load(Native.java:591)
at com.sun.jna.Native.load(Native.java:565)


The strange thing is, libMagickCore-7.Q16HDRI.so.2
 is present in our AWS Lambda function in the `lib` directory. And as far as I understand, setting the `LD_LIBRARY_PATH` ENV to this directory should show JNA where to load native dependencies. 

Is there anything wrong in my Lambda setup or the assumption that JNA should find the libraries when LD_LIBRARY_PATH
 is set?

  [1]: https://github.com/libvips/libvips
  [2]: https://github.com/docu-tools-developers/libvips-lambda/tree/develop"
AWS Lambda	"How to catch UnobservedTaskException .net SqlClient error before Lamba?
We have a .net core 2.1 Lambda function that's seeing sporadic connection timeout errors in both the .net SqlClient and Postgres Npgsql provider.  Both db clients appear to be successfully retrying the connection to the database before passing it up to our code which continues execution without being aware of the connection timeout error.  The problem is that Lambda is being notified of the UnobservedTaskException and logging it, which alerts us before we can ""handle"" it.  

We added our own event handler using TaskScheduler.UnobservedTaskException += MyTaskScheduler_UnobservedTaskException that does get notified of the event that we log ourselves.

We are using the default timeout values which is 15 seconds on both providers.

Has anyone encountered this and figured a way to 'handle' it?

Edited by: robrichards on Feb 11, 2019 8:49 AM"
AWS Lambda	"Lambda functions suddenly starts timing out
Hi,

We're experiencing a rather weird issue with our Lambda-functions that may look like a bug in the Lambda service. The issue is that a Lambda function (which has plenty of both time and memory, i.e 15 seconds and 512 MB) suddenly starts timing out. Judging from the CloudWatch-logs, the timeout may occur after having executed a simple print statement, and sometimes even before having executed a single statement. When this happens, every consecutive invocation of the same Lambda also times out. When we redeploy the Lambda or alter any configurations (i.e increase or even reduce the timeout in the settings), the problem goes away, and the Lambda starts executing normally.

This has happened to several Lambda functions (ranging from very simple lambdas, to more complex ones), and it appears to be arbitrary which Lambda function is affected and when the timeouts start occurring.

Is this a known issue, and is there anything I can do to prevent this from happening?

Best regards,
Ståle

Edited by: szh on Dec 18, 2015 5:57 AM"
AWS Lambda	"Re: Lambda functions suddenly starts timing out
Not a known issue. Can you share which language this is, and if there's anything more you can associate with the transition from working to ""frozen""?"
AWS Lambda	"Re: Lambda functions suddenly starts timing out
I'm experiencing the same using Python. Code that normally runs in <5 seconds with 32mb of memory is timing out with limits of 30 seconds and 128mb of memory. Sometimes I can add an early return to my handler function to make it stop timing out but this does not always work. Either code not in the execution path is affecting job performance or the problem is intermittent. I'm attempting to bisect the code to find the problem if it's on my end."
AWS Lambda	"Re: Lambda functions suddenly starts timing out
Okay, from editing code I determined two things:

1. If there is a function called ""init"", it will be called whether the handler calls it or not. Anything printed in this call will not show up in the output, but the contents of that function has an effect in the form of the timeout condition I described.

2. A call to boto3's ec2.describe_tags times out almost every time. If I remove that call, things start working again."
AWS Lambda	"Re: Lambda functions suddenly starts timing out
I use Python as well. I really don't have much to associate with the transition from a working to a frozen state other than the fact that it happens on a very irregular basis. The last time it happened I had two separate lambdas that froze within a relatively short amount of time (like a day or two or something like that), but it might very well have been a coincidence. Both of the lambdas had been operating normally for weeks. I'm sorry I can't give you something more concrete here.."
AWS Lambda	"Re: Lambda functions suddenly starts timing out
I have also been experiencing intermittent waves of timeouts on functions which have no business timing out.  When working properly, they will run sub 600ms and sub 20mb. 

 When the rash of failures hit, I only see a single console log statement, then a timeout after 3 seconds.  The console print is a statement which lies outside of the lambda handler, at the top of the nodejs module.  I have numerous logging statements early in the handler execution, so I should certainly be seeing more log entries if Lambda was functioning properly.

As mentioned above, I have had some success restoring normal behavior by re-uploading the lambda functions.  These waves are happening frequently enough that I am considering alternatives to AWS/Lambda.  I have posted this issue elsewhere in the forum, and all I ever get is ""increase memory"" or ""increase timeout"" suggestions, when it is clear something more is afoot."
AWS Lambda	"Re: Lambda functions suddenly starts timing out
I'm marking this question as unanswered because it is still unclear what's causing this issue, and no bugfix has been confirmed by AWS."
AWS Lambda	"Re: Lambda functions suddenly starts timing out
Update: I just recently had two Python lambdas that froze at approximately the exact same time. It has been well over a month ago since the last time we had a frozen lambda. As usual, updating the function configuration puts the lambdas back in to a working state. I would highly appreciate any feedback from the AWS team on what's causing this issue, and if there is anything I can do to prevent it.

Best regards,
Ståle

Edited by: szh on Feb 15, 2016 4:11 AM"
AWS Lambda	"Re: Lambda functions suddenly starts timing out
Hi,
Please let us know if you are still experiencing this issue. Thanks!"
AWS Lambda	"Re: Lambda functions suddenly starts timing out
I'm also having this issue with Node.js.  Did anyone ever find out a root cause or a solution?"
AWS Lambda	"Re: Lambda functions suddenly starts timing out
Hi,

We are also experiencing timeouts, almost hourly around 40-50th min, there was no correlation against invocation sum. In our instance, we have SNS -> Lambda integration with 3 retries at 1 min delay on exponential back off.

We noticed that at periods in the day it'd start having these timeout periods. The first attempt, the lambda invocation wouldn't even get past the first line, which just outputs the SNS message. The second and third attempt, would have got the message, but never got much further.. and just times out as well. Memory usage is than 50%.

Edited by: kcjl519 on Mar 16, 2017 9:28 PM"
AWS Lambda	"Re: Lambda functions suddenly starts timing out
Hi

I am having this same issue with NodeJS. My Lambda uses the FB SDK and MySQL to RDS to save a register. 

Like some said, either uploading the last file again or changing the configuration usually works so I am assuming the Lambda just freezes. 

I do not see any other log into the console besides the lambda timing out. When it works, all the work is done in under a second and then I get timeouts all the time. 

Unless I can fix this and get a reliable output I might need to consider something else than lambda and I really don't want to re write 30 functions."
AWS Lambda	"Re: Lambda functions suddenly starts timing out
Alright, so I found something that cause this. In my case, my lambda function was working perfectly and I found that it was starting to get timeouts as soon as an unhandled exception happened and I didn't call the callback function. Consequent calls will not work an give timeout. 

I am using   context.callbackWaitsForEmptyEventLoop = false so I am guessing the callback is not working and it gets blocked. 

While this might be happening from one error or mistake, something must be happening on the background that makes the context/callback freeze. 

So I just solved it by adding a try/catch and calling the callback(error) if I found an exception, which I thought Lambda was handling on its side."
AWS Lambda	"Re: Lambda functions suddenly starts timing out
We're noticing this happening on our nodejs 4.3 lambdas. It seems to be related to a specific lambda machine. To clarify, if we console log the machine that the code is running on, timeouts always occur on the same machine. So we may only see 1 out of every 5 fail, but the failures all occur on the same executing machine, and the successful runs all execute on other machines. Further, if we republish the lambda with a different config (like up the timeout) it forces the lambda to execute on a new machine and this seems to fix the timeouts (until another bad lambda executor machine is brought up)."
AWS Lambda	"Re: Lambda functions suddenly starts timing out
To ajones-miovision,

Can you include the method you used to log the machine information that the code is running on? My team is also experiencing intermittent timeouts on a nodejs 4.3 lambda and we would like to try and do the same thing on our end."
AWS Lambda	"Re: Lambda functions suddenly starts timing out
Sorry, I said I log the machine, but I'm not actually logging any machine specific information like a hostname. What I do is instantiate a random number in the initialization section of the javascript code (outside of the handler function). Initialization/header code only gets called once per machine. I console.log this value inside the handler function and then you can tell which invocations are executed on the same machine."
AWS Lambda	"Re: Lambda functions suddenly starts timing out
+1"
AWS Lambda	"Re: Lambda functions suddenly starts timing out
I'm experiencing similar issue with Python 3.6, boto3.
Lambda is set for 5 minutes, 512Mb.
The first RequestResponse invocation in series of such invocations times out in the first 0.6 seconds, using about 30Mb (calling all of them through Python threads).
The rest of the invocations, except for the first one, work fine.

I have my own timeout handler within lambda to prevent auto retries. 
The timer for it is set for the same 5 minutes (299 seconds).
It's being activated when the timeout occurs, meaning after 6 seconds of execution, which means there's a problem with function timing for some reason.

The issue is on a critical path for me.
Please let me know if you need more info to try to investigate.
Thanks!

Edited by: amacenov on Feb 11, 2019 7:37 AM"
AWS Lambda	"Lambda NodeJS 8.1  and HTTP Status  200
Trying to go serverless with apigateway but having an issue getting Lambda endpoints to return any HTTP Status Code other than 200.  I can of course return JSON with status set to whatever I want, but I need to set the HTTP Status to match.  

exports.handler = async (event, context, callback) => {
 
           return new Promise((resolve,reject) => {
                      findData().then((data) => {
                                // found data
                                resolve({
                                        status: 200,
                                        body: data
                                 });
                      },(err) => {
                               // didn't find anything
                               reject({
                                        status: 404,
                                        error: {
                                                message: 'not found'
                                       }
                                });
                       });
              });
};

I cannot figure out how to get lambda and apigateway to return HTTP Status Code 404 in the error case.   I have also tried the documented
             {
                    statusCode: 404,
                    headers: {},
                    body: err
             }

But that does not work either.  I have also change the error side of the promise to call resolve (instead of reject)...it of course works but the HTTP Status code is always 200 no matter what I try.

I am open to using Response Mappings, but that isn't so straight-forward and I cannot find any examples.....

Thanks for your time.

Edited by: rjsoph on Feb 10, 2019 1:59 PM

Edited by: rjsoph on Feb 10, 2019 2:01 PM"
AWS Lambda	"Re: Lambda NodeJS 8.1  and HTTP Status  200
Found a reference that worked......

You must not select ""Lambda proxy integration"" on apigateway for this to work.....

Node 8 you call resolve and reject.....then using the below reference you setup the mappings and templates....worked perfectly for me.

https://kennbrodhagen.net/2016/03/09/how-to-return-a-custom-error-object-and-status-code-from-api-gateway-with-lambda/"
AWS Lambda	"Requiring aws-sdk in a ruby lambda causes it to hang.
This issue seems to have happened since I started breaking the project into smaller classes using require_relative.

However no matter where I put require 'aws-sdk' it always hangs (I tried up to 30 seconds). The script just sends an email using SES - should take < 1s. 

Adding some logging in the files above/below shows the lambda is loaded and the dependencies are too but then when the lambda gets loaded again for the invocation it gets stuck.

If I remove the require it doesn't hang but clearly then I cannot use AWS resources within the script."
AWS Lambda	"Redirection to an URL
Hello AWS users,

I have a function in node that has a method which returns a URL (localhost or a website) with statusCode 301., so this function is mapped with a POST API which is then called by an Angular app, so whenever button pressed in angular app I will get response as shown in attachment., saying HttpErrorResponse (Details as in screenshot) Function defined is as below

function redirect(location) {
   return {
       statusCode: 301,
       headers: {

            ""Content-Type"" : ""text/html"",
            ""location"" : location 
       }
//body : location
   };
}

I just wanted to know can this happen? like Redirection to a specific URL from Lambda function upon hitting a POST API ? or do I need to code something in Angular itself ? if yes, please guide me what exactly need to be done in Angular (routerLink with condition ? or method like canActivate() but this requires observable response, and in lambda it gives different response ) let me know how can I achieve this ?

Note:
Network tab on chrome dev console within that, I can see preview of the target URL getting loaded also in POSTMAN I can see, the result stating Response Code 200 and URL is getting loaded, but the same when I try to run my Angular app it is giving me Error as I've said earlier.

Edited by: Bhasky on Jan 7, 2019 3:13 PM IST"
AWS Lambda	"Re: Redirection to an URL
Lambda's native HTTP API does not allow for customizing responses like this ( https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html ). Whenever your code returns successfully, the Lambda client will receive an HTTP 200 response. Fortunately, you can put a simple AWS API Gateway in front of your Lambda without having to run any other infrastructure, and API Gateway can customize the responses that get sent to your caller, like sending a 301 redirect when your code returns certain responses. 

There are plenty of docs on API Gateway in its developer guide, but I think this blog post is the most suitable to your question: https://aws.amazon.com/blogs/compute/redirection-in-a-serverless-api-with-aws-lambda-and-amazon-api-gateway/"
AWS Lambda	"Re: Redirection to an URL
Thanks for the guide DavidY@AWS I'll check with this and if solved I'll mark this as closed"
AWS Lambda	"Re: Redirection to an URL
Hi David, yes with help of my co-worker, I was able to do basic redirection and thanks again for enlightening on Redirection capability of Lambda,

Summary on what I did in order to make successful redirection upon a SQL resultQuery

function success(result) {

        return {
            statusCode: 200,
            headers: {
                ""Access-Control-Allow-Origin"": ""*"", // Required for CORS support to work
                ""Access-Control-Allow-Credentials"": true, // Required for cookies, authorization headers with HTTPS

            },
            body: JSON.stringify(result)
        };
    } 

Then I just passed 

 if (qres.rows[0].password !== fieldValue2) {
            //return res; 
            console.error(`Invalid password`);

            console.log('Pass invalid');
            return success();
        }
        else 
        {
            console.log('Authentication filed: Invalid credentials');
            return success({ auth: false });  
        }

Then in angular app, 

 const sub = this.loginService.authUser(this.user)
        .subscribe(
          (data) => {
            if (data) {
              // redirect to dashboard
              console.log('Success');
              window.location.replace('http://localhost:4200/dashboard');
            } else if (!data)  {
              // show error message and stay with loginPage
              console.log('Wrong Credentials');
              window.location.replace('http://localhost:4200/login');
            }
            console.log(data);
          }
        );

Would like to close the thread . .  Thanks for the help (Still if any better alternatives are welcome)"
AWS Lambda	"can't find specific Lambda at the adding SNS subscription endpoints dropdow
Hey,

I am not sure if its an SNS or Lambda issue. but as described at the subject the problem is at the SNS GUI.
The problem:
We have a Labda that we use as a SNS endpoints for a couple of months. everything was fine until a few days ago when that Lambda has disappeared from subscription endpoints dropdown menu.
We can see that Labda at SNSs that was already configured. we can also add it from CLI (aws sns subscribe....). Looks like GUI issue...

Old subscriptions to this Lambda are working fine.

After reading the flowing Link: https://aws.amazon.com/blogs/mobile/invoking-aws-lambda-functions-via-amazon-sns/ we tried to add permission to the Lambda (Action: ""lambda:InvokeFunction"", Principal: ""sns.amazonaws.com""). It didn't helped.
Any help solving this issue will be highly appreciated. 
Thanks
Ofer"
AWS Lambda	"Why is AWS-SDK version so far behind in Lambda? No layer abilities!
TL;DR: I just spent a frustrating 2 hours trying to figure out why Lambda doesn't see publishLayerVersion in the AWS-SDK for Node. It turns out that Lambda hasn't had an SDK refresh even though AWS re:Invent 2018 rolled out a lot of new abilities.

The error I am getting is:
lambda.publishLayerVersion is not a function

As a sanity check, I decided to write some AWS-CLI to make sure publishLayerVersion really did work elsewhere, and to my surprise it failed in AWS-CLI as well. And it hit me: Lambda Layers were introduced in November, 2018 and it had been over a year since I had last updated my install of the AWS-CLI! After installing a fresh AWS-CLI, I successfully ran my first publishLayerVersion command no sweat.

This failure/success got me to thinking that the same issue - old code - may be the culprit inside Lambda as well. But surely, you Amazonians keep the SDK for Node updated don't you? HA! Nope.

The documentation shows that Lambda includes ""AWS SDK for JavaScript – 2.290.0""! Yesterday 2.400.0 was published! Now any AWS veteran knows how out-of-sync the docs can be to reality, so I verified this inside Lambda. Kudos to the documentation people: Lambda's Node SDK really IS 110 versions old!

console.log(AWS.VERSION)
// 2019-02-10T05:27:29.761Z	b9cc6eb2-e84b-506f-9d54-2bf468d70459	2.290.0

Folks, we realize you want Lambda stable, but c'mon, Lambda Layers was introduced 33 versions ago in 2.367.0 for re:Invent! wtf?

Docs: https://docs.aws.amazon.com/lambda/latest/dg/current-supported-versions.html
Changelog: https://github.com/aws/aws-sdk-js/blob/master/CHANGELOG.md"
AWS Lambda	"Please support PHP in Lambda
I would like to see Lambda support PHP natively. I will caution Amazon staff who assume the demand is not there may be mistaken as there are many online resources for PHP developers how to use Lambda with PHP by packaging binaries.

References on Amazon itself:

https://aws.amazon.com/blogs/compute/scripting-languages-for-aws-lambda-running-php-ruby-and-go/
http://docs.aws.amazon.com/aws-sdk-php/v2/guide/service-lambda.html

Quick online search I found these as well:
https://github.com/dannylinden/aws-lambda-php
https://github.com/awspilot/aws-lambda-php-template
https://cwhite.me/hosting-a-laravel-application-on-aws-lambda/
https://read.acloud.guru/serverless-php-630bb3e950f5
https://packagist.org/packages/pauljulio/php-composer-on-aws-lambda

In other words, the demand is there but the audience may not know that they need to ask for native support on the AWS forums.

Also important to note that Microsoft Azure Functions supports PHP. Ref: https://azure.microsoft.com/en-us/develop/php/

I will put the word out to PHP developers to reply to this forum thread to express their interest for Lambda natively supporting PHP."
AWS Lambda	"Re: Please support PHP in Lambda
+1 native PHP support would be grand!"
AWS Lambda	"Re: Please support PHP in Lambda
+1"
AWS Lambda	"Re: Please support PHP in Lambda
I haven't been a PHP developer since working with Drupal years and years ago. That being said, I'll always be behind an AWS service offering native support for a language that many people still use...especially if other cloud providers are doing it. 

I think the wealth of support/resources for getting PHP lambda functions to 'work' through wrappers, binaries, etc. is a double-edged sword. It obviously showcases the demand there is in the community but also reduces the perceived need since if you REALLY want your PHP code running on lambda today, you can do it pretty easily via one of the links above. I'm hopeful, but let's remember that .NET support only recently came out, Python 3 was demanded for a LONG time before coming out and then suffered from months of difficulties with the up-to-date Amazon Linux AMI having issues actually compiling your Python 3 buildpack dependencies, and that there are many more questions on places like StackOverflow and even these forums asking about the timeline on supporting Node 8 compared to posts about PHP. The fact that AWS hasn't publicly announced anything about PHP support makes me a little skeptical on anything in the near future."
AWS Lambda	"Re: Please support PHP in Lambda
+1 

Specifically WordPress with all its idiosyncrasies."
AWS Lambda	"Re: Please support PHP in Lambda
+1"
AWS Lambda	"Re: Please support PHP in Lambda
As a full-time PHP developer, I would love to see PHP supported natively in AWS Lambda. This is definitely something that I am interested in using, and not having to use 3rd party shims and compile PHP myself would be much preferred."
AWS Lambda	"Re: Please support PHP in Lambda
It goes without saying, there are many apps and developers out there using php, enabling Lambda to run php natively will just broaden the audience.  I would love to port an enterprise php app over to Lambda but the learning curve/transition is just too great.  Just rewriting the app as an aggregation of micro-service functions in php is a major task but worth it.  Adding the porting over to node.js just puts it out of reach for me.
Since Microsoft offers php as a FaaS, it's forcing me to look there as a possible solution.  I'm sure I'm not the only developer in this situation.
Up to this point in time I've been very happy with AWS; all my cloud work has been done in AWS and I would like to continue this way.  Do we even know if Amazon is working towards making php available on Lambda?  It would be nice to know if this is even a possibility in the near future."
AWS Lambda	"Re: Please support PHP in Lambda
+1"
AWS Lambda	"Re: Please support PHP in Lambda
+1"
AWS Lambda	"Re: Please support PHP in Lambda
+1"
AWS Lambda	"Re: Please support PHP in Lambda
+1, we should have support PHP in Lamda and we are really waiting for such a great feature."
AWS Lambda	"Re: Please support PHP in Lambda
I would like to see Lambda support PHP natively."
AWS Lambda	"Re: Please support PHP in Lambda
+1"
AWS Lambda	"Re: Please support PHP in Lambda
+1"
AWS Lambda	"Re: Please support PHP in Lambda
+1"
AWS Lambda	"Re: Please support PHP in Lambda
+1  But only support PHP 7.x and newer."
AWS Lambda	"Re: Please support PHP in Lambda
+1"
AWS Lambda	"Re: Please support PHP in Lambda
+1"
AWS Lambda	"Re: Please support PHP in Lambda
+1 this. Although right now I haven't touched PHP again for such a long time."
AWS Lambda	"Re: Please support PHP in Lambda
Agreed."
AWS Lambda	"Re: Please support PHP in Lambda
+1"
AWS Lambda	"Re: Please support PHP in Lambda
+1"
AWS Lambda	"Re: Please support PHP in Lambda
+1"
AWS Lambda	"Re: Please support PHP in Lambda
+1"
AWS Lambda	"Lambda and Python
Hello, I am unsure if this is the correct place to post this however I am having a bit of issue with a Lambda Python script.

I have an array that I would just like to return the array in order by that count field.
Please see my code here:  https://imgur.com/a/qq9NB6o 

Here is the array:
{
  ""KEYWORD1"": {
    ""count"": 0,
    ""keyword"": ""KEYWORD1"",
    ""items"": []
  },
  ""KEYWORD2"": {
    ""count"": 1,
    ""keyword"": ""KEYWORD2"",
    ""items"": [
      {
        ""IHKB_PostSort"": 2,
        ""IHKB_PostTitle"": ""Title2"",
        ""IHKB_Keywords"": ""Keyword1,Keyword2"",
        ""IHKB_PostUID"": ""83113574-00a9-11e9-8eb2-f2801f1b9f695"",
        ""IHKB_PostBody"": ""PostBody2"",
        ""IHKB_PostCatUID"": ""83113574-00a9-11e9-8eb2-f2801f1b95252""
      }
    ]
  },
  ""KEYWORD3"": {
    ""count"": 0,
    ""keyword"": ""KEYWORD3"",
    ""items"": []
  }
}"
AWS Lambda	"Looking for a Guide to Lambda Security when Used from a Web Client
I'd like to find a comprehensive checklist for creating a secure application using lambda from a web client (not using API gateway). Is there such a thing?

I'm using cognito. One of the big questions is how do you securely get the user's identity in the lambda function? The API gateway adds the information to the context, but that doesn't apply when doing a direct lambda invoke from a browser. The only way seems to pass in the user name in the payload. Is that secure?

What's the right approach to structuring the authenticated and authenticated roles?

When you load the aws-sdk inside lambda what credentials should load?

How do you securely restrict access to dynamo tables?

Is there any other authentication and authorization that should happen in the lambda function?

Is there any other steps the client should take?

What cloudwatch metrics and alarms should you set up?

How do you test your app to make sure it's secure from attacks?

What else should you do to make a secure application end-to-end?"
AWS Lambda	"Lambda function takes almost 27 minutes to start, talk about a cold start
yes, the title is correct 27 minutes... i saw guys complaining about cold start of 2-5 seconds, how about a 27 minute period to execute???
the scenario i have is the following:
i have set up a codecommit trigger to execute a lambda function on push on a branch. the lambda function is run in nodejs 8.10, using the package node-ssh. it is a simple little code which connects to an ec2 and calls a bash script. as a test the bash script creates a directory. between the time of the push to codecommit and the creation time of the directory almost 27 minutes pass, which is highly absurd... the memory for the lambda is at max 3008mb
please tell me why this can happen and to give more details about the setup.
thanks"
AWS Lambda	"Lambda Function not posting GuardDuty findings to slack.
Hello Team,
I want my GuardDuty findings to post to slack. I got the template from a github link and it works perfectly fine. Now I want to post more information for each finding so i updated the stack with new template, but it failed with an error saying ""Zip file cannot exceed 4096 characters. Use S3 instead"". So I used S3 in the template and it seems to load the right lambda function and its not posting the new findings to the slack where as it only posts when I test the lambda function manually. How exactly do i need to provide the s3 details to make lambda post to slack for every new finding or set time. Below are all the details of the original code and edited code.

Original template : https://github.com/aws-samples/amazon-guardduty-to-slack/blob/master/gd2slack.template
Edited template : every thing is same except the part I pasted below,
},
""findingsToSlack"": {
""Type"": ""AWS::Lambda::Function"",
""Properties"": {
""Handler"": ""index.handler"",
""Role"": {
""Fn::GetAtt"": 
},
""Code"": {
""S3Bucket"": ""bucket_name"",
""S3Key"": ""file.zip""
},
""Runtime"": ""nodejs8.10"",
""MemorySize"": ""128"",
""Timeout"": ""10"",
""Description"": ""Lambda to push GuardDuty findings to slack"",
""TracingConfig"": {
""Mode"": ""Active"" 

I suspect the ""Code"" property is wrong in the edited code.. where the original looks like below
part of original code where I feel like error coming from, when I replace the code property with s3bucket and value 
""Code"": {
""ZipFile"": {
""Fn::Join"": [
"""",
[
""'use strict';\n"",
""\n"",
""/**\n"",
"" * Copyright 2017 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n"",
"" *\n"",
"" * Licensed under the Amazon Software License (the \""License\""). You may not use this file except in compliance with the License.\n"",
"" * A copy of the License is located at\n"",
"" * http://aws.amazon.com/asl/\n"",
"" */\n"",

code--------,
]]}},

Is there something to do with the ""Fn::Join"" ??.. how exactly I provide the s3 as a code property so i get it right. or Is there any way that I by-pass the zip-file limit?? Any help would be greatly appreciated. Thanks in advance.."
AWS Lambda	"The libcurl library and SSL backend do not support custom handling of certs
I have not made any changes to my dot net core Lambda function but since 01:10 UTC this morning the Lambda has been throwing the following error when making HTTP requests:

(The libcurl library in use (7.53.1) and its SSL backend (""NSS/3.36"") do not support custom handling of certificates. A libcurl built with OpenSSL is required.

Can anyone out there point me in the correct direction / anyone at AWS advise what might have changed on their side?

Alex"
AWS Lambda	"Lambda SSL errors / Node.js 8.10: DynamoDB stream tigger deletes in S3
Dear folks,

I have a Lambda functions which deletes a file in S3 when a DynamoDB TTL trigger deletes an item in a table. Almost 10% of the requests fail with some sort of network/SSL error which I cannot solve by myself. Any help is appreciated.

Here is the CloudWatch error:

2019-02-07T12:42:01.861Z	186d1151-5967-4e3b-8218-b595fccf7543	{ Error: write EPROTO 140445329983360:error:140770FC:SSL routines:SSL23_GET_SERVER_HELLO:unknown protocol:../deps/openssl/openssl/ssl/s23_clnt.c:827:
 
at _errnoException (util.js:1022:11)
at WriteWrap.afterWrite [as oncomplete] (net.js:880:14)
message: 'write EPROTO 140445329983360:error:140770FC:SSL routines:SSL23_GET_SERVER_HELLO:unknown protocol:../deps/openssl/openssl/ssl/s23_clnt.c:827:\n',
code: 'NetworkingError',
errno: 'EPROTO',
syscall: 'write',
region: 'eu-west-1',
hostname: 'XXXXXXXXXXXXXXXXXXXXX.s3.eu-west-1.amazonaws.com',
retryable: true,
time: 2019-02-07T12:42:01.861Z,
statusCode: 301 } 'Error: write EPROTO 140445329983360:error:140770FC:SSL routines:SSL23_GET_SERVER_HELLO:unknown protocol:../deps/openssl/openssl/ssl/s23_clnt.c:827:\n\n at _errnoException (util.js:1022:11)\n at WriteWrap.afterWrite [as oncomplete] (net.js:880:14)' 


Thanks,
Mark."
AWS Lambda	"Manual approvals with lambda functions are simple with Guflow
If you have embraced the lambda functions in your applications then latest release of Guflow will be interest to you. Guflow: https://github.com/gurmitteotia/guflow will now let you easily implement support for manual approvals using serverless lambda functions. Here is a very simple example showing ""WaitForAnySignal"" API:
    [WorkflowDescription(""1.0"")]
    public class ExpenseWorkflow : Workflow
    {
        public ExpenseWorkflow()
        {
            ScheduleLambda(""ApproveExpense"")
              .OnCompletion(e=>e.WaitForAnySignal(""Accepted"", ""Rejected""))
              .WithInput(_=>new{Id});  //Send workflow id to lambda functions to send signals to this workflow.
            ScheduleLambda(""SubmitToAccount"").AfterLambda(""ApproveExpense"")
              .When(_=>Signal(""Accepted"").IsTriggered());
            ScheduleLambda(""SendRejectEmail"").AfterLambda(""ApproveExpense"")
              .When(_=>Signal(""Accepted"").IsTriggered());
        }
    }

Other APIs that you can use for waiting for signals are: WaitForAllSignals and WaitForSignal. These APIs will help you to move your workers from activities to serverless lambda functions. 

You can call these APIs anywhere in workflow e.g. in the following example ""ApproveExpense"" is a child workflow:
    [WorkflowDescription(""1.0"")]
    public class ExpenseWorkflow : Workflow
    {
        public ExpenseWorkflow()
        {
            ScheduleChildWorkflow<ApproveExpense>()
              .OnCompletion(e=>e.WaitForAnySignal(""Accepted"", ""Rejected""));
            ScheduleLambda(""SubmitToAccount"").AfterLambda(""ApproveExpense"")
              .When(_=>Signal(""Accepted"").IsTriggered());
            ScheduleLambda(""SendRejectEmail"").AfterLambda(""ApproveExpense"")
              .When(_=>Signal(""Accepted"").IsTriggered());
        }
    }

You can find the detailed document about signal supports in Guflow here: https://github.com/gurmitteotia/guflow/wiki/Workflow-signals

Other interesting examples of manual approvals using lambda functions can be found here: https://github.com/gurmitteotia/guflow-samples/tree/master/ServerlessManualApproval"
AWS Lambda	"InvalidAccessKey error
I have been getting this error frequently:

2015-08-04T20:26:40.778Z	1b9b31ad-3ae7-11e5-9cea-7d22b8a0b2b4	{ [InvalidAccessKeyId: The AWS Access Key Id you provided does not exist in our records.]
  message: 'The AWS Access Key Id you provided does not exist in our records.',
  code: 'InvalidAccessKeyId',
  time: Tue Aug 04 2015 20:26:40 GMT+0000 (UTC),
  statusCode: 403,
  retryable: false,
  retryDelay: 30 } 'InvalidAccessKeyId: The AWS Access Key Id you provided does not exist in our records.\n    at Request.extractError (/var/runtime/node_modules/aws-sdk/lib/services/s3.js:321:35)\n    at Request.callListeners (/var/runtime/node_modules/aws-sdk/lib/sequential_executor.js:105:20)\n    at Request.emit (/var/runtime/node_modules/aws-sdk/lib/sequential_executor.js:77:10)\n    at Request.emit (/var/runtime/node_modules/aws-sdk/lib/request.js:595:14)\n    at Request.transition (/var/runtime/node_modules/aws-sdk/lib/request.js:21:10)\n    at AcceptorStateMachine.runTo (/var/runtime/node_modules/aws-sdk/lib/state_machine.js:14:12)\n    at /var/runtime/node_modules/aws-sdk/lib/state_machine.js:26:10\n    at Request.<anonymous> (/var/runtime/node_modules/aws-sdk/lib/request.js:37:9)\n    at Request.<anonymous> (/var/runtime/node_modules/aws-sdk/lib/request.js:597:12)\n    at Request.callListeners (/var/runtime/node_modules/aws-sdk/lib/sequential_executor.js:115:18)'


This often happens after I have deleting a Lambda function (and all policies, etc.) and then re-created it a few minutes later (I use kappa for my development).

Is this an error in my code or configuration?  Or is this something on the Lambda side?  Perhaps some credentials being cached and not properly flushed when the function is deleted and then re-created?

Any help would be greatly appreciated.

Mitch"
AWS Lambda	"Re: InvalidAccessKey error
Hmm, I think I have figured out the problem.

When I delete my Lambda function, I delete any policies and roles associated with it and any event sources but I do not delete the CloudWatch log group.  If I manually delete the log group associated with my Lambda function, I don't get this error.

I will add code to my kappa tool to delete the log group when the function is deleted but this does seem to point to an issue on the AWS side that needs to be addressed.

Mitch"
AWS Lambda	"Re: InvalidAccessKey error
Well, I hate to keep replying to myself but ...

I thought that deleting the log group was the magic ingredient but I was mistaken.  It just seems random.  Sometimes I can delete and recreate and all is well.  Other times, I get this error.  And when I get the error, I keep getting the error.

I would really appreciate any insight anyone could provide me on this.  It's blocking me.

Mitch"
AWS Lambda	"Re: InvalidAccessKey error
We used to see the same behavior weeks ago. Also the function itself never gets executed as the error appears to be occurring in the framework.

We started putting a version number in our function names as a workaround.

I thought amazon said they identified and fixed the problem, but we didn't switch back to recreating with the same names so didn't verify.

If it's the same problem we saw,  the error did go away in under a day of if we left the function running."
AWS Lambda	"Re: InvalidAccessKey error
Yes, I noticed that if you do delete the log group and then recreate the function and run it and get this error, no log group is created.  So, you are right, it is happening in the framework itself.

It now seems quite random.  I've recreated the function, had it work several times and then suddenly received this error as if the bad credentials are present only in certain hosts within a cluster.

Since we are starting to move a lot of stuff over to Lambda and API Gateway, this error concerns me.  It would be great to hear from AWS.

Thanks for the replay, Eric.

Mitch"
AWS Lambda	"Re: InvalidAccessKey error
Thank you for bringing the issue to us. We are actively investigating and working on a proper fix. In the meantime, one temporary workaround for your case could be using unique name for the Execution Role for each creation. Please let me know if that workaround works for you as a temporary solution."
AWS Lambda	"Re: InvalidAccessKey error
I am getting the same error, but with python tracebacks. I got it since few month when I uploaded the project on AWS Lambda based on Python36 django env with Zappa (should be similar to Kappa, I guess)
It is a little bit strange, but what I think the problem might be is that if my lambda-role changes it's credentials during the AWS Lambda instance live span the old credentials data can't be recognised as valid S3 storage and it returns it can't find it.
My role changes credentials each hour. I am not sure how long my lambda is live because I have a 4 min keep_up_warm callback.

Mitch, have you found a solution for the problem?

Iskren"
AWS Lambda	"Cant create thing in Lambda with VPC
Currently we need to setup a VPC in the Lambda to have an access to an RDS.
But creating an iot thing via aws sdk will result to a timeout.
Removing the VPC will create a thing successfully."
AWS Lambda	"Private Static Website hosting
I'm looking for the best way to host my static front end of a single page application that will use Lambda functions by way of API Gateway.  This site is internal to my company's intranet (on a VPC) and cannot be exposed publicly.  From the documentation it looks like static website hosting on S3 buckets requires the files to be publicly read-only, which our security policies don't allow for internal sites.  What is the recommended way to host these files in this situation?  An EC2 with a web server is an option but I'm looking for a serverless option for the files.

Thank you."
AWS Lambda	"Re: Private Static Website hosting
Hello
Website hosting does not require the bucket to be public but you need to grant some access so users can reach it.  You could write a policy for VPC end point access
https://docs.aws.amazon.com/AmazonS3/latest/dev/example-bucket-policies-vpc-endpoint.html

hope this helps,
RT"
AWS Lambda	"Operation not permitted (select/poll failed)
So I have a custom runtime function which suddenly stops working. Calling the /2018-06-01/runtime/invocation/next
 endpoint gives me the error ""Operation not permitted (select/poll failed)"" which from what my google fu was able to uncover, is some sort of lowlevel TCP packet error. 

The logs look something like this: 20:23:04
Fetching next event.
 
20:23:05
START RequestId: 62e1e4dd-7348-4819-903e-0d861e7d68c0 Version: $LATEST
 
20:23:05
Fatal Error - Function Terminates
 
20:23:05
END RequestId: 62e1e4dd-7348-4819-903e-0d861e7d68c0
 
20:23:05
REPORT RequestId: 62e1e4dd-7348-4819-903e-0d861e7d68c0	Init Duration: 749.97 ms	Duration: 440.28 ms	Billed Duration: 1200 ms Memory Size: 128 MB	Max Memory Used: 45 MB

AWS_LAMBDA_RUNTIME_API resolves to 127.0.0.1:9001

What I suspect is hapenning is that the request is initally sucessful (at least succesful enough to trigger the START event), but ""something"" breaks nearly immediately amd the runtime fuction exits fatally before the request ends, because the socket dies because of whatever ""Operation not permitted (select/poll failed)"" means. What I don't have is the faintest idea how to fix it.

Any suggestions are welcome."
AWS Lambda	"AWS Lambda Smart Home : Alexa.Discovery is not called
Hello,

We are using an AWS Lambda function used by a Smart Home Skill to provide voice commands for devices we are using.
When associating the Skill in the Amazon Alexa app, it fails.
We can see in our CloudWatch logs that the Alexa.Authorization request is sent and we are successfully responding to it.
However, we have no more Alexa.Discovery requests coming in. Therefore, we cannot respond to it and the association most likely fails for this reason.
It worked well since we have implemented this Skill and it is available in production.

For which reason is the Alexa.Discovery request not called ?

Thank you in advance for your help,

Regards"
AWS Lambda	"How to use graphql 'isValidJSValue ' or 'coerceValue' on AWS lambda?
In the workflow of my application AppSync will delivery user inputs (as messages) to an SQS queue that will trigger a lambda for async processing. Lambda will validate messages against the GraphQLInputType. For that purpose, I'm using the function `coerceValue` of graphql-js. Got the tip from this question <https://stackoverflow.com/questions/38340892/how-can-i-use-isvalidjsvalue-to-validate-a-query-variable-in-my-client-code>. 

Validation code run flawlessly when running local tests within nodejs, but when deployed to AWS the very same code fails with the message ""Expected type CreateBookInput to be an object."". Apparently the following line is returning  'string'  when running on aws, it should return a object.
schema.getType(inputType)]

Already tried with both functions 'coerceValue' and 'isValidJSValue' but no success. Also tried to Promisify my function and use async/await style but didn't make any difference, same error. This is the function:
function validate(object, inputType) {
    let schema = loadSchema()
    let validationResult = coerceValue(object, schema.getType(inputType))
    if (validationResult.errors) {
        throw new Error(`GraphQL: ${validationResult.errors}`)
    }
    return true
}
function loadSchema() {
    let schemaFile = fs.readFileSync(path.join(__dirname, 'schema.graphql'), 'utf8')
    let awsTypesSchema = fs.readFileSync(path.join(__dirname, 'aws.graphql'), 'utf8')
    return buildSchema(schemaFile + awsTypesSchema)
}

When running locally I can see that `schema.getType(inputType)` return a `GraphQLInputObjectType` but the behavior differs on AWS Lambda, there in the logs it only return the name of input type, e.g. ""CreateBookInput"".

Did anyone had a similar problem? Any help is welcome.

P.S. Original question was posted on stackoverflow, but so far nobody answered. https://stackoverflow.com/questions/54489177/how-to-use-graphql-isvalidjsvalue-or-coercevalue-on-aws-lambda

Edited by: lucallero on Feb 5, 2019 2:16 AM"
