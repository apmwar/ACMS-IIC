label	description
AWS Key Management Service	"IAM Policy to enforce tagging on EC2 instance not working on marketplace
I am using the policies described in the blog post below to enforce tagging on ec2 instances before they are launched. The policy works great for quick start ami, but does not work when using an ami from the market place. It seems that the marketplace does not include the tags in the api call when running an instance. Has anyone run into this problem before or know a solution?

Blog Post: https://aws.amazon.com/premiumsupport/knowledge-center/iam-policy-tags-restrict/"
AWS Key Management Service	"AWS Educate starter accounts
I am trying to support students who have AWS Educate starter accounts (I have a regular account and things work as expected on my account but not on theirs).

Specifically, my students need to be able to generate an access key id and secret access key token so that they can login via AWS CLI.  However, they don't appear to have ""My Security Credentials"" on their management console and when they go to IAM in order to create a new IAM user with credentials, they find that they do not have the permissions necessary to do this. 

How then can they gain programmatic access to their AWS services?  They can fire up an EC2 instance (and download an RSA key pair which enables them to ssh into it) but they don't appear to be able to do much else.  I would like them to be able to use tools such as AWS CLI (and ultimately flintrock and python / pyspark) which require an access key id and secret access key to access resources.

All of the tutorials / documentation that I / they can find just refer to the way of doing it using IAM - which works fine for me but not for them.  Can anybody help?

Thanks."
AWS Key Management Service	"VPC Lockdown Template
Hi,

So I have been attempting to amend the template from this guide https://aws.amazon.com/blogs/security/how-to-automate-restricting-access-to-a-vpc-by-using-aws-iam-and-aws-cloudformation/ to lockdown access to a VPC rather than grant access. In our subscription, we have 3 VPC's, but want to limit access to this to a select list of users.

I've tried several permutations of the template (amending to deny) but cant seem to get it to work. Is it feasible to do from this template? If so, can you point me in the right direction? 

Thanks"
AWS Key Management Service	"Advance AWS IAM Policies - Tags and Variables
Hello,

Is it possible to have a condition in an IAM policy that test the value of SAML2 federated aws:userid against the value of a resource tag (e.g., in order to grant permissions to administrate ec2 instances only if the user role equals a tag attached to an EC2 instance)? How?

Thanks,
Yossi C."
AWS Key Management Service	"IAM Policy SFTP
Reading this doc - Link: https://docs.aws.amazon.com/transfer/latest/userguide/monitoring.html

So, i have created 1 policy and attached it to new role.

When i want to create second role i have the error:
This policy contains the following error: Has prohibited field Principal For more information about the IAM policy grammar, see AWS IAM Policies

{
  ""Version"": ""2012-10-17"",
  ""Statement"": [
    {
      ""Effect"": ""Allow"",
      ""Principal"": {
        ""Service"": ""transfer.amazonaws.com""
      },
      ""Action"": ""sts:AssumeRole"",
      ""Condition"": {}
    }
  ]
}"
AWS Key Management Service	"Re: IAM Policy SFTP
it's not policy, it's relationship button, fixed"
AWS Key Management Service	"Can we set account password policy for set of users?
Hello,

I am looking for a way to set a IAM account password policy to only set of users in the account, is this possible with IAM?

For example,
I want developers to have minimum 10 letters password,
I want testes to have minimum 12 letters password.

Creating new account for different teams is not an option."
AWS Key Management Service	"Cross-Account Bucket Permissions for Root Account
i am trying to the following as described here

https://docs.aws.amazon.com/AmazonS3/latest/dev/example-walkthroughs-managing-access-example2.html#access-policies-walkthrough-cross-account-permissions-acctB-tasks

in this case I am AccountB and customer is AccountA
the owner of accountA have told us they have granted my account root user permission to their bucket. The principle they have granted permission to is

 ""AWS"": ""arn:aws:iam::123456789:root""

However, when I login to my account with my root user credentials, the principal that I see is the email address i used to login

 ""AWS"": ""arn:aws:iam::123456789:user@example.com""

So the actual user is not root. Will this still work? even though the principal ARN does not match exactly?"
AWS Key Management Service	"Re: Cross-Account Bucket Permissions for Root Account
Hi,

Let me explain this. You are Account B with Account number- 222222222222 and the bucket is in Account A- 1111111111111. If the owner of Account A grants access to arn:aws:iam::222222222222:root, it means the customer is trusting the entire Account-222222222222. Now users in Account- 222222222222 should have IAM permission policies attached to them which allow access to the bucket in 1111111111111. 

Therefore you will be able to access the bucket in the other account if you have a policy attached to your user which grants access to the bucket.

Hope this helps.

Thanks."
AWS Key Management Service	"Need help in how to create a limited administrator?
I'm trying to create a student administrator, who has the power to create users, groups, and policies, but has no ability to affect the current administrators, or to increase his or her own authority. 

This means I don't want them to be able to attach/detach anyone to/from the AdminGroup group, nor to attach/detach the policies AdministratorAccess or IAMFullAccess, nor take any put/update/delete actions with respect to the administrators master.admin and leader.admin. 

I tried using the attached policy and attaching this policy to the student.admin, but it's not working as I would have expected. Although, for instance, it does prevent student.admin from attaching to the AdminGroup, it doesn't prevent student.admin from attaching the AdministratorAccess policy directly. Similarly, it will prevent student.admin from creating a new user into the AdminGroup, but is perfectly fine with attaching the AdministratorAccess policy to that new user.

Also, it doesn't prevent adding groups to the administrators master.admin and leader.admin. Nor does it prevent the creation of new groups with the AdministratorAccess policy, and then attaching that group to the student.admin or any other user.

I have looked at https://aws.amazon.com/blogs/security/how-to-create-a-limited-iam-administrator-by-using-managed-policies/, but that doesn't seem to have helped either.

I'm sure I'm missing something here, but I am at a loss at the moment. Any thoughts would be appreciated.

Edited by: CharlieL on Jan 29, 2019 2:20 PM

Edited by: CharlieL on Jan 29, 2019 7:29 PM"
AWS Key Management Service	"Re: Need help in how to create a limited administrator?
Hi,

I understand that you are trying to create an Administrator that is not allowed to modify certain things. You can make use of a permission boundary to achieve your use-case. Let me give you a brief insight into permissions boundaries.

A permission boundary is like a filter. It is used to restrict permissions. It CAN NOT be used to grant permissions. For example- you have attached a Full Admin Access policy on an IAM user user and have allowed only S3 in the permission boundary, the user can access only S3 services and nothing else despite having Full Admin Access policy attached. You can read more about permission boundaries here: https://docs.aws.amazon.com/IAM/latest/UserGuide/access_policies_boundaries.html

Hope this helps.

Thank You."
AWS Key Management Service	"Authenticate IAM user programmatically
Hi,

I'm using access key to make API calls to AWS but before this happens I also want to grammatically authenticate the corresponding IAM user which related with this access key as well. 

Is it possible to do this, is so how?

I also tried with Login with Amazon but it seems every valid amazon user could be authenticated successfully which seems not suitable for expected situation. 

Or if Login with Amazon could redirect to https://placeholder.signin.aws.amazon.com/console and authenticate IAM user later return the token to verify is login succeeded?

Thanks,

Edited by: ldsdtps on Jan 16, 2015 1:21 AM"
AWS Key Management Service	"Re: Authenticate IAM user programmatically
Not sure what you're asking.

When you create a user you need to configure their IAM permissions or roles. You are able to then create credentials which can be used within a script or program (or you can just create those roles, build the instance(s) that will need to have scripts running that use those credentials and select the role required when you launch the instance).

For instance. If you have an instance which will need to read from an SQS queue, perform a task and write to an S3 bucket then you create a role with ""Read SQS"" and ""Write S3"" for the resources that are required. You then create an instance using that role and it will inherently have those permissions. No need for credentials, and no need for ""Users"" which can be intercepted etc.

Of course, you can just configure the IAM User with no console access. If I'm reading right, that is what you are also asking."
AWS Key Management Service	"Re: Authenticate IAM user programmatically
Sorry if my question is confusing.

First of all I'm using Javascript SDK.

What I wanted to do is to authenticate IAM user first with a page containing use name and password and if succeeded I want to use the access key associated with this user to make the API calls.

Thanks,

Edited by: ldsdtps on Jan 16, 2015 2:06 AM

Edited by: ldsdtps on Jan 16, 2015 2:08 AM"
AWS Key Management Service	"Re: Authenticate IAM user programmatically
Authenticating the IAM user in the way you suggest is a console only element. If you are able to explain exactly what you are wanting to achieve I might be able to recommend better alternatives? As it is, the only solution I can think of is that you create your own user authentication and then use that result to select the access key for use in the API."
AWS Key Management Service	"Re: Authenticate IAM user programmatically
Basically I want to add a layer of security before calling the APIs. 

And it will be nice if I could use AWS API to authenticate certain IAM user with whom I use the access key to make the API calls.

It sounds like the IAM user credentials only for the AWS Console to do management stuff, I guess I will go with Login with Amazon where Amazon user will be authenticated.

Thanks,"
AWS Key Management Service	"Re: Authenticate IAM user programmatically
Hi ldsdtps,

It sounds like you would like to add in a second factor of authentication before a user can use their access keys.  Have you looked at using  Multi-Factor Authentication (MFA) devices with AWS?  It seems like it would help satisfy your use case without having to resort to user name password authentication.

-Jeff"
AWS Key Management Service	"Re: Authenticate IAM user programmatically
Hi,
   Can we authenticate aws account using IAM role i want to do it through rest web api?But i am not getting the solution.

Thanks,
Namrata"
AWS Key Management Service	"Unable to login via U2F (w/ Chrome 72 & Ubuntu)
I've setup Yubikey U2F and cannot login via U2F when I used Chrome 72 (beta channel), it showed:

Please try again later


And when I switched back to Chrome 71 (stable channel), then it worked.

Edited by: gslin on Dec 30, 2018 12:54 PM"
AWS Key Management Service	"Re: Unable to login via U2F (w/ Chrome 72 & Ubuntu)
Hello gslin,

Thank you for reaching out. We are aware of the login issue with Chrome 72 (beta). We're actively working to fix the issue. We'll provide an update on this thread when we have fixed the U2F login issue.

Thank you,
Ujjwal"
AWS Key Management Service	"Re: Unable to login via U2F (w/ Chrome 72 & Ubuntu)
Any update? Still having the issue with Chrome version 73.0.3683.10 (Official Build) dev (64-bit). Trying to enroll a new YubiKey 5C Nano produces an ""Invalid Challenge.""

Under the hood the console issues an XHR request to https://console.aws.amazon.com/iam/api/users/tsuna/mfa/finalizeU2fRegistration, which returns a 400 bad request error with this payload:

{""errors"":[{""message"":""Invalid Challenge."",""code"":""U2fRegisterInvalidChallengeException"",""httpStatus"":400,""__type__"":""ErrorMessage""}]}


edit: but it works with Firefox after enabling U2F in about:config"
AWS Key Management Service	"Re: Unable to login via U2F (w/ Chrome 72 & Ubuntu)
Hello tokugawa,

We are actively working to fix U2F issues with the latest versions on Google Chrome. I will update this thread when the issues are fixed. We can confirm that U2F security keys work with other supported browsers.

Thank you,
Ujjwal"
AWS Key Management Service	"Re: Unable to login via U2F (w/ Chrome 72 & Ubuntu)
Hi, Chrome 72 is now in the stable channel (see https://chromereleases.googleblog.com/2019/02/stable-channel-update-for-desktop_13.html) so this is now broken for everyone using Chrome."
AWS Key Management Service	"Re: Unable to login via U2F (w/ Chrome 72 & Ubuntu)
Hello observer,

We have fixed the bug on 02/15 and you should not be facing this issue with Chrome this week onwards. Please let me know if you are still experiencing an issue.

Thanks,
Ujjwal"
AWS Key Management Service	"Re: Unable to login via U2F (w/ Chrome 72 & Ubuntu)
mmh, good question what your dev team means about ""fixed"" ... 

My Chrome browsers get's no request for my key:

stable: Version 72.0.3626.109 (Offizieller Build) (64-Bit)

  (was just updated while checking version; before it was latest pre-72.0.3626.109 version)

Canary: Version 74.0.3714.0 (Offizieller Build) canary (32-Bit)


running latest Windows 10 (update from yesterday):
Betriebssystemname:                            Microsoft Windows 10 Pro
Betriebssystemversion:                         10.0.17763 Nicht zutreffend Build 17763

so I cant't login as weeks before ... 
Just found out today while I had to do some changes in DNS.
Luckily latest Firefox 65.0.1 (64-bit) is still working with your management console..."
AWS Key Management Service	"Re: Unable to login via U2F (w/ Chrome 72 & Ubuntu)
This works for us now (just tested it again just now on Chrome 74.0.3710.0)."
AWS Key Management Service	"Unable to disable SMS MFA for root user
Hi,

I am trying to disable SMS MFA for my root user account. I know that at the current time, root users are not even allowed to use SMS MFA anymore, but I think I have enabled it quite some time ago and it basically has always worked.

The issue is that I also started to use Google Authenticator and would like to switch to using it solely for MFA. Right now I have three challenges when I log in. First the standard username/password, then I get an SMS and finally I get prompted for the authenticator token. I followed all tutorials on how to configure MFA, but the fact that my root account uses SMS MFA is not visible anywhere.

I am also confused reading that SMS MFA is only supposed to work until the 1st of February 2019. I was hoping the problem solves itself, but clearly, I am still stuck with SMS MFA. 

Has anyone experienced the same issue or know how to go about resolving it? How and where would I report this to AWS. I cannot open technical support issues. 

Cheers,
Hardy"
AWS Key Management Service	"Re: Unable to disable SMS MFA for root user
Hello Hardy,

The SMS MFA public preview is only supported for IAM users and cannot be enabled for root. In addition, we support 1 MFA to be active for user (IAM and root) at a time. The experience you have described below is not supported by AWS MFA.

If you created your AWS account prior to September 2017 and have enabled MFA on your Amazon retail account (with same email address as is associated with your AWS root user), you will be required to complete your Amazon MFA challenge in addition to the AWS MFA you enabled for root.

Please let us know whether the above may be a reason that you are experiencing multiple MFA challenges while signing in.

Thank you,
Ujjwal"
AWS Key Management Service	"Re: Unable to disable SMS MFA for root user
Hi,

thanks for the response.

The SMS MFA public preview is only supported for IAM users and cannot be enabled for root. In addition, we support 1 MFA to be active for user (IAM and root) at a time. The experience you have described below is not supported by AWS MFA.

Sure. That was what confused me as well. For all the information I could find, I should not be even in this situation. However, supported or not, this is the situation I am in.

If you created your AWS account prior to September 2017 and have enabled MFA on your Amazon retail account (with same email address as is associated with your AWS root user), you will be required to complete your Amazon MFA challenge in addition to the AWS MFA you enabled for root.

Please let us know whether the above may be a reason that you are experiencing multiple MFA challenges while signing in.

Actually, this sounds about right. I use for sure the same email and the timeframe is about right as well. So what can I do to change this?

Thanks,
Hardy"
AWS Key Management Service	"Re: Unable to disable SMS MFA for root user
Hello Hardy,

As a best practice, we recommend that you keep your Amazon MFA active. If you do not wish to complete SMS challenge during sign-in, you can deactivate SMS as your MFA factor on your Amazon retail account and replace it with other factors.

Thank you,
Ujjwal"
AWS Key Management Service	"Limiting managed policy permissions to a region
Is it possible to use the AWS:RequestedRegion condition key to limit an IAM role to a region in concert with a managed policy? That is, I want to give a role a managed policy like EC2FullAccess or whatever, but only in a certain region.

I know I can do it with a custom policy, but I don't want to be maintaining policies."
AWS Key Management Service	"IAM password policy - changing passwords error and special chars
I have a password policy that requires special characters (among others) for IAM users. 

I've noticed that when you have special characters required, AWS does not consider the forward slash (/) as a special character and will trigger the erroneous error below.

Ive also noticed if users are forced to change their password at login and enter a password that does not match the password policy, the error ‘User is not authorized to perform iam:ChangePassword.’ is displayed.   This is misleading, as the users do have rights to change it. A better message would indicate the issue or perhaps display a tip showing the password policy requirements."
AWS Key Management Service	"Re: IAM password policy - changing passwords error and special chars
Hi OwenB85, the list of special characters allowed in an IAM user password is as follows:
! @ # $ % ^ & * ( ) _ + - = [ ] { } | '

More information about setting an IAM password policy can be found here: http://docs.aws.amazon.com/IAM/latest/UserGuide/id_credentials_passwords_account-policy.html#password-policy-details

Thank you for the feedback on the change password policy error; I can confirm the behavior you are seeing. We will explore ways to make the error message more relevant in the future."
AWS Key Management Service	"Re: IAM password policy - changing passwords error and special chars
OwenB85 wrote:
Ive also noticed if users are forced to change their password at login and enter a password that does not match the password policy, the error ‘User is not authorized to perform iam:ChangePassword.’ is displayed.   This is misleading, as the users do have rights to change it. A better message would indicate the issue or perhaps display a tip showing the password policy requirements.

Please fix this!  I just wasted a good chunk of time troubleshooting the wrong issue (IAM policy permissions) as opposed to a password not meeting requirements."
AWS Key Management Service	"Re: IAM password policy - changing passwords error and special chars
Hello,

Thank you for reaching out to us. We are aware that in some situations when an IAM user has the correct permissions to change a password, they will see a permission denied message. The error message is incorrect and the reason for the error is that their new password does not comply with the AWS account’s password policy.

We are working on fixing the issue. In the meantime, we recommend you consult your IAM users and guide them to create passwords that adhere to your AWS accounts password policy. We recommend that you do not share the password policy requirements directly with the user unless you can validate that the user is the intended recipient of the one-time password.

Thank You,
Ujjwal"
AWS Key Management Service	"Re: IAM password policy - changing passwords error and special chars
We have also been hit by this issue. The password policy is not displayed when users go through the workflow of changing their passwords on first login. You can only see it if you change your password through the Security Credentials page, which is of course not accessible to first time users.

The error message says: either you don't have permission to change passwords or your password does not meet the password policy requirements.

This is very user-unfriendly and inconsistent with the behavior we would expect. I am surprised that 14 months after it was reported it still hasn't been addressed.

What is our expected work around? Do we manually need to send the password policy to our new users? Is this the recommended workflow?"
AWS Key Management Service	"Policy not behaving as expected with SSM Parameter Store.
I have an IAM policy to enforce the use of MFA with logins with short lived credentials such as the console login only.
The simulator shows the correct behaviour which I expect but when I use the cli which is long live credentials I am getting ""errorCode"":""AccessDeniedException"",""errorMessage"":""An unknown error occurred"" when making calls to ssm parameter store e.g aws ssm describe-parameters.
Calls to other things within ssm and other services seem to work fine.

{
    ""Version"": ""2012-10-17"",
    ""Statement"": [
        {
            ""Action"": [
                ""*""
            ],
            ""Effect"": ""Allow"",
            ""Resource"": ""*""
        },
        {
            ""Condition"": {
                ""Bool"": {
                    ""aws:MultiFactorAuthPresent"": ""false""
                }
            },
            ""Resource"": [
                ""*""
            ],
            ""Effect"": ""Deny"",
            ""NotAction"": [
                ""iam:ChangePassword"",
                ""iam:CreateVirtualMFADevice"",
                ""iam:EnableMFADevice"",
                ""iam:GetUser"",
                ""iam:ListMFADevices"",
                ""iam:ListUsers"",
                ""iam:ListVirtualMFADevices"",
                ""iam:ResyncMFADevice"",
                ""sts:GetSessionToken""
            ],
            ""Sid"": ""DenyAllExceptListedIfNoMFA""
        }
    ]
}


It looks like the calls to the ssm parameter store when MFA is setup is always looking for aws:MultiFactorAuthPresent to be true regardless of long or short live credentials are used. When I disable MFA for a user then this policy works fine and I can make calls to the ssm parameter store via cli. 

Am I misunderstanding the condition usage or how the ssm parameter store works?"
AWS Key Management Service	"Unable to create new users (Rate Exceeded)
Hi,

I can't seem to create new IAM users. I have 1 existing user (created ~450 days ago). I tried creating a second user and get an error that says Rate Exceeded. My billing details are up to date and I've been charged .20 cents every months for the last couple of years for Amazon Glacier. Am I missing something?


Andrew"
AWS Key Management Service	"VPC lock down options
So I am looking for a solution to be able to lock down access by VPC. We essentially have a ""management"" compartment, that manages multiple other subscriptions. I want to be able to restrict user access into groups for specific VPC's. Ideally we should split these into their own ""management"" subscriptions, but due to cost the project wont allow this. 

I have tried creating a IAM policy to restrict access by using ""StringEquals"" and ""aws:SourceVpc"": ""vpc-########"", but this did not work. After a bit more googling, I don't think this is possible. I've found https://aws.amazon.com/blogs/security/how-to-help-lock-down-a-users-amazon-ec2-capabilities-to-a-single-vpc/  and subsequent CloudFormation guide https://aws.amazon.com/blogs/security/how-to-automate-restricting-access-to-a-vpc-by-using-aws-iam-and-aws-cloudformation/. Which I think would work as a start point and need building upon.

Is there any other alternative solutions that would work for this?

Edited by: ghost3h on Feb 12, 2019 5:03 AM"
AWS Key Management Service	"Specify SourceInstanceARN as resource in IAM policy
There are a host of use cases (pun intended) for allowing an aws resource like an ec2 instance to make api calls operating only on itself.  For instance (ooh) I would like a node in an EKS cluster to be able to set its own health status by calling autoscaling:SetInstanceHealth.  The obvious way to do this would be with a policy like the following:

        {
          ""Version"": ""2012-10-17"",
          ""Statement"": [
            {
              ""Effect"": ""Allow"",
              ""Action"": ""autoscaling:SetInstanceHealth"",
              ""Resource"": ""${ec2:SourceInstanceARN}""
              ""
            }
          ]
        }


But when I try this, I get the following error:
Resource ${ec2:SourceInstanceARN} must be in ARN format or ""*"". (Service: AmazonIdentityManagement; Status Code: 400; Error Code: MalformedPolicyDocument


A less obvious approach, using tags, is suggested here: https://stackoverflow.com/a/37794785, but that is rather clumsy and setting the tags up requires an extra step.  I am looking for a solution that can be implemented in a straightforward manner with cloudformation.  According to this: https://stackoverflow.com/a/52860940 cloudformation resources cannot self-reference, so getting the instance id into an instance tag doesn’t seem like an easy task for cloudformation.

Could we please use SourceInstanceARN as a resource ARN?  If not, is there some other way to limit the IAM policy resource to the instance making the call?

(Update: I realized that an instance should be able to remove itself from the autoscaling group just by shutting down, which wouldn’t require special IAM privileges, but in general the question stands.)

Edited by: aryehleib on Feb 11, 2019 9:58 PM"
AWS Key Management Service	"Policy doesn't take effect
Hi!

I applied the PowerUserAccess managed policy to my team members' account alongside another policy to ensure the use of MFA, and I haven't been able to give them access to most of the services. I have verified multiple times whether the said MFA policy had any deny statements for the services allowed through the PowerUser policy, to no avail.
See attached a screenshot of the current setup of my users (note that I added several overlapping policies because I couldn't get it working with PowerUserAccess). Is there something I am missing?

Here's the EnforceMFA policy:
{
    ""Version"": ""2012-10-17"",
    ""Statement"": [
        {
            ""Sid"": ""AllowAllUsersToListAccounts"",
            ""Effect"": ""Allow"",
            ""Action"": [
                ""iam:ListAccountAliases"",
                ""iam:ListUsers"",
                ""iam:ListVirtualMFADevices"",
                ""iam:GetAccountPasswordPolicy"",
                ""iam:GetAccountSummary""
            ],
            ""Resource"": ""*""
        },
        {
            ""Sid"": ""AllowIndividualUserToSeeAndManageOnlyTheirOwnAccountInformation"",
            ""Effect"": ""Allow"",
            ""Action"": [
                ""iam:ChangePassword"",
                ""iam:CreateAccessKey"",
                ""iam:CreateLoginProfile"",
                ""iam:DeleteAccessKey"",
                ""iam:DeleteLoginProfile"",
                ""iam:GetLoginProfile"",
                ""iam:ListAccessKeys"",
                ""iam:UpdateAccessKey"",
                ""iam:UpdateLoginProfile"",
                ""iam:ListSigningCertificates"",
                ""iam:DeleteSigningCertificate"",
                ""iam:UpdateSigningCertificate"",
                ""iam:UploadSigningCertificate"",
                ""iam:ListSSHPublicKeys"",
                ""iam:GetSSHPublicKey"",
                ""iam:DeleteSSHPublicKey"",
                ""iam:UpdateSSHPublicKey"",
                ""iam:UploadSSHPublicKey"",
                ""iam:ListUserPolicies""
            ],
            ""Resource"": ""arn:aws:iam::127081852960:user/${aws:username}""
        },
        {
            ""Sid"": ""AllowIndividualUserToListOnlyTheirOwnMFA"",
            ""Effect"": ""Allow"",
            ""Action"": [
                ""iam:ListMFADevices""
            ],
            ""Resource"": [
                ""arn:aws:iam::127081852960:mfa/*"",
                ""arn:aws:iam::127081852960:user/${aws:username}""
            ]
        },
        {
            ""Sid"": ""AllowIndividualUserToManageTheirOwnMFA"",
            ""Effect"": ""Allow"",
            ""Action"": [
                ""iam:CreateVirtualMFADevice"",
                ""iam:DeleteVirtualMFADevice"",
                ""iam:EnableMFADevice"",
                ""iam:ResyncMFADevice""
            ],
            ""Resource"": [
                ""arn:aws:iam::127081852960:mfa/${aws:username}"",
                ""arn:aws:iam::127081852960:user/${aws:username}""
            ]
        },
        {
            ""Sid"": ""AllowIndividualUserToDeactivateOnlyTheirOwnMFAOnlyWhenUsingMFA"",
            ""Effect"": ""Allow"",
            ""Action"": [
                ""iam:DeactivateMFADevice""
            ],
            ""Resource"": [
                ""arn:aws:iam::127081852960:mfa/${aws:username}"",
                ""arn:aws:iam::127081852960:user/${aws:username}""
            ],
            ""Condition"": {
                ""Bool"": {
                    ""aws:MultiFactorAuthPresent"": ""true""
                }
            }
        },
        {
            ""Sid"": ""BlockMostAccessUnlessSignedInWithMFA"",
            ""Effect"": ""Deny"",
            ""NotAction"": [
                ""iam:CreateVirtualMFADevice"",
                ""iam:DeleteVirtualMFADevice"",
                ""iam:ListVirtualMFADevices"",
                ""iam:EnableMFADevice"",
                ""iam:ResyncMFADevice"",
                ""iam:ListAccountAliases"",
                ""iam:ListUsers"",
                ""iam:ListSSHPublicKeys"",
                ""iam:ListAccessKeys"",
                ""iam:ListServiceSpecificCredentials"",
                ""iam:ListMFADevices"",
                ""iam:GetAccountSummary"",
                ""iam:ListUserPolicies"",
                ""iam:GetUser"",
                ""sts:GetSessionToken""
            ],
            ""Resource"": ""*"",
            ""Condition"": {
                ""BoolIfExists"": {
                    ""aws:MultiFactorAuthPresent"": ""false""
                }
            }
        }
    ]
}


And for reference, here's the PowerUserAccess managed policy:

{
    ""Version"": ""2012-10-17"",
    ""Statement"": [
        {
            ""Effect"": ""Allow"",
            ""NotAction"": [
                ""iam:*"",
                ""organizations:*""
            ],
            ""Resource"": ""*""
        },
        {
            ""Effect"": ""Allow"",
            ""Action"": [
                ""iam:CreateServiceLinkedRole"",
                ""iam:DeleteServiceLinkedRole"",
                ""iam:ListRoles"",
                ""organizations:DescribeOrganization""
            ],
            ""Resource"": ""*""
        }
    ]
}


To take note:

The deny effects seem to be in place even though my team members have their Virtual MFA setup with Google Authenticator.
iam:ListUserPolicies is denied whether or not MFA is authenticated


Thank you for your help!

Have a great day ☀️

Cheers,

Phil

Edited by: philippefutureboy on Feb 11, 2019 11:51 AM"
AWS Key Management Service	"SimulatePrincipalPolicy does not account for permission boundaries
The SimulatePrincipalPolicy API does not account for permission boundaries. Example:

User A has the following policy, which allows for running EC2 instances:
{
    ""Version"": ""2012-10-17"",
    ""Statement"": [
        {
            ""Sid"": ""1"",
            ""Effect"": ""Allow"",
            ""Action"": ""ec2:RunInstances"",
            ""Resource"": ""*"",
            ""Condition"": {
                ""StringEquals"": {
                    ""ec2:Region"": ""us-east-1""
                }
            }
        }
    ]
}


When calling ec2:RunInstances to launch an instance in us-east-1, the call is successful. When calling ec2:RunInstances to launch an instance in us-east-2, the call is unsuccessful. When simulating these two cases, the results align with reality. However, if you attach a permission boundary to the user that results in that user having no EC2 permissions, the simulation will still succeed while the call to ec2:RunInstances will fail. 

Is this the expected behavior or a bug?

Example Python simulation code below:
import boto3
import json
 
client = boto3.client('iam')
resp = client.simulate_principal_policy(
    PolicySourceArn='<arn here>',
    ActionNames=[
        'ec2:RunInstances'
    ],
    ContextEntries=[
        {
            'ContextKeyName':'ec2:Region',
            'ContextKeyValues':[
                '<region>'
            ],
            'ContextKeyType':'string'
        }
    ]
)
print json.dumps(resp[""EvaluationResults""])"
AWS Key Management Service	"Re: SimulatePrincipalPolicy does not account for permission boundaries
Hello,

Apologizes, but currently the ""SimulatePrincipalPolicy"" API doesn't take into consideration any boundaries (Permissions Boundaries and Service Control Policies i.e. Organization Boundaries) while evaluation. We will definitely consider supporting this use case in future releases. 

As a workaround, if you want to stimulate the effect of Permission Boundary then you would need to explicitly use the ""PolicyInputList"" parameter/argument of the ""SimulatePrincipalPolicy"" API to provide an additional policy document (Permission Boundary) to be included in the simulation.

Let us know know in case you require further assistance."
AWS Key Management Service	"Re: SimulatePrincipalPolicy does not account for permission boundaries
That is unfortunate =\

Side note:
You state that the simulation API does not account for SCPs, however, the Boto 3 docs for simulate_principal_policy (https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/iam.html#IAM.Client.simulate_principal_policy) have a section of the response dedicated to AWS Organizations (OrganizationsDecisionDetail -> AllowedByOrganizations). This would make it seem like SCPs are supported. Is this the case or am I misunderstanding the purpose of that portion of the response."
AWS Key Management Service	"Give your web app access to the end user aws resources
Is there any way in which I can access my end users aws resources after they sign in through ""Login with Amazon"" OpenId incorporated in my web application?

After a lot of research I found just the way in which you can let an end user access your account aws resources(https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_oidc_cognito.html),but not the other way around."
AWS Key Management Service	"Security Group inbound rule 0.0.0.0 notification.
Hi all, 

We have small company and we want cost saving solution to get notification about if someone adds inbound 0.0.0.0 rule to any security group also similar for S3 bucket storage when someone adds/changes access to public for bucket then we can get notification. 

One solution is aws config but we do not want to use it. 

This can be done from Lambda which is cost saving option but not sure how to do it or may be a steps or code someone have written in python which helps us to create this.

Thanks in advance. 

Regards"
AWS Key Management Service	"How to exclusively give Supervisors the ability to create Employees?
I am developing a front-end app in React for a couple Supervisors and their Employees. Only the Supervisor should be able to (1) create other Supervisors and (2) create, edit, and delete Employee users and Employees' records. I believe that the Supervisor should never see the AWS Console. 
I am using AWS Cognito to authenticate users and DynamoDB to store records. Intuition says that I should use the AdminCreateUser API to add the feature of programmatically creating users, but this: https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_AdminCreateUser.html says that ""AdminCreateUser requires developer credentials."" I don't want the Supervisors to have developer privileges. Does that mean that Supervisors won't be Admins, then? (Y/n) 
And if the answer to that is yes, does that mean that I have to write my own logic to prevent Employee users from logging themselves up? (Y/n)

I asked a similar string of questions here: https://stackoverflow.com/questions/54597834/aws-cognito-how-to-call-admincreateuser-from-react-front-end/54597835#54597835"
AWS Key Management Service	"Any way to access locked-out vault?
I was tightening my Glacier vault permissions policy and somehow ended up being unable to view or change it. No user can now view, save or delete the vault permissions (only one vault has this problem) - neither the root after logging into console nor a user with ""AllowAll"" IAM permissions granted for all vaults. The vault itself is now inaccessible - no uploads can be made.

I only see ""You do not have permission to view the vault access policy."" after selecting Permissions tab of the vault. Needless to say that attempts to edit and change permissions fail with ""Access denied"" error.

Tried lots of different avenues (via console and command line with various users) for several hours but nothing works to bypass the lock-out.

Any help to reset permissions or, at least, to access the vault will be greatly appreciated!

Edited by: IgorM on Feb 8, 2019 3:28 AM

Edited by: IgorM on Feb 8, 2019 3:33 AM"
AWS Key Management Service	"Find cross-account (trusted account) relationships via the AWS API
We are looking to access multiple trusted accounts via the AWS API.  We know we can find child accounts within the organization with one of the api calls.  However, we don't need the child accounts of the organization.  We need to find the trusted accounts we have association with.  How can we do that via the api?"
AWS Key Management Service	"IAM Console Password
I've created an IAM user, and checked the option for ""AWS Management Console access"". Under ""Console password"", I've selected ""Custom password"" and set the password to (let's say) ""hello123"". When I finish the user creation process and try to log in with the new user, the password is not ""hello123"", but rather, my root account password.

Is this the expected behavior?

On an unrelated note, I've had several occasions where I go through the IAM creation process, and the message shows ""Success"" but no users are created. Screenshot attached."
AWS Key Management Service	"Re: IAM Console Password
Based on your description, can you double check if you were entering the credentials on the right sign-in page? For IAM users, the url of the sign-in page looks something like https://My_AWS_Account_ID.signin.aws.amazon.com/console/ (if you have an account alias, replace account ID with it). For details, please read https://docs.aws.amazon.com/IAM/latest/UserGuide/console.html.

Edited by: mjin on Feb 1, 2019 5:26 PM"
AWS Key Management Service	"Re: IAM Console Password
Yep, I've tried using both my account alias as well as my account ID. In either case, the password gets set to my root account password, not the custom password that I set during IAM User creation."
AWS Key Management Service	"IAM policy to restrict spot instances to a specific subnet
Hello, I was recently asked to create IAM policies to restrict the EC2 instances users launch to a specific private subnet. It's fairly easy to implement that for regular EC2 instances. But I ran into troubles when dealing with spot instances. Here's part of the CloudFormation template I made which contains the policy that didn't work. 

EC2RestrictedRequestSpotInstancesPolicy:
  Type: 'AWS::IAM::Policy'
  Properties:
    PolicyName: EC2RestrictedRequestSpotInstancesPolicy
    Groups:
      - !Ref BaseIamGroup
    PolicyDocument:
      Version: '2012-10-17'
      Statement:
        - Effect: Allow
          Action:
            - 'ec2:DescribeSpotPriceHistory'
            - 'ec2:DescribeSpotInstanceRequests'
            - 'ec2:CancelSpotInstanceRequests'
          Resource: '*'
        - Effect: Allow
          Action:
            - 'ec2:RequestSpotInstances'
          Resource: '*'
          Condition:
            StringEquals:
              'ec2:subnet': !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:subnet/<subnet ID>'

I understand spot may work differently from regular instances. I wonder if anyone has an example of IAM policy that can prevent users launching spot instances outside designated subnet. Thank you very much in advance for your help."
AWS Key Management Service	"Not able to access S3 folder in a Bucket
I am trying to set up restriction for a user to access his bucket only. IAM Policy is defined as follows :

{
    ""Version"": ""2012-10-17"",
    ""Statement"": [
        {
            ""Effect"": ""Allow"",
            ""Action"": [
                ""cognito-idp:*"",
                ""cognito-identity:*""
            ],
            ""Resource"": ""*""
        },
        {
            ""Action"": [
                ""s3:ListBucket""
            ],
            ""Effect"": ""Allow"",
            ""Resource"": [
                ""arn:aws:s3:::merchant-upload-dev""
            ],
            ""Condition"": {
                ""StringLike"": {
                    ""s3:prefix"": [
                        ""${cognito-identity.amazonaws.com:sub}/*""
                    ]
                }
            }
        },
        {
            ""Action"": [
                ""s3:GetObject"",
                ""s3:PutObject"",
                ""s3:DeleteObject""
            ],
            ""Effect"": ""Allow"",
            ""Resource"": [
                ""arn:aws:s3:::merchant-upload-dev""
            ],
            ""Condition"": {
                ""StringLike"": {
                    ""s3:prefix"": [
                        ""${cognito-identity.amazonaws.com:sub}""
                    ]
                }
            }
        }
    ]
}

Trust Relationship
{
  ""Version"": ""2012-10-17"",
  ""Statement"": [
    {
      ""Effect"": ""Allow"",
      ""Principal"": {
        ""Federated"": ""cognito-identity.amazonaws.com""
      },
      ""Action"": ""sts:AssumeRoleWithWebIdentity"",
      ""Condition"": {
        ""StringEquals"": {
          ""cognito-identity.amazonaws.com:aud"": ""region:value""
        },
        ""ForAnyValue:StringLike"": {
          ""cognito-identity.amazonaws.com:amr"": ""authenticated""
        }
      }
    }
  ]
}

I want to give user access to only his folder thru a static website (not AWS console).

If I replace ""${cognito-identity.amazonaws.com:sub}"" with actual value, then it works, otherwise it gives AccessDenied error. Seems like I am missing something very simple. Please help.

Edited by: kumarrohit_74 on May 9, 2017 5:25 AM

Edited by: kumarrohit_74 on May 9, 2017 6:34 AM"
AWS Key Management Service	"Re: Not able to access S3 folder in a Bucket
Hi  kumarrohit_74,

I think the issue is that with the ListBucket permission, the underlying APIs have a target resouce of the bucket and for the Get/Put/Delete* APIs the target is the full Amazon Resource Name (ARN). Have you tried something like this? {
  ""Version"": ""2012-10-17"",
  ""Statement"": [
    {
      ""Action"": [""s3:ListBucket""],
      ""Effect"": ""Allow"",
      ""Resource"": [""arn:aws:s3:::mybucket""],
      ""Condition"": {""StringLike"": {""s3:prefix"": [""${cognito-identity.amazonaws.com:sub}/*""]}}
    },
    {
      ""Action"": [
        ""s3:GetObject"",
        ""s3:PutObject""
      ],
      ""Effect"": ""Allow"",
      ""Resource"": [""arn:aws:s3:::mybucket/${cognito-identity.amazonaws.com:sub}/*""]
    }
  ]
}


This AWS Mobile blog post (https://aws.amazon.com/blogs/mobile/understanding-amazon-cognito-authentication-part-3-roles-and-policies/) includes a description of the above policy.

-Jeff"
AWS Key Management Service	"Re: Not able to access S3 folder in a Bucket
JeffW@AWS wrote:
Hi  kumarrohit_74,

I think the issue is that with the ListBucket permission, the underlying APIs have a target resouce of the bucket and for the Get/Put/Delete* APIs the target is the full Amazon Resource Name (ARN). Have you tried something like this? {
  ""Version"": ""2012-10-17"",
  ""Statement"": [
    {
      ""Action"": [""s3:ListBucket""],
      ""Effect"": ""Allow"",
      ""Resource"": [""arn:aws:s3:::mybucket""],
      ""Condition"": {""StringLike"": {""s3:prefix"": [""${cognito-identity.amazonaws.com:sub}/*""]}}
    },
    {
      ""Action"": [
        ""s3:GetObject"",
        ""s3:PutObject""
      ],
      ""Effect"": ""Allow"",
      ""Resource"": [""arn:aws:s3:::mybucket/${cognito-identity.amazonaws.com:sub}/*""]
    }
  ]
}


This AWS Mobile blog post (https://aws.amazon.com/blogs/mobile/understanding-amazon-cognito-authentication-part-3-roles-and-policies/) includes a description of the above policy.

-Jeff
Hi,
 I also tried with ListBucket permission only. It still didn't worked out.
{
    ""Version"": ""2012-10-17"",
    ""Statement"": [
        {
            ""Effect"": ""Allow"",
            ""Action"": [
                ""mobileanalytics:PutEvents"",
                ""cognito-sync:*"",
                ""cognito-identity:*""
            ],
            ""Resource"": [
                ""*""
            ]
        },
        {
            ""Action"": [
                ""s3:ListBucket""
            ],
            ""Effect"": ""Allow"",
            ""Resource"": [
                ""arn:aws:s3:::BucketName""
            ],
            ""Condition"": {
                ""StringLike"": {
                    ""s3:prefix"": [
                        ""${cognito-identity.amazonaws.com:sub}/*""
                    ]
                }
            }
        }
    ]
}

Please check the StackOverflow link :
http://stackoverflow.com/questions/43899880/getting-accessdenied-while-accessing-s3-using-cognito-token"
AWS Key Management Service	"Re: Not able to access S3 folder in a Bucket
Hi kumarrohit_74,

Have you confirmed that you have the correct prefix value? cognito-identity.amazonaws.com:sub should resolve to something similar to this: us-east-1:12345678-1234-1234-1234-123456790ab.

-Jeff"
AWS Key Management Service	"Re: Not able to access S3 folder in a Bucket
Hi,
 I think, I copied the SUB directly from Cognito and had not been passing ""region"" i.e. ""us-east-1"" as given in you example. Let me verify and come back.

Thanks"
AWS Key Management Service	"Re: Not able to access S3 folder in a Bucket
Yes, this was the problem.

Thanks"
AWS Key Management Service	"Re: Not able to access S3 folder in a Bucket
I am having the same issue. if i explicitly replace ${cognito-identity.amazonaws.com:sub} with us-east-2:1234-1234... it works

policy looks fine in terms of Resources and arn.

I'm using the android SDK to upload using TransferUtility 2.7.7"
AWS Key Management Service	"Warnings from IAM visual editor for policy granting DeleteRolePolicy action
As part of a CloudformationStack, I define an IAM policy similar to this:

{
    ""Version"": ""2012-10-17"",
    ""Statement"": [
        {
            ""Action"": ""iam:DeleteRolePolicy"",
            ""Resource"": ""arn:aws:iam::MYACCOUNT:role/MYROLENAME"",
            ""Effect"": ""Allow""
        }
    ]
}


where, of course, MYACCOUNT and MYROLENAME are my account ID and the role name as generated by the CFN stack. The policy appears to work as intended: It allows the EC2 instance whose instance profile's role has this policy inline to remove other inline policies that are no longer required. And that's the goal: To allow this particular EC2 instance to remove unneeded inline policies from its own role -- it should not be able to modify any roles other than its own.

However, when I view this policy in the web console's visual editor, I consistently see 2 warnings:


You chose actions that require the role resource type.
One or more actions may not support this resource.


I have tried many things in the visual editor (including selecting the ""Any"" options for the ""role"" and ""Resource"" fields) to avoid these warnings, to no avail. I am able to make ""Resources"" selections that at first seem acceptable, and save the configuration, but the two warnings always reappear when I next view the policy in the visual editor.

I can also define a new policy from scratch in the visual editor, but inevitably get the same warnings.

Can someone please advise on what's going on here, whether or not visual editor is reporting an actual issue, and what I can do to silence the warnings?

Edited by: pmspire on May 21, 2018 4:41 PM"
AWS Key Management Service	"Re: Warnings from IAM visual editor for policy granting DeleteRolePolicy action
Hi,

The warning you are seeing is due to a bug in the visual editor. Your policy is written correctly. I apologize for any inconvenience.

We are looking into a fix. 

--Rob"
AWS Key Management Service	"Re: Warnings from IAM visual editor for policy granting DeleteRolePolicy action
Something like this is happening for me too, but in my case I am getting persistent, impossible to correct warnings relating to my attempt to extend my policy to allow DynamoDB actions. In addition, the Visual Editor is combining my S3 and DynamoDB policies together into one big jumble.

Here is the DynamoDB policy that I added by editing the JSON directly:
        {
            ""Sid"": ""AllowedCatalogActions"",
            ""Effect"": ""Allow"",
            ""Action"": [
                ""dynamodb:BatchGetItem"",
                ""dynamodb:GetItem"",
                ""dynamodb:Scan"",
                ""dynamodb:Query"",
                ""dynamodb:UpdateItem""
            ],
            ""Resource"": [
                ""arn:aws:dynamodb:us-east-2:MY-ACCOUNT-NUM:table/VideoCatalog""
            ]
        }

When I attempted to perform a Scan on my table I received the following error message:
Unable to scan. Error: {
  ""message"": ""User: arn:aws:sts::MY-ACCOUNT-NUM:assumed-role/Cognito_VODStreamTestAuth_Role/CognitoIdentityCredentials is not authorized to perform: dynamodb:Scan on resource: arn:aws:dynamodb:us-east-1:MY-ACCOUNT-NUM:table/VideoCatalog"",
  ""code"": ""AccessDeniedException"",
  ""time"": ""2019-01-27T02:25:27.686Z"",
  ""requestId"": ""blahblah"",
  ""statusCode"": 400,
  ""retryable"": false,
  ""retryDelay"": 18.559011800834146
}

UPDATE: I realized this error is due to my web app looking for the DynamoDB table in the same region as my Cognito User Pool, yet it's in us-east-2. So I moved the table to us-east-1 and the scan worked. Nonetheless, please read on because the Visual Editor still gives warnings and jumbles my policy.

So I returned to the IAM policy. I clicked ""Edit Policy"" and saw that I had 2 DynamoDB warnings:

Even though I specified the table in the Resource section, for ""table"" I had the following warning message:
You chose actions that require the table resource type.

And for ""resource"", in addition to showing the Resource I entered (with the table I specified) I had the following warning:
One or more actions may not support this resource.

I don't understand the resource warning. But for table I went ahead and clicked ""Add ARN"" (to restrict access). I entered the region, account, and table name -- basically reconstructing the value I set in the Resource section of the JSON.

I then added that, clicked the ""Review Policy"" button, and then saved everything. I refreshed my web page and I got the same ""Unable to scan"" error as shown above.

Going back to IAM I see that my policy now looks like this:
        {
            ""Sid"": ""VisualEditor1"",
            ""Effect"": ""Allow"",
            ""Action"": [
                ""s3:GetObject"",
                ""dynamodb:BatchGetItem"",
                ""dynamodb:GetItem"",
                ""dynamodb:Scan"",
                ""s3:ListBucket"",
                ""dynamodb:Query"",
                ""dynamodb:UpdateItem""
            ],
            ""Resource"": [
                ""arn:aws:s3:::complexvod-destination-IDENTIFYINGNUM"",
                ""arn:aws:s3:::complexvod-destination-IDENTIFYINGNUM/*"",
                ""arn:aws:dynamodb:us-east-2:MY-ACCOUNT-NUM:table/VideoCatalog""
            ]
        }

What in the world is going on? I can't make the warnings go away. I can't scan my DynamoDB table. And why is the visual editor combining my S3 and DynamoDB policies... and overwriting my Sid???

Edited by: motivus on Jan 27, 2019 5:44 PM"
AWS Key Management Service	"Unable to delete AWSServiceRoleForApplicationAutoScaling_DynamoDBTable role
Hi,

I can't tell if it is a IAM or a DynamoDB related issue, but I once have a DynamoDB table called ""Person"" which doesn't exist any more and when I try to delete the AWSServiceRoleForApplicationAutoScaling_DynamoDBTable service role it displays ""deletion failed - Service linked role is still in use - Resource ARNs - eu-west-3 - table/Person/index/id-index"".
I suppose there is a dangling reference somewhere...

Any advice ?
Thanks!"
AWS Key Management Service	"Re: Unable to delete AWSServiceRoleForApplicationAutoScaling_DynamoDBTable role
Hi

I see that you are facing errors while deleting service linked role AWSServiceRoleForApplicationAutoScaling_DynamoDBTable. 

As we can see in the error ""table/Person/index/id-index” is still using the role. You can delete a service-linked role only after first deleting the related scalable resources.

You should deregister the scalable target “table/Person/index/id-index” [1]  and also delete the scaling polices[2]

After clearing all the dependencies you can the delete the service-linked role in concern.

Please refer https://docs.aws.amazon.com/autoscaling/plans/userguide/aws-auto-scaling-service-linked-roles.html#delete-service-linked-role for more information. 

Update the thread if you continue to face any issues. 

[1] https://docs.aws.amazon.com/cli/latest/reference/application-autoscaling/deregister-scalable-target.html
[2] https://docs.aws.amazon.com/cli/latest/reference/application-autoscaling/delete-scaling-policy.html"
AWS Key Management Service	"Re: Unable to delete AWSServiceRoleForApplicationAutoScaling_DynamoDBTable role
Yes, that was exactly the point! The autoscaling policy for the index in question was still here despite the table was deleted.

According to the links you provided and using the CLI to delete the corresponding autoscaling resources, I can now get rid of the role.

Thanks"
AWS Key Management Service	"API gateway policy for root resource
I am trying to define a policy for access to the root resource (/) in an API gateway setup.  I have defined the resource and a GET method and the API console shows

 arn:aws:execute-api:eu-west-1:ACCOUNT:API/*/GET/

as the ARN for this method.  But in IAM when I define a policy including:

        {
            ""Sid"": ""VisualEditor2"",
            ""Effect"": ""Allow"",
            ""Action"": ""execute-api:Invoke"",
            ""Resource"": ""arn:aws:execute-api:eu-west-1:ACCOUNT:API/*/GET/""
        },

The IAM console ""Unrecognized resource types"" against this statement.

Is there a different syntax for the root resource?"
AWS Key Management Service	"Policy to hide the view on Services/items they do not have access to ?
I have a need to have a user to be able to access specific S3 buckets. They can have full permissions on those specific buckets, but that's all they need access to (no other buckets, no other services, etc). 

I created the user and policy for S3 and when the user logs in, they see all the other services and all the other buckets on the account. Their permissions look good as they can do anything on the specific S3 buckets and all the other buckets say ""error"" and they're unable to do anything. The only problem is that this is causing confusion, along with all of the other services being listed when they sign in. 

Is there a way to configure a policy for a user to hide everything except for what they have access to? So in this case, when they log into the console, they can only see S3 and their buckets (no other services or any other buckets).

Thanks"
AWS Key Management Service	"Re: Policy to hide the view on Services/items they do not have access to ?
Hello,

I see that you would like to create a policy that displays only the specific bucket that an user is permitted to operate on. Please note that you get to see the buckets on the console due to the API call- ListAllMyBuckets. If you remove this permission, even the bucket that you want to grant access to will not be visible. Hence it is essential to add this permission even if you wish to get the bucket that you want to grant access to listed. One work around would be to do away with this permission in the policy and providing the user with the URL that takes him directly inside the bucket. In the S3 Dashboard click on the required bucket and copy the URL of the bucket and save it in a document and provide it the user. He would directly land inside the bucket, thus not seeing any other buckets. 

Thank You"
AWS Key Management Service	"Is permission lambda:UntagResource bugged?
I created an IAM permission as follow:
{
    ""Version"": ""2012-10-17"",
    ""Statement"": [
        {
            ""Action"": ""lambda:List*"",
            ""Resource"": ""*"",
            ""Effect"": ""Allow"",
            ""Sid"": ""LambdaAllowListing""
        },
        {
            ""Resource"": [
                ""arn:aws:lambda:ap-southeast-1:123456789012:function:my-function""
            ],
            ""Effect"": ""Allow"",
            ""NotAction"": [
                ""lambda:DeleteFunction"",
                ""lambda:TagResource"",
                ""lambda:UntagResource""
            ],
            ""Sid"": ""LambdaAllowFunctionFullAccessExceptDeleteAndTagging""
        }
    ]
}


and I found that I can still remove tag using the following command without error:
aws lambda untag-resource --resource ""arn:aws:lambda:ap-southeast-1:123456789012:function:my-function"" --tag-keys ""test"" --region ap-southeast-1


However if I changed the IAM policy to the following:
{
    ""Version"": ""2012-10-17"",
    ""Statement"": [
        {
            ""Action"": ""lambda:List*"",
            ""Resource"": ""*"",
            ""Effect"": ""Allow"",
            ""Sid"": ""LambdaAllowListing""
        },
        {
            ""Resource"": [
                ""arn:aws:lambda:ap-southeast-1:123456789012:function:my-function""
            ],
            ""Effect"": ""Allow"",
            ""NotAction"": [
                ""lambda:DeleteFunction"",
                ""lambda:*TagResource*""
            ],
            ""Sid"": ""LambdaAllowFunctionFullAccessExceptDeleteAndTagging""
        }
    ]
}


Then I will receive AccessDeniedException. Is that a bug or I did something wrong?"
AWS Key Management Service	"Cloudformation IAM Role and Role/User ID
This question is with reference to this blog entry about using bucket policy Conditions and a role aws:userId to restrict access.

https://aws.amazon.com/blogs/security/how-to-restrict-amazon-s3-bucket-access-to-a-specific-iam-role/

My question is  if I want to create both the role to be assumed and the bucket policy in cloudformation and therefore need to construct the Condition section of the bucket policy, how do I reference the aws:userId property / RoleId of the IAM role in my template? I can't see an obvious way to do this?

Thanks!"
AWS Key Management Service	"Re: Cloudformation IAM Role and Role/User ID
If the role has been created as a resource within the template, you can get the ""aws:userId"" value with:
{
  ""Fn::GetAtt"": [
    ""RootRole"",
    ""RoleId""
  ]
}
Here ""RootRole"" is the Logical ID of the role."
AWS Key Management Service	"Why does IAM returns AccessDenied on non-existent access keys?
Why does IAM returns AccessDenied on non-existent access keys?
$ aws iam get-access-key-last-used --access-key-id AKIAIHUE7PGRYX357LZQ
 
An error occurred (AccessDenied) when calling the GetAccessKeyLastUsed operation: User: arn:aws:sts::************:assumed-role/************/************@******.*** is not authorized to perform iam:GetAccessKeyLastUsed on resource: access key AKIAIHUE7PGRYX357LZQ


Assumed Role has Admin permissions thus allowing GetAccessKeyLastUsed for «*».
I'd expect this operation to return something like NotFound but not AccessDenied to be honest."
AWS Key Management Service	"SAML 'Redirect' profile signature support to aid statically hosted websites
It would be really great if AWS had support for passing the Redirect version of SAML response as well as the Post version. The main difference in the formats seems to be that the signature for 'Redirect' is based on the hash of the encoded query string, while for Post it is based on the digest of the enclosing XML file.

The background is that I am attempting to get a serverless SAML solution up and running for a static S3 website, much like this AWS blog post from 2017, but in a much simpler way: https://aws.amazon.com/blogs/compute/saml-for-your-serverless-javascript-application-part-i/

I have got it working fine with Post as described in the link, but this requires API Gateway and Lambda, just to convert the form-data from the Post call into the query string. If I could instead pass the standard Redirect version with it's query string parameters: SAMLResponse, SigAlg and Signature through to AWS STS. I would no longer need the additional complexities and would have one fewer browser redirect too.

Edited by: MarkAdamson on Jan 9, 2019 10:53 PM"
AWS Key Management Service	"Required permissions to change the instance type of an ec2 instance?
What permissions do I need to grant an IAM user so that the user can change the instance type of an already created instance?"
AWS Key Management Service	"Re: Required permissions to change the instance type of an ec2 instance?
Hello,

In order to change the instance type, user should have the following action allowed in IAM policy.

'ModifyInstanceAttribute'

Also, please ensure that user has sufficient permissions to list, stop and start instances so that he can complete the operation of resizing instance."
AWS Key Management Service	"Federated User - Switch Role Troubleshooting
Hi everyone,
i would like to have my federated users access the aws console using their ad credentials. I followed 
the following guide (and some others as well) and have the console access working using ad credentials
https://aws.amazon.com/blogs/security/enabling-federation-to-aws-using-windows-active-directory-adfs-and-saml-2-0/

One little annoying issue that i am stuck on is that i cannot get the switch role to work. I created 2 test roles. lets call it adfs-readonly and adfs-fulladmin. i added one of my test ad accounts to ad groups that grants me access to both these roles. i can select either role and i can get to the aws console without any issues with my ad credentials but if i try to switch between the roles, i get an error message that says ""Could not switch roles using the provided information. Please check your settings and try again. If you continue to have problems, contact your administrator.""

i think permissions are properly configured:
-sts assumerole policy
{
    ""Version"": ""2012-10-17"",
    ""Statement"": [
        {
            ""Sid"": ""VisualEditor0"",
            ""Effect"": ""Allow"",
            ""Action"": ""sts:AssumeRole"",
            ""Resource"": [
                ""arn:aws:iam::123456781234:role/ADFS-readonly"",
                ""arn:aws:iam::123456781234:role/ADFS-fulladmin""
            ]
        }
    ]
}

trust relationship of adfs-readonly and adfs-fulladmin roles:
{
  ""Version"": ""2012-10-17"",
  ""Statement"": [
    {
      ""Effect"": ""Allow"",
      ""Principal"": {
        ""Federated"": ""arn:aws:iam::123456781234:saml-provider/IdPName""
      },
      ""Action"": ""sts:AssumeRoleWithSAML"",
      ""Condition"": {
        ""StringEquals"": {
          ""SAML:aud"": ""https://signin.aws.amazon.com/saml""
        }
      }
    }
  ]
}

not sure what i am missing or doing wrong. any help would be greatly appreciated.

thanks in advance"
AWS Key Management Service	"(UnauthorizedOperation) when calling the CreateSnapshot operation
I used the IAM Policy Editor to provision a role that is used for a lambda function to manage ec2 volume snapshots.  But I couldn't get it to work.  I've tried both ways (specific and all resources) and the result is the same.

All resources:
         {
            ""Sid"": ""VisualEditor0"",
            ""Effect"": ""Allow"",
            ""Action"": ""ec2:CreateSnapshot"",
            ""Resource"": ""*""
        },


Specific resources:
        {
            ""Sid"": ""VisualEditor0"",
            ""Effect"": ""Allow"",
            ""Action"": ""ec2:CreateSnapshot"",
            ""Resource"": [
                ""arn:aws:ec2:*::snapshot/*"",
                ""arn:aws:ec2:*:*:volume/*""
            ]
        },"
AWS Key Management Service	"awscli not working properly under linux subsystem of windows for AMI
I try use aws-cli inside my linux(ubuntu) subsystem of windows.

my aws-cli version is:

slu@BX-LTB77MLQ2-SS:~$ aws --version
aws-cli/1.16.75 Python/3.6.7 Linux/4.4.0-17134-Microsoft botocore/1.12.65

I use aws-mfa to login my aws account with mfa.

slu@BX-LTB77MLQ2-SS:~$ aws-mfa --profile my-identity
INFO - Validating credentials for profile: my-identity with assumed role: arn:aws:iam::053********:role/NSWPointDeveloperAccess
INFO - Obtaining credentials for a new role or profile.
Enter AWS MFA code for device arn:aws:iam::5053********:mfa/slu (renewing for 43200 seconds):608519
INFO - Fetching Credentials - Profile: cadnsw-identity, Duration: 43200
INFO - Success! Your credentials will expire in 43200 seconds at: 2018-12-17 11:26:36+00:00

and then I change aws profile like:

export AWS_PROFILE=admin_role

then I try to execute some command line of aws, and get access denied error.

slu@BX-LTB77MLQ2-SS:~$ aws s3 ls

An error occurred (AccessDenied) when calling the AssumeRole operation: Access denied

I think that is bug for awscli tools and reporter this to them as bug:

https://github.com/aws/aws-cli/issues/3803

but they told me, "" The CLI has no control over this behavior as it is only echoing an error returned from the service""

Can you told me how to analysis the aws cli and the configuration part of aws config make assumerole operation work?"
AWS Key Management Service	"Enforce tag creation for EC2
I have been trying to create a policy that will not allow an ec2 to be created unless it has a Project tag. Here is what I have now and all I get is ""ec2:RunInstances You are not authorized to perform this operation"" even with I have the tag Project. Any help would be most appreciated. 
{
  ""Version"": ""2012-10-17"",
  ""Statement"": [
      {
          ""Sid"": ""RunCloudFormation"",
          ""Effect"": ""Allow"",
          ""Action"": [
              ""cloudformation:*""
          ],
          ""Resource"": [
              ""*""
          ]
      },
      {
          ""Sid"": ""CreateEC2Instances"",
          ""Effect"": ""Allow"",
          ""Action"": [
              ""ec2:Describe*"",
              ""ec2:CreateSecurityGroup"",
              ""ec2:AuthorizeSecurityGroupIngress"",
              ""ec2:CreateTags"",
              ""ec2:RunInstances""
          ],
          ""Resource"": ""*""
      },
      {
          ""Sid"": ""LaunchingEC2withAMIsAndTags"",
          ""Effect"": ""Allow"",
          ""Action"": ""ec2:RunInstances"",
          ""Resource"": ""arn:aws:ec2:*:*:instance/*"",
          ""Condition"": {
              ""StringLike"": {
                  ""aws:RequestTag/Project"": ""?*""
              }
          }
      }
  ]
} 


Here is a snippet of my cloudformation templete. 
  ""KeyName"": {
          ""Ref"": ""KeyName""
        },
        ""Tags"": [
          {
            ""Key"": ""Project"",
            ""Value"": ""test""
          },
          {
            ""Key"": ""OwnerAdmin"",
            ""Value"": ""myname""
          },
          {
            ""Key"": ""Name"",
            ""Value"": ""TESTTags""
          }
        ],"
AWS Key Management Service	"IAM STS Cross Account Assume Role through SDK
Hello All,

I am trying to do a demo of cross account programmatical access using STS (avoid ""confused deputy"" problem by using external id's) , with the following setup

Account- A (AccountId=1111)
1. Created a role with name arn:aws:iam::1111:role/t1
2. Role Type, I selected "" Allows IAM users from a 3rd party AWS account to access this account."" under ""Role for Cross Account Access""
3. AccountId=2222, External Id: 12
4. Attach Policy - I selected AdministratorAccess.
5. Select CreateRole. The role-arn was ""arn:aws:iam::1111:role/t1""

Account-B  (AccountId=2222)
1. Developed a web application with the following servlet code (for brevity, providing only relevant parts from code)

AWSCredentialsProvider provider = new STSAssumeRoleSessionCredentialsProvider.Builder(
					""arn:aws:iam::1111:role/t1"", ""dummy"").withExternalId(""12"").build();
EC2 ec2Instance2 = ServiceBuilder.forService(EC2.class).withCredentials(provider)
			.withRegion(Region.getRegion(Regions.fromName(""us-east-1""))).build();
Vpc vpc : ec2Instance2.getVpcs();


2. Deployed the war file using Elastic beanstalk. The EC2 instances are started with the role aws-elasticbeanstalk-ec2-role

Problem
Now when I execute the servlet, I get the following error
Error : User arn:aws:sts::2222:assumed-role/aws-elasticbeanstalk-ec2-role/i-093ed19010d25be99 is not authorized to perform: sts:AssumeRole on resource: arn:aws:iam::1111:role/t1 (Service: AWSSecurityTokenService; Status Code: 403; Error Code: AccessDenied; Request ID: fdd1c21b-47d4-11e6-8197-9fb415c79c98)


I am not sure as to what am I missing.

Please help."
AWS Key Management Service	"Re: IAM STS Cross Account Assume Role through SDK
Hello mailharimani,

Your EC2 instance starts with the role aws-elasticbeanstalk-ec2-role. Therefore, the role must have permissions to call STS and assume the other role (arn:aws:iam::1111:role/t1) in the other account. you can add the following to aws-elasticbeanstalk-ec2-role and try again. 

{
  ""Version"": ""2012-10-17"",
  ""Statement"": [{
    ""Effect"": ""Allow"",
    ""Action"": ""sts:AssumeRole"",
    ""Resource"": ""arn:aws:iam::1111:role/t1""
  }]
}


Good Luck
Zaher"
AWS Key Management Service	"Re: IAM STS Cross Account Assume Role through SDK
It's a two step process

First:

{
  ""Version"": ""2012-10-17"",
  ""Statement"": [{
    ""Effect"": ""Allow"",
    ""Action"": ""sts:AssumeRole"",
    ""Resource"": ""arn:aws:iam::1111:role/t1""
  }]
}

Second
Create a Trust Relationship for both account"
AWS Key Management Service	"Specifying SecretManager Exceptions When Forcing MFA
According to documentation: https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_users-self-manage-mfa-and-creds.html

When creating a policy to enforce mfa, you can allow exceptions.
Specifically, I'd like to create exceptions to accessing certain secrets, but the following policy is still blocking access to the secret.

....
       {
            ""Sid"": ""AllowActionsForSecrets"",
            ""Effect"": ""Allow"",
            ""Action"": ""secretsmanager:GetSecretValue"",
            ""Resource"": [
                ""arn:aws:secretsmanager:us-east-1:xxxxxxxxxxxx:secret:NameOfSecret""
            ]
        },
        {
            ""Sid"": ""BlockMostAccessUnlessSignedInWithMFA"",
            ""Effect"": ""Deny"",
            ""NotAction"": [
                ""iam:CreateVirtualMFADevice"",
                ""iam:DeleteVirtualMFADevice"",
                ""iam:ListVirtualMFADevices"",
                ""iam:EnableMFADevice"",
                ""iam:ResyncMFADevice"",
                ""iam:ListAccountAliases"",
                ""iam:ListUsers"",
            ],
            ""Resource"": ""*"",
            ""Condition"": {
                ""BoolIfExists"": {
                    ""aws:MultiFactorAuthPresent"": ""false""
                }
            }"
AWS Key Management Service	"Unable to delete a service-linked role
I have a role that I don't remember creating, using a AWSElasticLoadBalancingServiceRolePolicy policy. The odd thing is, I've never used ELB. If I go to EC2 > Load Balancers, there's nothing there. How can I delete this role?"
AWS Key Management Service	"Re: Unable to delete a service-linked role
Hi ffxsam,

Service-linked roles are created in your account automatically if you or an IAM user in your account tries to create a resource for the linked service (in your case this is ELB). Service-linked roles are predefined by the service and include all the permissions that the service requires to call other AWS services on your behalf.

If there are no load balancers created in your account, you can use the IAM console, the IAM CLI, or the IAM API to delete service-linked roles. For more information, see https://docs.aws.amazon.com/IAM/latest/UserGuide/using-service-linked-roles.html#delete-service-linked-role

To learn more about the service-linked role for ELB, see https://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/elb-service-linked-roles.html

Hope this helps!

Thanks,
Ujjwal"
AWS Key Management Service	"Re: Unable to delete a service-linked role
Hi,
I just tried to delete the service account a few weeks ago and it's failed due to the service account is used. I decide not to delete it but the error hint never disappear, how can I fix it cause it's kinda annoying. Thx!"
AWS Key Management Service	"Re: Unable to delete a service-linked role
Hello Seoker,

Thank you for your feedback. I have added this request to the IAM console roadmap. They will evaluate and prioritize this feature amongst other console enhancements. I will update this thread once this enhancement is available on the console.

Thank you,
Ujjwal"
AWS Key Management Service	"Re: Unable to delete a service-linked role
Do you have any update on this? I'm seeing the same issue. I do not have any ELB instances; however, the AWSElasticLoadBalancingServiceRolePolicy role still exists (with a AWSElasticLoadBalancingServiceRolePolicy attached to it). I am not able to delete this role."
AWS Key Management Service	"Attempting to require MFA to assume a role
I created a role and a user with the following cloudformatin:

Resources:
    
    Publisher:
        Type: AWS::IAM::User
 
    PublisherRole:
        Type: AWS::IAM::Role
        Properties:
            RoleName: site-publisher
            AssumeRolePolicyDocument:
                Statement:
                    Effect: ""Allow""
                    Principal:
                        AWS: !GetAtt [Publisher, Arn]
                    Action: ""sts:AssumeRole""
                    Condition: 
                        BoolIfExists: 
                            aws:MultiFactorAuthPresent: true


With the condition on the role I assumed that mfa would be required to assume the role however from the command line I was able to assume the role without MFA:

aws sts assume-role --role-arn ""arn:aws:iam::xxxxxxxxxxxxxx:role/site-publisher"" --role-session-name ""publish""

Am I misunderstanding something here?"
AWS Key Management Service	"AWS Role Deletion Error - An internal error occurred while trying to delete
I was cleaning up my IAM roles and tried to delete the AWSServiceRoleForRDS role. I now have a permanent ""deletion failed"" error on my IAM screen that won't clear nor can I remove the role.

Steps to Recreate
1. Log into IAM.
2. Select AWSServiceRoleForRDS role.
3. Select Delete Role.
4. I receive an error message: ""Role deletion failed. An internal error occurred while trying to delete the role.""
5. I click the ""x"" on the error message to dismiss.
6. The error message persists and does not dismiss.

How do I permanently dismiss this error message or remove the role?

Edited by: Kalz on Dec 17, 2018 4:26 PM"
AWS Key Management Service	"Re: AWS Role Deletion Error - An internal error occurred while trying to delete
Hello

Deleting a newly created role right away causes this error (I just tried.) 
give it a day and try again, it will be deleted.
As for the error, the banner on top will be deleted the next time you refresh the page.  the red border for that role in the list, will remain there until you actually get to delete it.

RT"
AWS Key Management Service	"Accessing IAM canonical IDs when logged-in as root user
Hel there,

I'm new to AWS and am trying to set S3 bucket permissions for IAM users when logged-in as root user, but I do not see where their canonical IDs are located so that I may add them to the permissions. 

My assumption was that these would be accessible under the Users tab of the IAM interface, but no luck there. 

Any guidance?

Cheers,

Siobhán

Edited by: Sio on Dec 19, 2018 1:37 PM"
AWS Key Management Service	"Re: Accessing IAM canonical IDs when logged-in as root user
Found an answer."
AWS Key Management Service	"AWS STS always returning same access key ID which is not recognised?
I am using AWS STS (Security Token Service) to authenticate a service which then calls STS.assumeRole() to obtain putObject() permissions on AWS S3.

I have noticed AWS STS always returns the same, identical access key (&ltAccess Key Removed>), the secretAccessKey is always different.

When using the generated access key and secret access key to call S3.putObject() I get an error :

InvalidAccessKeyId: ""The AWS Access Key Id you provided does not exist in our records."""
AWS Key Management Service	"Multiple MFA devices for a single IAM user?
Is it possible to enroll more than one MFA device for a given IAM user?  Scenario: I have a virtual MFA device on my phone and want to have one on my tablet as well."
AWS Key Management Service	"Re: Multiple MFA devices for a single IAM user?
Hello,

Unfortunately at this time it is only possible to have a single MFA per account.

I have however raised this with our development team to be considered as a feature for future development.

Best Regards,

Davin G."
AWS Key Management Service	"Re: Multiple MFA devices for a single IAM user?
This would be a wonderful add for us as well.
Each account has at least two admins, and occasionally one of the admins needs to log in from home or another location. The limitation of a single MFA device per user basically ensures that we cannot use this feature at all, else one of our admins may be locked out at an inopportune time."
AWS Key Management Service	"Re: Multiple MFA devices for a single IAM user?
+1"
AWS Key Management Service	"Re: Multiple MFA devices for a single IAM user?
May I ask if anything changed since then? We'd also appreciate having multiple MFA devices for the same user"
AWS Key Management Service	"Re: Multiple MFA devices for a single IAM user?
+1"
AWS Key Management Service	"Re: Multiple MFA devices for a single IAM user?
That is a must for any large corporation having more then one administrator.
I cannot believe they still don't support multiple devices for MFA."
AWS Key Management Service	"Re: Multiple MFA devices for a single IAM user?
Just scan the QR code on multiple devices when you set up MFA. The scanned devices will receive the same tokens."
AWS Key Management Service	"Re: Multiple MFA devices for a single IAM user?
Any news on when IAM will support multiple hardware tokens?"
AWS Key Management Service	"Re: Multiple MFA devices for a single IAM user?
I am +1 for this. The addition of native yubikey support is great, however, most other sites do suport adding multiple MFA devices to to a single account. Having that here would also be nice, as keys do get lost or damaged, and if you only rely on one, then you have a single point of failure, and you've got (potentially big) problems.

With that said, there is a work-around, which I believe works for AWS: create an IAM ""admin"" group with full privileges, and then for each MFA device that you want to register, set it up with an individual IAM user account which will be part of the admin group. The downside is that you know need to keep track of the multiple account usernames, and know which one needs to go with which MFA device. Not ideal, but it works.

Edited by: guzzijason on Oct 3, 2018 2:11 PM"
AWS Key Management Service	"Re: Multiple MFA devices for a single IAM user?
With U2F now supported, I want to re-open the question of why AWS does not support more than one MFA device per account.

Virtually every other service that works with U2F allows multiple such devices to be enrolled."
AWS Key Management Service	"Re: Multiple MFA devices for a single IAM user?
Normally when using a U2F device as second factor I register two devices with the service (supported by most services). One device a use on a daily basis and one device that is stored safely as a backup. So being able to register multiple devices as second factor for AWS is a mandatory feature. A mix of physical an virtual devices would also be more than welcome.

Robin"
AWS Key Management Service	"Re: Multiple MFA devices for a single IAM user?
We can't deploy the new Yubikey functionality until multiple devices are supported for each user.  Please follow Google Advanced Protection Program's best practices of requiring (or at least allowing) a USB-based key and a Bluetooth-based key.  One stays at the office and one travels with you.  This is the only way to ensure some degree of backup in case a device is lost, and is also the only way to manage mobile device connectivity, where a physical USB device won't work.  It's great to see progress on this front (though disappointing to see AWS lagging so far behind in something like this), but we need the full solution before we can deploy."
AWS Key Management Service	"Re: Multiple MFA devices for a single IAM user?
+1 for Multiple MFA (2 U2F keys and/or combination of Authenticator App + U2F key) - like in ""live"" environments ... every key cylinder gets default 3 keys and not only 1 key attached..."
AWS Key Management Service	"Re: Multiple MFA devices for a single IAM user?
I've figured out a very ugly workaround, and it won't be feasible for a large organization.

Let's say you have a user _""joe_smith""_, who has two yubikeys, and you also want him to be able to fallback to a virtual TOTP device.  I would then create IAM users _""joe_smith+1""_ and _""joe_smith+2""_, leaving the original ""joe_smith"" account with the virtual TOTP device.  Put the new accounts in the exact same group(s) as the old account (I assume that we all grant permissions to groups, not directly to users), assign them the same password (or not, if Joe uses a password manager) and most things shouldn't care which user Joe logs in as. 

That won't work for things like this forum, where the IAM user is really used for identity not, just for access management.  Likewise this won't work if you have policies using ${aws:username} or ${aws:userid} like the following example from the AWS Blog: https://aws.amazon.com/blogs/aws/variables-in-aws-access-control-policies/

{ 
   “Version” : “2012-10-17”, 
   “Statement” : [ 
     { 
       “Action” : [ “s3:ListBucket” ], 
       “Effect” : “Allow”, 
       “Resource” : [ “arn:aws:s3:::myBucket” ], 
       “Condition” : { “StringLike” : 
      { “s3:prefix” : [ “home/${aws:username}/*” ] } } 
     }, 
     { 
       “Action” : [ “s3:GetObject”, “s3:PutObject”, “s3:DeleteObject*” ], 
       “Effect” : “Allow”, 
       “Resource” : [ “arn:aws:s3:::myBucket/home/${aws:username}”, 
       “arn:aws:s3:::myBucket/home/${aws:username}/*” ] 
     } 
] 
}


Though in theory you might make that work too if you are totally consistent about using the ""+"" suffix only for ""accounts"" that belong to the same ""user"" (like gmail does with foobar+whatever@gmail.com addressed).  In that case using wildcards:

“Resource” : [
       “arn:aws:s3:::myBucket/home/${aws:username}”, 
       “arn:aws:s3:::myBucket/home/${aws:username}+?”, 
       “arn:aws:s3:::myBucket/home/${aws:username}/*”,
       “arn:aws:s3:::myBucket/home/${aws:username}+?/*”
 ]


Yeah, I know it's ugly.  But I absolutely had to have backup MFA devices, and couldn't wait for AWS to implement this feature."
AWS Key Management Service	"Re: Multiple MFA devices for a single IAM user?
Unfortunately, at the moment an IAM user can only have one MFA device attached to it. As a workaround, you can consider creating two IAM users for your usage. One with MFA on your phone and one with MFA on your tab. Keep the policies same on both the users."
AWS Key Management Service	"Re: Multiple MFA devices for a single IAM user?
+1 for mutiple MFAs on one account. An additional backup MFA is a requirement.

Edited by: Koniak on Dec 3, 2018 7:55 AM"
AWS Key Management Service	"Re: Multiple MFA devices for a single IAM user?
Hello,

Currently, only one MFA hardware device per AWS account root user can be used. However, you can enable multiple virtual MFA devices for an AWS root accounts by using the QR code. Another method could be using the secret key in place of bar code generated during the MFA activation.

Here are the steps that you can take to have multiple virtual MFA devices on a single Root account using two different Google Authentication Apps (on different devices) by scanning the QR code:

1. Login to the root account and go to security credential tab for the account because IAM console does not have the root account details.
2. Select Multi-Factor Authentication tab.
3. Click on Activate MFA. (If you already have one activated, you will need to deactivate it and activate it again)
4. Select Virtual MFA
5. Prior to scanning the QR code from any virtual MFA device such as Google Authenticator, take a snapshot of the QR code (please hold it securely).
6. Activate the Device1 by scanning the QR code.
7. Activate the Device2 by scanning the QR code from the taken snapshot.

You should see the same 6 numbers generated on both devices, meaning that you now have virtual MFA enabled for two devices on the same account.

Please note that the downside of this approach is that auditing of the now shared root account becomes less meaningful as you can no longer guarantee that the activities were performed only by a single user. Therefore AWS recommends using one virtual MFA per root account/IAM user. However if it is necessary to your business requirements to have two, feel free to do so keeping the auditing limitation in mind.

That being said, we already have a feature request in place for tracking customer’s interest for having multiple MFA devices on the same IAM user/Root account. Kindly check our What's New page[1], Blog[2] and RSS Feed[3] for latest updates on AWS where we announce all new features when we release them. 

Let us know know in case you require further assistance."
AWS Key Management Service	"Limit CreateTags permission
In our solution we require certain permissions from our customers - part of them are TerminateInstance, DetachVolume and some more destructive permissions - currently we limit them that the resource must have a tag key - however we also need to have createTags permissions

i saw that i can limit the createTags to only creation actions - which is good 
out solution deploy storage instances in the customer vpc and we use cloud formation for that - and there we add the tags. i saw that i am getting client not authorized - as it seems that cft add the tags after creation
is there an option to limit createTags - only if it come from cft service or do i have any ""bug"" in my policy?

{
    ""Version"": ""2012-10-17"",
    ""Statement"": [
        {
            ""Effect"": ""Allow"",
            ""Action"": [
                ""iam:ListInstanceProfiles"",
                ""iam:CreateRole"",
                ""iam:DeleteRole"",
                ""iam:PutRolePolicy"",
                ""iam:CreateInstanceProfile"",
                ""iam:DeleteRolePolicy"",
                ""iam:AddRoleToInstanceProfile"",
                ""iam:RemoveRoleFromInstanceProfile"",
                ""iam:DeleteInstanceProfile"",
                ""ec2:ModifyVolumeAttribute"",
                ""sts:DecodeAuthorizationMessage"",
                ""ec2:DescribeImages"",
                ""ec2:DescribeRouteTables"",
                ""ec2:DescribeInstances"",
                ""iam:PassRole"",
                ""ec2:DescribeInstanceStatus"",
                ""ec2:RunInstances"",
                ""ec2:ModifyInstanceAttribute"",
                ""ec2:CreateVolume"",
                ""ec2:DescribeVolumes"",
                ""ec2:DeleteVolume"",
                ""ec2:CreateSecurityGroup"",
                ""ec2:DeleteSecurityGroup"",
                ""ec2:DescribeSecurityGroups"",
                ""ec2:RevokeSecurityGroupEgress"",
                ""ec2:AuthorizeSecurityGroupEgress"",
                ""ec2:AuthorizeSecurityGroupIngress"",
                ""ec2:RevokeSecurityGroupIngress"",
                ""ec2:CreateNetworkInterface"",
                ""ec2:DescribeNetworkInterfaces"",
                ""ec2:DeleteNetworkInterface"",
                ""ec2:ModifyNetworkInterfaceAttribute"",
                ""ec2:DescribeSubnets"",
                ""ec2:DescribeVpcs"",
                ""ec2:DescribeDhcpOptions"",
                ""ec2:CreateSnapshot"",
                ""ec2:DeleteSnapshot"",
                ""ec2:DescribeSnapshots"",
                ""ec2:GetConsoleOutput"",
                ""ec2:DescribeKeyPairs"",
                ""ec2:DescribeRegions"",
                ""ec2:DeleteTags"",
                ""ec2:DescribeTags"",
                ""cloudformation:CreateStack"",
                ""cloudformation:DeleteStack"",
                ""cloudformation:DescribeStacks"",
                ""cloudformation:DescribeStackEvents"",
                ""cloudformation:ValidateTemplate"",
                ""s3:GetObject"",
                ""s3:ListBucket"",
                ""s3:ListAllMyBuckets"",
                ""s3:GetBucketTagging"",
                ""s3:GetBucketLocation"",
                ""s3:CreateBucket"",
                ""kms:List*"",
                ""kms:Describe*"",
                ""kms:ReEncrypt*"",
                ""kms:CreateGrant"",
                ""kms:ReEncrypt*"",
                ""kms:CreateGrant"",
                ""ec2:AssociateIamInstanceProfile"",
                ""ec2:DescribeIamInstanceProfileAssociations"",
                ""ec2:DisassociateIamInstanceProfile"",
                ""ec2:DescribeInstanceAttribute"",
                ""ce:GetReservationUtilization"",
                ""ce:GetDimensionValues"",
                ""ce:GetCostAndUsage"",
                ""ce:GetTags"",
                ""ec2:CreatePlacementGroup"",
                ""ec2:DeletePlacementGroup""
            ],
            ""Resource"": ""*""
        },
        {
            ""Sid"": ""fabricPoolPolicy"",
            ""Effect"": ""Allow"",
            ""Action"": [
                ""s3:DeleteBucket"",
                ""s3:GetLifecycleConfiguration"",
                ""s3:PutLifecycleConfiguration"",
                ""s3:PutBucketTagging"",
                ""s3:ListBucketVersions""
            ],
            ""Resource"": [
                ""arn:aws:s3:::fabric-pool*""
            ]
        },
        {
            ""Effect"": ""Allow"",
            ""Action"": [
                ""ec2:StartInstances"",
                ""ec2:StopInstances"",
                ""ec2:TerminateInstances"",
                ""ec2:AttachVolume"",
                ""ec2:DetachVolume""
            ],
            ""Condition"": {
                ""StringLike"": {
                    ""ec2:ResourceTag/WorkingEnvironment"": ""*""
                }
            },
            ""Resource"": [
                ""arn:aws:ec2:::instance/*""
            ]
        },
        {
            ""Effect"": ""Allow"",
            ""Action"": [
                ""ec2:AttachVolume"",
                ""ec2:DetachVolume""
            ],
            ""Resource"": [
                ""arn:aws:ec2:::volume/*""
            ]
        },
        {
            ""Effect"": ""Allow"",
            ""Action"": [
                ""ec2:DeleteVolume""
            ],
            ""Condition"": {
                ""StringLike"": {
                    ""ec2:ResourceTag/WorkingEnvironment"": ""*""
                }
            },
            ""Resource"": [
                ""arn:aws:ec2:::volume/*""
            ]
        },
        {
            ""Sid"": ""VisualEditor0"",
            ""Effect"": ""Allow"",
            ""Action"": ""ec2:CreateTags"",
            ""Resource"": ""*"",
            ""Condition"": {
                ""StringEquals"": {
                    ""ec2:CreateAction"": [
                        ""CreateVolume"",
                        ""CreateSecurityGroup"",
                        ""CreateNetworkInterface"",
                        ""CreateSnapshot"",
                        ""RunInstances""
                    ]
                }
            }
        }
    ]
}"
AWS Key Management Service	"IAM Example Policies in Amazon Cognito
Are the example polices in the Amazon Cognito documentation even still valid?  I tried pasting some of the JSON from https://docs.aws.amazon.com/cognito/latest/developerguide/role-based-access-control.html into the JSON editor of the IAM section and the editor refused to let me review the policy.  I'm trying to figure out what is the correct IAM policies for allowing authenticated users from Cognito Federated Identity Pools and figuring out how to correctly write the policies is extremely difficult without having to deal with outdated/incorrect examples."
AWS Key Management Service	"Instance Profile Not Auto-Assigned On Creation
I am trying to export my table from DynamoDB to S3. However, I cannot get the pipeline to work correctly because of the IAM roles. The documentation  https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DynamoDBPipeline.html  shows that if I create the default roles in the console, they will be created with instance profiles.

However, when I create them, only the DataPipelineDefaultResourceRole is created with an instance profile. How can I get an instance profile on the DataPipelineDefaultRole? It seems my pipeline will not run without this."
AWS Key Management Service	"How do I know what access I have
Hello Friends,

I am an IAM user, my AWS team has created IAM user for me. I am able to login to my IAM account in management console.  

How do i know what access I have? I would like to know what services I have access to. can I do that from management console/CLI/API?

Basically I would like to know  how many services I can access and what level of access I have.

Thank you"
AWS Key Management Service	"Unable to grant cross-account access to S3 bucket
Hi,

I'm following the document here:

https://aws.amazon.com/premiumsupport/knowledge-center/cross-account-access-s3/ (Resolution: Resource-based policies and IAM policies)

I'm the account that has the bucket & use the following syntax:
{
    ""Version"": ""2012-10-17"",
    ""Statement"": [
        {
            ""Effect"": ""Allow"",
            ""Principal"": {
                ""AWS"": ""arn:aws:iam::xxxxxxx:user/xxxxx""
            },
            ""Action"": [
                ""s3:GetObject"",
                ""s3:PutObject"",
                ""s3:PutObjectAcl""
            ],
            ""Resource"": [
                ""arn:aws:s3:::xxxxxxxxxx/*""
            ]
        }
    ]
}


This syntax apparently is wrong as I get the following error: ""This policy contains the following error: Has prohibited field Principal""

The principal is pretty much exactly like the example in the document. Am I missing something?"
AWS Key Management Service	"Re: Unable to grant cross-account access to S3 bucket
I'm an idiot apparently, I was trying to create this policy before applying to bucket, apparently you don't need that."
AWS Key Management Service	"Couldn't retrieve verification key from your identity provider
I have created an OIDC provider in IAM.

The url is: idgatewayawsstage.flqa.net/
The configuration is accessible at: https://idgatewayawsstage.flqa.net/.well-known/openid-configuration
From there you can get the jwks_uri and go here: https://idgatewayawsstage.flqa.net/.well-known/jwks

The ""iss"" in the claims is: ""https://idgatewayawsstage.flqa.net/"" and is apparently matched.  I can change the url value in the provider and get the ""No OpenIDConnect provider found"" error.

Upon attempting an action via the api passing a valid JWT in the WebIdentityCredentials with the roleArn that trusts the OIDC provider I receive the error:  Couldn't retrieve verification key from your identity provider, please reference AssumeRoleWithWebIdentity documentation for requirements

Can anyone explain why I am receiving this error?  I have reviewed the suggested documentation and have not come across any help."
AWS Key Management Service	"Can't activate mfa
Hello, I'm new user and I try to activate mfa for my aws account.
I do the same as guide, but got message:
We encountered the following errors while processing your request:
 Failed to associate the token

I use google authenticator and scan barcode.

How to solve this issue?

Edited by: anton on Jul 12, 2015 6:23 AM"
AWS Key Management Service	"Re: Can't activate mfa
Hi Anton,

Please confirm whether this issue pertains to IAM user or root account access. 

If it pertains to an IAM user, please ensure that you or your AWS admin are appropriately configuring and enabling Virtual MFA for the IAM user.  You can find more information in the  Configure and Enable a Virtual MFA Device for a User documentation. 

If this issue pertains to root account access, it is most likely a result of the Virtual MFA device itself. You can set up Authenticator for MFA by inputting 2 codes as opposed to scanning a barcode. Instructions for this option can be found in the  Configuring and Managing a Virtual MFA Device for Your AWS Account. You can also try reinstalling the Authenticator application on your device.

Thank You,
Brigid"
AWS Key Management Service	"Re: Can't activate mfa
Hello Brigid,

I am having the same problem activating a root account. I have tried with both the AWS MFA client for Android and Google Authenticate. I scan the barcode which tells me my account is root-account-mfa-device@clcloudguru. I type in two consecutive six-digit codes and invariably I get the message ""Failed to associate the token."" This happens with both MFA clients. What am I doing wrong?

Thank you

--Creede

Edited by: clcloudguru on Aug 1, 2015 1:51 PM"
AWS Key Management Service	"Re: Can't activate mfa
This is a follow-up to my post above.

I was able to successfully set up two-factor authentication by using a different device, in this case a Galaxy S3 phone. Originally I had been using an unbranded tablet. My guess, which I have no way to confirm at this point, is that there is something missing from the unbranded, generic Android tablet that the Galaxy S3 has. It could be the device's serial number. In an attempt to cut costs, the tablet manufacturer gave the tablet a serial number of 0123456789ABCDEF. I've seen this before on other low-end tablets. By contrast the Galaxy looks like it has a proper serial number.

Again, I can't conclusively say that the serial number is the problem, but it might be the sort of thing to look for when troubleshooting the issue."
AWS Key Management Service	"Re: Can't activate mfa
There should be no reliance on the serial number of the device.  What needs to be somewhat in sync though is the time.  I suspect that there was probably a significant enough difference between the date/time on your tablet and that of the AWS server."
AWS Key Management Service	"Re: Can't activate mfa
clcloudguru,

Thank you for your query and the additional information.

Can you confirm that the authenticator app installed on the tablet in question can be used successfully to conduct Multifactor authentication (MFA) for other applications?

-Vikram"
AWS Key Management Service	"Re: Can't activate mfa
Sorry about the months-late reply. I only ever tried MFA on Amazon so I don't have any other experience to compare it to. However I was able just yesterday to set up another Amazon MFA - with another device with a bogus serial number, not as you state that it makes any difference - and it authenticated perfectly.

Given the quality or lack thereof of the original device I used to try to authenticate, the possibility of having the time be askew would not surprise me at all.

Cheers."
AWS Key Management Service	"Re: Can't activate mfa
I had the same error and got my setup working using Google Authenticator and an Android device.

The Google Authenticator didn't work the first time.  Instead, I followed the MFA process a SECOND time (scan the barcode, etc.) and created a ""new"" authenticator.  That one worked!

Comments here point to two potential issues: 1. timing differences and 2. using different devices (tablet, phone, etc.)  While these may be an issue for others, addressing neither helped me.  These results make me think there's a bug with AWS."
AWS Key Management Service	"Re: Can't activate mfa
I fixed this issue by doing the following:
Deleted the AWS Root Services entry from my Google Authenticator app.
Deleted the Google Authenticator app from my phone. 
Installed Microsoft Authenticator app. 
Scanned the QR code and the Virtual MFA was enabled for the Root Access in the IAM Management Console."
AWS Key Management Service	"Sort user list on last activity
We have around 50 users set up on our AWS account and I would like to understand the last login activity of each user. As of now, on the IAM console - I am not able to sort on the ""Last Activity"" field.

Is there any plan to include sorting on the fields on IAM users console?"
AWS Key Management Service	"Re: Sort user list on last activity
Hello,

Yes, it's on our roadmap to include sorting on the fields on IAM users Console. We already have a open feature request in place for the same. Unfortunately, currently I don't have an ETA by when the feature will be available. So, I encourage you to periodically check our What's New page[1], Blog[2] and RSS Feed[3] for latest updates on AWS where we announce all new features when we release them. 

Let us know know in case you require further assistance.

References:-
[1] https://aws.amazon.com/new/
[2] https://aws.amazon.com/blogs/aws/
[3] https://aws.amazon.com/new/feed/"
AWS Key Management Service	"get RoleSessionName when temp credentials are used
Scenario is: 

I have a client that is logged into my system. Authentication is not done through Cognito, but just custom code against my application server.
This client can get temporary credentials for AWS services, using STS (assume a role). This is done on the server side (from  the application server).
The client receives the temporary credentials and use them to upload to S3 and invoke lambdas later on.

The problem is that when the lambda is invoked I need to refer back the user id (applicatoin user id, not the AWS user id), and as I said I am not using Cognito.

Also I see that assume role requires a RoleSessionName. If I could retrieve this value later when the lambda is invoked, it would solve my problem (RoleSessionName could just be my user id). Unfortunately I don't see any way to retrieve the specified RoleSessionName.

Any idea or alternative solution here?

I know best practice would be Cognito here, but it's kinda overkilling for my case. I will eventually move to Cognito, but definitely not now."
AWS Key Management Service	"SSM Policy doesn't work like the documentation
Hi there.
I tried to provide a policy following the samples here: https://docs.aws.amazon.com/systems-manager/latest/userguide/getting-started-restrict-access-examples.html

But, I keep getting a warning and it does not work.

These are all I tried so far:
{
    ""Version"": ""2012-10-17"",
    ""Statement"": [
        {
            ""Sid"": ""AllowStartSessionExceptProd"",
            ""Effect"": ""Allow"",
            ""Action"": [
                ""ssm:StartSession""
            ],
            ""Resource"": ""*"",
            ""Condition"": {
                ""StringNotLike"": {
                    ""ssm:resourceTag/environment"": [
                        ""prod"",
                        ""Prod""
                    ]
                }
            }
        }
    ]
}

{
    ""Version"": ""2012-10-17"",
    ""Statement"": [
        {
            ""Sid"": ""AllowStartSessionExceptProd"",
            ""Effect"": ""Allow"",
            ""Action"": [
                ""ssm:StartSession""
            ],
            ""Resource"": ""*"",
            ""Condition"": {
                ""StringEquals"": {
                    ""arn:aws:ec2:*:*:instance"": [
                        ""i-myInstanceId1"",
                        ""i-myInstanceId2""
                    ]
                }
            }
        }
    ]
}


Or even I tried to use more resource-based conditions.
{
    ""Version"": ""2012-10-17"",
    ""Statement"": [
        {
            ""Sid"": ""AllowStartSessionExceptProd"",
            ""Effect"": ""Allow"",
            ""Action"": [
                ""ssm:StartSession""
            ],
            ""Resource"": ""*"",
            ""Condition"": {
                ""StringNotLike"": {
                    ""ssm:resourceTag/environment"": [
                        ""prod"",
                        ""Prod""
                    ],
                    ""arn:aws:ec2:*:*:resourceTag/environment"": [
                        ""prod"",
                        ""Prod""
                    ],
                    ""ec2:resourceTag/environment"": [
                        ""prod"",
                        ""Prod""
                    ]
                }
            }
        }
    ]
}


In general, all I want to do is allow access to start session in SSM on servers which are not prod servers.
My EC2 prod servers all have a tag environment:prod

I appreciate any help."
AWS Key Management Service	"delegate from CLI using roles/polices created for console switch role
I am working on setting up the ability to switch delegate access across our accounts from the web console and the cli. I followed this - https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html for the web console setup and have it working. 

I am now working on the cli using this-  
https://aws.amazon.com/blogs/security/how-to-use-a-single-iam-user-to-easily-access-all-your-accounts-by-using-the-aws-cli/ . 

I am attempting to use the role/policy I created in the console setup in cli configuration.  It seems to match up with the CLI instructions, except that the policy is not set to specific user. Instead it is set :
""AWS"": ""arn:aws:iam::<aws account id>:root""

I was able to add it to the config file:

default
output = json
region = us-east-2

profile AdminDEVTEST
role_Admin = arn:aws:iam::<aws account id>:role/Admin
source_profile = default

However, if I run a profile specific command I get an error of:
aws iam list-users --profile AdminDEVTEST
Unable to locate credentials. You can configure credentials by running ""aws configure"".

Any guidance on what I did incorrectly? Or is this not possible?

Thanks."
AWS Key Management Service	"Folder policy oddities. ForAllValues: for s3:prefix. Deny policy is needed.
I use the following rule to restrict user access to a certain folder inside the bucket. The user gets the content listed with the latest version of the .Net AWS SDK library via AmazonS3Client.ListObjects call. With the rule not set the user access is denied on either a ""with delimiter"" request (getting just a folder direct content with running next request for a next level folder on expanding it in the UI) or ""with no delimiter"" request (entire bucket content traversing with one request for the empty prefix). There are two things I do not understand about this rule:
        {
            ""Sid"": ""AllowListingBucketFolder"",
            ""Effect"": ""Allow"",
            ""Action"": ""s3:ListBucket"",
            ""Resource"": ""arn:aws:s3:::<Bucket_Name>"",
            ""Condition"": {
                ""ForAllValues:StringEquals"": {
                    ""s3:prefix"": [
                        """",
                        ""<FolderToAllowAccess_Name>/""
                    ],
                    ""s3:delimiter"": ""/""
                }
            }
        }
1. ForAllValues:StringEquals Without ""ForAllValues:"" the rule does not work. The access is still denied even though the rule is set. My understanding is ""ForAllValues:"" is supposed to be used vs ""ForAnyValue:"" in case the condition attributes are in fact sets of attributes like a set of columns. Both ""s3:prefix"" and ""s3:delimiter"" are single ones as there is just one prefix and just one delimiter in the context of a ListBucket action call. Then I would expect ""ForAllValues:"" to be irrelevant here and thus to be ignored or even to be not a valid addition to the condition operator. But somehow without ""ForAllValues:"" the rule does not work and with it the rule works. It makes no sense for me. Why is it so?
2. As soon as ""ForAllValues:"" is added to the condition operator the rule starts to work. ""With delimiter"" requests work exactly as expected. The user is allowed to list bucket root objects (prefix is not set) and then only ""<FolderToAllowAccess_Name>/"" prefix works for the user (drilling deeper is not relevant for the question).
But! If delimiter is not set for a request with empty prefix for some reason I do not understand the access is still granted to the user. The user gets entire bucket content with one sweep. This experience is in line with what is described in some other threads. But why? The rule clearly states the condition is to have a request delimiter set and set to a particular value (""/""). Empty delimiter should not qualify. I would expect ""No delimiter"" request to fail. As I already mentioned above the ""no delimiter"" request fails if this particular rule is not set. Thus I assume there is no other policy that makes ""no delimiter"" requests to be valid ones. The workaround is to set an extra ""Deny"" policy for ""no delimiter"" requests. That is what suggested in the rest of the discussions. But why is this extra ""deny"" policy needed in the first place if without the rule set ""no delimiter"" requests are rejected and the rule has nothing to do as for me with allowing ""no delimiter"" requests? Why does this rule make ""no delimiter"" requests valid?

Edited by: DShevelev on Nov 23, 2018 12:18 AM

Edited by: DShevelev on Nov 23, 2018 12:19 AM"
AWS Key Management Service	"ROOT account lost access to all resources
Hello,

Root account lost permission to all resources, including billing, personal settings, even Support Center...

User: arn:aws:iam::982652499360:root is not authorized to perform: 

Account Id: 982652499360
Email: services@foxtrapp.com

Also, we receive the error: Internal server error (see attached files)
We already tried to contact support by email correspondence, but we didn't get the resolution of this issue yet.

Please, fix this.  

Thanks.

Edited by: Foxtrapp on Nov 21, 2018 3:52 AM"
AWS Key Management Service	"Principal in resource-based policy is a user in an external account
If a resource-based policy attached to a resource belonging to Account A specifies a particular user (Bob) in Account B as a Principle, does the root user of Account B automatically get the permissions allowed to Bob in that policy?"
AWS Key Management Service	"Re: Principal in resource-based policy is a user in an external account
No, it grants access only to the user Bob in the other account. To add permission for the root user, you will have to explicitly specify the ARN of the root user in the resource section."
AWS Key Management Service	"SAML IAM errors with ADFS: AWSOpenIdDiscoveryService; InvalidIdentityToken
We have configured and double-checked many times a SAML IdP with our local ADFS service.
What happens, we can see AWS login page with the selection of available accounts and roles, but as on submitting this page we get the following error. It is also logged in the CloudTrail but we do not know how to further troubleshoot.

AWSOpenIdDiscoveryService; Status Code: 400; Error Code: AuthSamlManifestNotFoundException; Request ID: xxx-yyy....)
 (Service: AWSSecurityTokenService; Status Code: 400; Error Code: InvalidIdentityToken;


Reference tutorial we are following:
https://aws.amazon.com/de/blogs/security/how-to-set-up-sso-to-the-aws-management-console-for-multiple-accounts-by-using-ad-fs-and-saml-2-0/

There is an AWS/ADFS troubleshooting page but it does not refer to AuthSamlManifestNotFoundException
.
https://docs.aws.amazon.com/de_de/IAM/latest/UserGuide/troubleshoot_saml.html

Same error has been reported with Okta:
https://support.okta.com/help/s/question/0D50Z00008C3jo0SAB/aws-error-specified-provider-doesnt-exist

Edited by: peter1980 on Nov 16, 2018 12:48 AM"
AWS Key Management Service	"Re: SAML IAM errors with ADFS: AWSOpenIdDiscoveryService; InvalidIdentityToken
Double-check was not enough. Triple-check shows: there was a mismatch in the ARN name es referenced in AttributeValue!"
AWS Key Management Service	"Re: SAML IAM errors with ADFS: AWSOpenIdDiscoveryService; InvalidIdentityToken
solved."
AWS Key Management Service	"Identity Provider Err: Audience can contain only alphanumeric characters...
Hi,

I have already created an OIDC identity provider in the IAM console.  I have added the client ID of my OIDC application as one Audience.  Now, I would like to add an Audience like: api://default (the audience when I am issued an access_token from my default auth server). 
 However, I get an error explaining that only alphanumeric and other special characters are permitted.  

How do I proceed with Web Identity Federation when aud = ""api://default""?

Thanks.

Create OIDC IdP - https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_oidc.html
AWS JS SDK for Web Identity Federation - https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/loading-browser-credentials-federated-id.html"
AWS Key Management Service	"Limiting api call to a certain server
Hello

i have a server inside a vpc that needs to call Elastic beanstalk Api to launch and terminate elastic beanstalk environments.

Natrually, such calls require a lot of permissions to that aws api user. i would feel much more comfortable if i could limit the api calls of this user only to a certain server ip.

I tried to use apolicy that denies calls from {""IpAddressIfExists"": {""aws:SourceIp"" :  } like in this example: https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_examples_aws_deny-ip.html

but this only works if the server is not inside a vpc. however,  i need this server to be inside a vpc.

i also tried to do the limitation with ""StringEqualsIfExists"" : {""aws:SourceVpc"" : } } but this doesn't seem to work - all calls are blocked.

So my question is - is this supposed to work? is there a way to limit all api calls of an aws user  to a certain Server

Thank!"
AWS Key Management Service	"VPC Lockdown Template
Hi,

So I have been attempting to amend the template from this guide https://aws.amazon.com/blogs/security/how-to-automate-restricting-access-to-a-vpc-by-using-aws-iam-and-aws-cloudformation/ to lockdown access to a VPC rather than grant access. In our subscription, we have 3 VPC's, but want to limit access to this to a select list of users.

I've tried several permutations of the template (amending to deny) but cant seem to get it to work. Is it feasible to do from this template? If so, can you point me in the right direction? 

Thanks"
AWS Key Management Service	"Advance AWS IAM Policies - Tags and Variables
Hello,

Is it possible to have a condition in an IAM policy that test the value of SAML2 federated aws:userid against the value of a resource tag (e.g., in order to grant permissions to administrate ec2 instances only if the user role equals a tag attached to an EC2 instance)? How?

Thanks,
Yossi C."
AWS Key Management Service	"How do I know what access I have
Hello Friends,

I am an IAM user, my AWS team has created IAM user for me. I am able to login to my IAM account in management console.  

How do i know what access I have? I would like to know what services I have access to. can I do that from management console/CLI/API?

Basically I would like to know  how many services I can access and what level of access I have.

Thank you"
AWS Key Management Service	"Couldn't retrieve verification key from your identity provider
I have created an OIDC provider in IAM.

The url is: idgatewayawsstage.flqa.net/
The configuration is accessible at: https://idgatewayawsstage.flqa.net/.well-known/openid-configuration
From there you can get the jwks_uri and go here: https://idgatewayawsstage.flqa.net/.well-known/jwks

The ""iss"" in the claims is: ""https://idgatewayawsstage.flqa.net/"" and is apparently matched.  I can change the url value in the provider and get the ""No OpenIDConnect provider found"" error.

Upon attempting an action via the api passing a valid JWT in the WebIdentityCredentials with the roleArn that trusts the OIDC provider I receive the error:  Couldn't retrieve verification key from your identity provider, please reference AssumeRoleWithWebIdentity documentation for requirements

Can anyone explain why I am receiving this error?  I have reviewed the suggested documentation and have not come across any help."
AWS Key Management Service	"Can't activate mfa
Hello, I'm new user and I try to activate mfa for my aws account.
I do the same as guide, but got message:
We encountered the following errors while processing your request:
 Failed to associate the token

I use google authenticator and scan barcode.

How to solve this issue?

Edited by: anton on Jul 12, 2015 6:23 AM"
AWS Key Management Service	"Re: Can't activate mfa
Hi Anton,

Please confirm whether this issue pertains to IAM user or root account access. 

If it pertains to an IAM user, please ensure that you or your AWS admin are appropriately configuring and enabling Virtual MFA for the IAM user.  You can find more information in the  Configure and Enable a Virtual MFA Device for a User documentation. 

If this issue pertains to root account access, it is most likely a result of the Virtual MFA device itself. You can set up Authenticator for MFA by inputting 2 codes as opposed to scanning a barcode. Instructions for this option can be found in the  Configuring and Managing a Virtual MFA Device for Your AWS Account. You can also try reinstalling the Authenticator application on your device.

Thank You,
Brigid"
AWS Key Management Service	"Re: Can't activate mfa
Hello Brigid,

I am having the same problem activating a root account. I have tried with both the AWS MFA client for Android and Google Authenticate. I scan the barcode which tells me my account is root-account-mfa-device@clcloudguru. I type in two consecutive six-digit codes and invariably I get the message ""Failed to associate the token."" This happens with both MFA clients. What am I doing wrong?

Thank you

--Creede

Edited by: clcloudguru on Aug 1, 2015 1:51 PM"
AWS Key Management Service	"Re: Can't activate mfa
This is a follow-up to my post above.

I was able to successfully set up two-factor authentication by using a different device, in this case a Galaxy S3 phone. Originally I had been using an unbranded tablet. My guess, which I have no way to confirm at this point, is that there is something missing from the unbranded, generic Android tablet that the Galaxy S3 has. It could be the device's serial number. In an attempt to cut costs, the tablet manufacturer gave the tablet a serial number of 0123456789ABCDEF. I've seen this before on other low-end tablets. By contrast the Galaxy looks like it has a proper serial number.

Again, I can't conclusively say that the serial number is the problem, but it might be the sort of thing to look for when troubleshooting the issue."
AWS Key Management Service	"Re: Can't activate mfa
There should be no reliance on the serial number of the device.  What needs to be somewhat in sync though is the time.  I suspect that there was probably a significant enough difference between the date/time on your tablet and that of the AWS server."
AWS Key Management Service	"Re: Can't activate mfa
clcloudguru,

Thank you for your query and the additional information.

Can you confirm that the authenticator app installed on the tablet in question can be used successfully to conduct Multifactor authentication (MFA) for other applications?

-Vikram"
AWS Key Management Service	"Re: Can't activate mfa
Sorry about the months-late reply. I only ever tried MFA on Amazon so I don't have any other experience to compare it to. However I was able just yesterday to set up another Amazon MFA - with another device with a bogus serial number, not as you state that it makes any difference - and it authenticated perfectly.

Given the quality or lack thereof of the original device I used to try to authenticate, the possibility of having the time be askew would not surprise me at all.

Cheers."
AWS Key Management Service	"Re: Can't activate mfa
I had the same error and got my setup working using Google Authenticator and an Android device.

The Google Authenticator didn't work the first time.  Instead, I followed the MFA process a SECOND time (scan the barcode, etc.) and created a ""new"" authenticator.  That one worked!

Comments here point to two potential issues: 1. timing differences and 2. using different devices (tablet, phone, etc.)  While these may be an issue for others, addressing neither helped me.  These results make me think there's a bug with AWS."
AWS Key Management Service	"Re: Can't activate mfa
I fixed this issue by doing the following:
Deleted the AWS Root Services entry from my Google Authenticator app.
Deleted the Google Authenticator app from my phone. 
Installed Microsoft Authenticator app. 
Scanned the QR code and the Virtual MFA was enabled for the Root Access in the IAM Management Console."
AWS Key Management Service	"Sort user list on last activity
We have around 50 users set up on our AWS account and I would like to understand the last login activity of each user. As of now, on the IAM console - I am not able to sort on the ""Last Activity"" field.

Is there any plan to include sorting on the fields on IAM users console?"
AWS Key Management Service	"Re: Sort user list on last activity
Hello,

Yes, it's on our roadmap to include sorting on the fields on IAM users Console. We already have a open feature request in place for the same. Unfortunately, currently I don't have an ETA by when the feature will be available. So, I encourage you to periodically check our What's New page[1], Blog[2] and RSS Feed[3] for latest updates on AWS where we announce all new features when we release them. 

Let us know know in case you require further assistance.

References:-
[1] https://aws.amazon.com/new/
[2] https://aws.amazon.com/blogs/aws/
[3] https://aws.amazon.com/new/feed/"
AWS Key Management Service	"get RoleSessionName when temp credentials are used
Scenario is: 

I have a client that is logged into my system. Authentication is not done through Cognito, but just custom code against my application server.
This client can get temporary credentials for AWS services, using STS (assume a role). This is done on the server side (from  the application server).
The client receives the temporary credentials and use them to upload to S3 and invoke lambdas later on.

The problem is that when the lambda is invoked I need to refer back the user id (applicatoin user id, not the AWS user id), and as I said I am not using Cognito.

Also I see that assume role requires a RoleSessionName. If I could retrieve this value later when the lambda is invoked, it would solve my problem (RoleSessionName could just be my user id). Unfortunately I don't see any way to retrieve the specified RoleSessionName.

Any idea or alternative solution here?

I know best practice would be Cognito here, but it's kinda overkilling for my case. I will eventually move to Cognito, but definitely not now."
AWS Key Management Service	"SSM Policy doesn't work like the documentation
Hi there.
I tried to provide a policy following the samples here: https://docs.aws.amazon.com/systems-manager/latest/userguide/getting-started-restrict-access-examples.html

But, I keep getting a warning and it does not work.

These are all I tried so far:
{
    ""Version"": ""2012-10-17"",
    ""Statement"": [
        {
            ""Sid"": ""AllowStartSessionExceptProd"",
            ""Effect"": ""Allow"",
            ""Action"": [
                ""ssm:StartSession""
            ],
            ""Resource"": ""*"",
            ""Condition"": {
                ""StringNotLike"": {
                    ""ssm:resourceTag/environment"": [
                        ""prod"",
                        ""Prod""
                    ]
                }
            }
        }
    ]
}

{
    ""Version"": ""2012-10-17"",
    ""Statement"": [
        {
            ""Sid"": ""AllowStartSessionExceptProd"",
            ""Effect"": ""Allow"",
            ""Action"": [
                ""ssm:StartSession""
            ],
            ""Resource"": ""*"",
            ""Condition"": {
                ""StringEquals"": {
                    ""arn:aws:ec2:*:*:instance"": [
                        ""i-myInstanceId1"",
                        ""i-myInstanceId2""
                    ]
                }
            }
        }
    ]
}


Or even I tried to use more resource-based conditions.
{
    ""Version"": ""2012-10-17"",
    ""Statement"": [
        {
            ""Sid"": ""AllowStartSessionExceptProd"",
            ""Effect"": ""Allow"",
            ""Action"": [
                ""ssm:StartSession""
            ],
            ""Resource"": ""*"",
            ""Condition"": {
                ""StringNotLike"": {
                    ""ssm:resourceTag/environment"": [
                        ""prod"",
                        ""Prod""
                    ],
                    ""arn:aws:ec2:*:*:resourceTag/environment"": [
                        ""prod"",
                        ""Prod""
                    ],
                    ""ec2:resourceTag/environment"": [
                        ""prod"",
                        ""Prod""
                    ]
                }
            }
        }
    ]
}


In general, all I want to do is allow access to start session in SSM on servers which are not prod servers.
My EC2 prod servers all have a tag environment:prod

I appreciate any help."
AWS Key Management Service	"delegate from CLI using roles/polices created for console switch role
I am working on setting up the ability to switch delegate access across our accounts from the web console and the cli. I followed this - https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_cross-account-with-roles.html for the web console setup and have it working. 

I am now working on the cli using this-  
https://aws.amazon.com/blogs/security/how-to-use-a-single-iam-user-to-easily-access-all-your-accounts-by-using-the-aws-cli/ . 

I am attempting to use the role/policy I created in the console setup in cli configuration.  It seems to match up with the CLI instructions, except that the policy is not set to specific user. Instead it is set :
""AWS"": ""arn:aws:iam::<aws account id>:root""

I was able to add it to the config file:

default
output = json
region = us-east-2

profile AdminDEVTEST
role_Admin = arn:aws:iam::<aws account id>:role/Admin
source_profile = default

However, if I run a profile specific command I get an error of:
aws iam list-users --profile AdminDEVTEST
Unable to locate credentials. You can configure credentials by running ""aws configure"".

Any guidance on what I did incorrectly? Or is this not possible?

Thanks."
AWS Key Management Service	"Folder policy oddities. ForAllValues: for s3:prefix. Deny policy is needed.
I use the following rule to restrict user access to a certain folder inside the bucket. The user gets the content listed with the latest version of the .Net AWS SDK library via AmazonS3Client.ListObjects call. With the rule not set the user access is denied on either a ""with delimiter"" request (getting just a folder direct content with running next request for a next level folder on expanding it in the UI) or ""with no delimiter"" request (entire bucket content traversing with one request for the empty prefix). There are two things I do not understand about this rule:
        {
            ""Sid"": ""AllowListingBucketFolder"",
            ""Effect"": ""Allow"",
            ""Action"": ""s3:ListBucket"",
            ""Resource"": ""arn:aws:s3:::<Bucket_Name>"",
            ""Condition"": {
                ""ForAllValues:StringEquals"": {
                    ""s3:prefix"": [
                        """",
                        ""<FolderToAllowAccess_Name>/""
                    ],
                    ""s3:delimiter"": ""/""
                }
            }
        }
1. ForAllValues:StringEquals Without ""ForAllValues:"" the rule does not work. The access is still denied even though the rule is set. My understanding is ""ForAllValues:"" is supposed to be used vs ""ForAnyValue:"" in case the condition attributes are in fact sets of attributes like a set of columns. Both ""s3:prefix"" and ""s3:delimiter"" are single ones as there is just one prefix and just one delimiter in the context of a ListBucket action call. Then I would expect ""ForAllValues:"" to be irrelevant here and thus to be ignored or even to be not a valid addition to the condition operator. But somehow without ""ForAllValues:"" the rule does not work and with it the rule works. It makes no sense for me. Why is it so?
2. As soon as ""ForAllValues:"" is added to the condition operator the rule starts to work. ""With delimiter"" requests work exactly as expected. The user is allowed to list bucket root objects (prefix is not set) and then only ""<FolderToAllowAccess_Name>/"" prefix works for the user (drilling deeper is not relevant for the question).
But! If delimiter is not set for a request with empty prefix for some reason I do not understand the access is still granted to the user. The user gets entire bucket content with one sweep. This experience is in line with what is described in some other threads. But why? The rule clearly states the condition is to have a request delimiter set and set to a particular value (""/""). Empty delimiter should not qualify. I would expect ""No delimiter"" request to fail. As I already mentioned above the ""no delimiter"" request fails if this particular rule is not set. Thus I assume there is no other policy that makes ""no delimiter"" requests to be valid ones. The workaround is to set an extra ""Deny"" policy for ""no delimiter"" requests. That is what suggested in the rest of the discussions. But why is this extra ""deny"" policy needed in the first place if without the rule set ""no delimiter"" requests are rejected and the rule has nothing to do as for me with allowing ""no delimiter"" requests? Why does this rule make ""no delimiter"" requests valid?

Edited by: DShevelev on Nov 23, 2018 12:18 AM

Edited by: DShevelev on Nov 23, 2018 12:19 AM"
AWS Key Management Service	"ROOT account lost access to all resources
Hello,

Root account lost permission to all resources, including billing, personal settings, even Support Center...

User: arn:aws:iam::982652499360:root is not authorized to perform: 

Account Id: 982652499360
Email: services@foxtrapp.com

Also, we receive the error: Internal server error (see attached files)
We already tried to contact support by email correspondence, but we didn't get the resolution of this issue yet.

Please, fix this.  

Thanks.

Edited by: Foxtrapp on Nov 21, 2018 3:52 AM"
AWS Key Management Service	"Principal in resource-based policy is a user in an external account
If a resource-based policy attached to a resource belonging to Account A specifies a particular user (Bob) in Account B as a Principle, does the root user of Account B automatically get the permissions allowed to Bob in that policy?"
AWS Key Management Service	"Re: Principal in resource-based policy is a user in an external account
No, it grants access only to the user Bob in the other account. To add permission for the root user, you will have to explicitly specify the ARN of the root user in the resource section."
AWS Key Management Service	"IAM user has full access to EC2 at AWS console, but fails at AWS CLI
The IAM user is in Administrator group and has full access to EC2 at AWS console, such as creating/deleting EC2 instances. With AWS CLI from my Windows laptop however, command ""ec2 describe-instances"" receives the following error:

An error occurred (UnauthorizedOperation) when calling the DescribeInstances operation: You are not authorized to perform this operation. 

Debug shows the correct IAM user credential is used.

I read a similar thread. Its problem was caused by wrong time setting at the local Linux OS. This doesn't seem to apply to my case.

Additional info. The user has been assigned AmazonS3FullAccess policy, but command ""aws s3 ls"" receives ""An error occurred (AccessDenied) "". However, another non-admin user with the policy AmazonS3FullAccess can run the same command from the same laptop.

When I run ""aws iam list-user-policies"" command for this admin user, the returned PolicyNames is empty.

I appreciate advice."
AWS Key Management Service	"Re: IAM user has full access to EC2 at AWS console, but fails at AWS CLI
Hello,

Since you have not specified, I believe the user has a ForceMFA policy attached to him. When he is using the console, he is entering the MFA code from either a hardware or a software and is able to perform all the actions. However, when using the CLI, you must be authenticating with just the ACCESS KEY and SECRET ACCESS KEY. This makes up the first factor of authentication, the second factor of authentication must be missing and hence the error. Please refer to the following link to use MFA on CLI:https://aws.amazon.com/premiumsupport/knowledge-center/authenticate-mfa-cli/

Hope this helps."
AWS Key Management Service	"Re: IAM user has full access to EC2 at AWS console, but fails at AWS CLI
RahulGautamAWS, Thank you so much! Yes, MFA is enforced for this use.

However, after I followed the instruction and authenticated the 2nd factor, I still receive an error msg:

""An error occurred (AccessDenied) when calling the ListBuckets operation: Access Denied""

Any idea?"
AWS Key Management Service	"Re: IAM user has full access to EC2 at AWS console, but fails at AWS CLI
Hello,

Glad to hear that my suggestion helped you. Regarding the current error, does the use have an s3:ListAllMyBuckets Allowed ? You can check the policy attached to the user by clicking on the username in the IAM console--> Permissions tab. If the permission is not present please add the permission and that should work.

Refer to this for some illustrations-- https://docs.aws.amazon.com/AmazonS3/latest/dev/example-policies-s3.html"
AWS Key Management Service	"SAML IAM errors with ADFS: AWSOpenIdDiscoveryService; InvalidIdentityToken
We have configured and double-checked many times a SAML IdP with our local ADFS service.
What happens, we can see AWS login page with the selection of available accounts and roles, but as on submitting this page we get the following error. It is also logged in the CloudTrail but we do not know how to further troubleshoot.

AWSOpenIdDiscoveryService; Status Code: 400; Error Code: AuthSamlManifestNotFoundException; Request ID: xxx-yyy....)
 (Service: AWSSecurityTokenService; Status Code: 400; Error Code: InvalidIdentityToken;


Reference tutorial we are following:
https://aws.amazon.com/de/blogs/security/how-to-set-up-sso-to-the-aws-management-console-for-multiple-accounts-by-using-ad-fs-and-saml-2-0/

There is an AWS/ADFS troubleshooting page but it does not refer to AuthSamlManifestNotFoundException
.
https://docs.aws.amazon.com/de_de/IAM/latest/UserGuide/troubleshoot_saml.html

Same error has been reported with Okta:
https://support.okta.com/help/s/question/0D50Z00008C3jo0SAB/aws-error-specified-provider-doesnt-exist

Edited by: peter1980 on Nov 16, 2018 12:48 AM"
AWS Key Management Service	"Re: SAML IAM errors with ADFS: AWSOpenIdDiscoveryService; InvalidIdentityToken
Double-check was not enough. Triple-check shows: there was a mismatch in the ARN name es referenced in AttributeValue!"
AWS Key Management Service	"Re: SAML IAM errors with ADFS: AWSOpenIdDiscoveryService; InvalidIdentityToken
solved."
AWS Key Management Service	"understanding of policy simulator when simulating conditions
This is probably already covered, but I am unable to find a thread that helped.
I also realize this may just be my limited understanding that is the issue.

I have the policy below (shortened for space) , I specifically allow several ec2: actions with the condition restricting to a region.  When I test in policy simulator, for the EC2 service and any of the listed actions, it returns an "" implicit deny"".  how do I properly use the simulator to test this policy?
and if their is a doc/link that covers the issue, that would be great.

Thanks in advance!!!!!!!!!!!!!!!

      {
            ""Sid"": ""NonResourceBasedPermissions"",
            ""Action"": [
                ""ec2:Describe*"",
                ""ec2:CreateKeyPair"",
                ""ec2:CreateSecurityGroup"",
                ""ec2:CreateTags"",
                ""ec2:DeleteTags""
            ],
            ""Effect"": ""Allow"",
            ""Resource"": ""*"",
            ""Condition"": {
                ""StringEquals"": {
                    ""ec2:Region"": ""us-west-2""
                }
            }
        }"
AWS Key Management Service	"Re: understanding of policy simulator when simulating conditions
{
""Version"": ""2012-10-17"",
""Statement"": [
        {
""Sid"": ""NonResourceBasedPermissions"",
""Action"": [
""ec2:Describe*"",
""ec2:CreateKeyPair"",
""ec2:CreateSecurityGroup"",
""ec2:CreateTags"",
""ec2:DeleteTags""
],
""Effect"": ""Allow"",
""Resource"": ""*""
}
]
}

What you have is a statement and not policy. Just wrap it with another block including version details as shown above.
The attached policy was tested with create tags and it should work for you as well.

Edited by: RAMANAGANAPATHY on Nov 5, 2018 3:21 PM"
AWS Key Management Service	"Re: understanding of policy simulator when simulating conditions
Yes, thank you.  The key piece I am trying to understand is the use of the condition within the policy simulator.  I want to test whether a user is granted any of the listed permissions ( for example: ""ec2:CreateTags"" ) when the request is for the us-west-2 region, while denied the same permission when for any other region.  The use of these EC2 permissions don't have a Global condition or a resource option in the simulator.

When i test the policy without the regional condition, it works as expected.   When I add the condition the simulator seems to ignore the entire statement and consequently returns an implicit deny.

Thank you again.  any help is greatly appreciated!!!"
AWS Key Management Service	"Re: understanding of policy simulator when simulating conditions
The default behavior is an implicit deny and that is what you see. If all you are trying is to provide permissions to tag resources only when they belong to us-west-2 region and deny other resources you can use below snippet. Please substitute keyword account with the value. 
Expand the service and resource. Replace * in the resource by selecting some sample resource. In example I chose instance and provided value as
arn:aws:ec2:us-west-2:accountId:instance/*

I am not able to add screenshot but hopefully it helps
{
""Version"": ""2012-10-17"",
""Statement"": [
{
""Sid"": ""NonResourceBasedPermissions"",
""Action"": [
""ec2:Describe*"",
""ec2:CreateKeyPair"",
""ec2:CreateSecurityGroup"",
""ec2:CreateTags"",
""ec2:DeleteTags""
],
""Effect"": ""Allow"",
""Resource"": ""arn:aws:ec2:us-west-2:account:/""
}
]
}"
AWS Key Management Service	"Enforce MFA
Hello,

I followed this tutorial and I enforce MFA for all users:

https://docs.aws.amazon.com/IAM/latest/UserGuide/tutorial_users-self-manage-mfa-and-creds.html 

It works fine, but there is a small issue: the programmatic access is also denied.
I followed this link to get access and secret keys using MFA but it is more complicated than someone can use if he/she will work 8 hours and have to renew access and secret key every hour.

https://aws.amazon.com/premiumsupport/knowledge-center/authenticate-mfa-cli/ 

for the deny conditions I added:
""ForAnyValue:StringNotLike"": {
    ""aws:UserAgent"": [
        ""\*aws-sdk-java\*"",
        ""\*Boto3\*""
    ]
}

but it didn't work

any suggestion?

Edited by: shiyar on Nov 13, 2018 2:57 AM

Edited by: shiyar on Nov 13, 2018 2:59 AM

Edited by: shiyar on Nov 13, 2018 3:00 AM"
AWS Key Management Service	"Trying to filter resources based on Resource Tag ""Project""
Hi,
I'm trying to give access to some AWS instances on my account to my colleagues. The way I'm trying to do this is by adding the tag ""Project"":""Company"" to those instances, and then create a group of users with a policy that can only see EC2 instances with that tag.

However, it's not working. I've got to the point where, without the filter, they can see everything, and with the filter, they can see nothing.

I assume there's some higher-level related dependency that I don't have the 'project' tag on, which is therefore denied, and hence the individual instances are denied even though they have the tag. I can't see what this would be, however. I've tried quite a few permutations and opened everything else up as much as I can.

Could anyone suggest what I've missed?

{
    ""Version"": ""2012-10-17"",
    ""Statement"": [
        {
            ""Sid"": ""VisualEditor0"",
            ""Effect"": ""Allow"",
            ""Action"": [
                ""ec2:*""
            ],
            ""Resource"": ""*"",
            ""Condition"": {
                ""StringEquals"": {
                    ""ec2:ResourceTag/Project"": ""Company""
                }
            }
        }
    ]
}"
AWS Key Management Service	"Programmatically testing access to invoke an action
Is it possible to programmatically test whether a role/user has access to perform an action without actually invoking that action? Or better yet, generate a report of which actions a role may invoke? I’m not talking about the policy simulator here, because I don’t know the policy in advance. I’ll just have an EC2 instance assigned to a role, or API keys for a user. I’m looking to audit access programmatically."
AWS Key Management Service	"IAM policy simulator understanding
I am trying to understand why the policy simulator shows denied when the permission is actually allowed.  (see attachments).  Does this mean that I should be writing the policy different?  I want to automate a process to test permissions but it seems the policy simulator can't account for all possible ways a policy can grant permissions.   Please help me understand this.

Thank you"
AWS Key Management Service	"Identity Provider Err: Audience can contain only alphanumeric characters...
Hi,

I have already created an OIDC identity provider in the IAM console.  I have added the client ID of my OIDC application as one Audience.  Now, I would like to add an Audience like: api://default (the audience when I am issued an access_token from my default auth server). 
 However, I get an error explaining that only alphanumeric and other special characters are permitted.  

How do I proceed with Web Identity Federation when aud = ""api://default""?

Thanks.

Create OIDC IdP - https://docs.aws.amazon.com/IAM/latest/UserGuide/id_roles_providers_create_oidc.html
AWS JS SDK for Web Identity Federation - https://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/loading-browser-credentials-federated-id.html"
AWS Key Management Service	"IAM Role, IAM Policies, and Cognito User Pool Issue
I'm having difficulty with what I have determined are IAM roles. The issue seems to be is that I cannot get newly create IAM roles & associated policies to recognize users from a Cognito User Pool's Group.

I've went through the steps on AWS Mobile to set up a Swift app with amplify, connected the backend, installed pods, added authentication w/ Cognito, and added S3 storage. During that process two roles were automatically created in IAM: one 'auth' & one 'unauth'. User account creation within the app works great and uploading to S3 worked fine. However, I have determined that all users are obtaining their permissions from the IAM 'auth' Role created during setup. Depending on what policy I attach to that IAM Role, that determines what permissions they have despite being in a Cognito User Pool Group that specifies a IAM Role other than the auto-created 'auth' one.

My intent is to isolate users into full-permissions and read-only groups. To accomplish this I created two Groups in the Cognito User Pool and placed a user account created in the AWS login within the Swift app into each group. I assigned each group a Role ARN for new IAM Roles that I created with S3 full access or S3 read-only permissions. The trust relationships JSON for all of the 3 IAM roles are identical are are the basic principal: ""cognito-identity.amazonaws"" w/ condition: ""authenticated"". 

Why are all of my user accounts being funneled through that auto-created 'auth' IAM Role and why won't the users be recognized under the new IAM Roles that I created and Cognito User Pool Groups assigned?

Any insight is much appreciated.

-Stan

Edited by: stantron on Nov 5, 2018 12:29 PM

Edited by: stantron on Nov 5, 2018 12:30 PM"
AWS Key Management Service	"Re: IAM Role, IAM Policies, and Cognito User Pool Issue
I've made some progress in my efforts, but still have not found a solution. I discovered that the default IAM role is being specified in the Cognito IDENTITY Pool (not USER Pool) within ""edit identity."" The path forward to isolate users into separate groups seems to be through ""Authenticated Role Selection"" by specifying a claim.

So, I created a new custom attribute in my Cognito User Pool to use as the basis for a claim in the Identity Pool. The issue now is how to apply that new custom attribute to existing users created in the Cognito Pool. I see no way of doing that nor do I see where the custom attribute is solicited for input by new users who sign up through cognito within in the Swift app."
AWS Key Management Service	"Re: IAM Role, IAM Policies, and Cognito User Pool Issue
I'm going to continue to answer my own questions in the hope that it'll help someone else in the same spot as I am/was. 

I figured out the issue and successfully got my users separated into two IAM Roles. The solution was to install AWS command line tool and then manually set the value for the new custom attribute that I created in my Cognito User Pool through the command line tool. Once that was completed it worked as planned. A quick side note that I learned as well: make sure that you set the read & write attribute of the custom attribute in the Cognito User Pool by checking the boxes under App Settings.

-Stan"
AWS Key Management Service	"S3 configured as website but access via instance profile. Is it possible?
Afternoon all,
I have configured a new s3 bucket to be a static website. I'd like to access the website from within an ec2 instance using a instance role. However, when I can configure the bucket policy to grant permissions to the role it never allows me to make a simple web request to the end point. 
curl https://s3-eu-west-1.amazonaws.com/mybucket/media/mypic.jpg

Returns Access Denied
Yet I can use the API/SDK e.g. 
Get-S3Object -BucketName mybucket -KeyPrefix media -Region eu-west-1

Will happily list the files etc etc.

If I use a generic grant public policy on the bucket I can requests the files on the ec2 instance as you would expect.

my bucket policy looks typically like this. Although, I've manually changed this one to make it safe to post.
{
    ""Version"": ""2012-10-17"",
    ""Statement"": [
        {
            ""Sid"": ""Example permissions"",
            ""Effect"": ""Allow"",
            ""Principal"": {
                ""AWS"": ""arn:aws:iam::myaccount:role/terraform/website_testing_ec2_role""
            },
            ""Action"": [
                ""s3:GetBucketLocation"",
                ""s3:ListBucket""
            ],
            ""Resource"": ""arn:aws:s3:::mybucket""
        },
        {
            ""Effect"": ""Allow"",
            ""Principal"": {
                ""AWS"": ""arn:aws:iam::myaccount:role/terraform/website_testing_ec2_role""
            },
            ""Action"": [
                ""s3:GetObject""
            ],
            ""Resource"": ""arn:aws:s3:::mybucket/*""
        }
    ]
}


So my question is... is this even possible? Do i need to use an Endpoint configuration?"
AWS Key Management Service	"Creating users to RDP into my instance! How? What is their password? Help!
Hi all,

I have an instance running and I am able to log in as the default user / administrator with the password generated by the key file associated with the instance. Great!

But now I need to allow my users to log in so they can make use of the environment. I have created a new user through IAM (IAM > Users > Add User) and they are part of a group that has AmazonEC2FullAccess. But what password do they use to log in? They don't need console access; just to be able to get into the PC to do work! So, where do I generate their password? What is the Access key ID  and Secret access key used for?

Basically I want a single instance running that allows for multiple users to connect to and use the Windows environment. But I don't know what RDP credentials to use (domain, user name, password) or how to generate them.

Please help! I am a very simple use case here (we just want a consistent Windows environment for our users to access our SharePoint sites through).

Edited by: jgortner on Mar 3, 2017 11:14 AM"
AWS Key Management Service	"Re: Creating users to RDP into my instance! How? What is their password? Help!
Hi jgortner,

IAM users are not used to log into Amazon EC2 instances. If you want to use remote desktop (RDP) in a Windows EC2 instance, this EC2 documentation explains the process (http://docs.aws.amazon.com/AWSEC2/latest/WindowsGuide/connecting_to_windows_instance.html).

-Jeff"
AWS Key Management Service	"Re: Creating users to RDP into my instance! How? What is their password? Help!
can we create different RDP credential (username password)for different user to connect windows instance?

Edited by: supun on Nov 2, 2018 12:00 AM"
AWS Key Management Service	"An error occurred (AccessDenied) when calling the AssumeRole operation: Acc
While using aws sts assume-role command I'm facing a really strange issue with profiles and mfa...I already tried all possible solutions but none of them worked for me...
Following this article, I did all exactly the same https://docs.aws.amazon.com/cli/latest/userguide/cli-roles.html#cli-roles-mfa, but over and over again getting this error 
An error occurred (AccessDenied) when calling the AssumeRole operation: Access denied

while running 

aws sts assume-role --role-arn arn:aws:iam::account_id:role/MyAppRole --role-session-name ""TestSession"" --profile my_role`


I have my_iam_user with attached policy 
{
    ""Version"": ""2012-10-17"",
    ""Statement"": {
        ""Effect"": ""Allow"",
        ""Action"": [
            ""sts:AssumeRole""
        ],
        ""Resource"": [
            ""arn:aws:iam::account_id:role/MyAppRole""
        ]
    }
}

I have my MyAppRole role with Trust Relationship:

{
  ""Version"": ""2012-10-17"",
  ""Statement"": [
    {
      ""Effect"": ""Allow"",
      ""Principal"": {
        ""AWS"": ""arn:aws:iam::account_id:user/my_iam_user""
      },
      ""Action"": ""sts:AssumeRole"",
      ""Condition"": { ""Bool"": { ""aws:MultiFactorAuthPresent"": true } }
    }
  ]
}


I created a new profile for this role and my ~/.aws/config looks like
[default]
region=eu-central-1
output=json
[profile my_role]
role_arn = arn:aws:iam::account_id:role/MyRole
source_profile = default
mfa_serial = arn:aws:iam::account_id:mfa/my_iam_user

My credentials file has credentials for my_iam_user and looks like ~/.aws/credentials
[default]
aws_access_key_id=qwe
aws_secret_access_key=123


I did clear cache

rm -r ~/.aws/cli/cache

After runnig 
aws sts assume-role --role-arn arn:aws:iam::account_id:role/MyAppRole --role-session-name ""TestSession"" --profile my_role`

cli asks me 
Enter MFA code for arn:aws:iam::account_id:mfa/my_iam_user:

and after entering MFA code I'm getting 

An error occurred (AccessDenied) when calling the AssumeRole operation: Access denied

On other hand, it works with python when I provide a MFA code explicity in the source code and setting up aws access_key, secret_key via env variables

import boto3
 
sts_client = boto3.client('sts')
 
# Call the assume_role method of the STSConnection object and pass the role
# ARN and a role session name.
assumedRoleObject = sts_client.assume_role(
        RoleArn=""arn:aws:iam::account_id:role/MyRole"",
        SerialNumber=""arn:aws:iam::account_id:mfa/my_iam_user"",
        RoleSessionName=""TestSession"",
        TokenCode=""MFACode""
)


Obviously it works as well with the full cli command(without env variables, so it actually takes credentials from my file)
aws sts assume-role --role-arn arn:aws:iam::account_id:role/MyRole --role-session-name ""TestSession"" --serial-number arn:aws:iam::account_id:mfa/my_iam_user --token-code MFACode


But it does not want to work with profiles...

I assume it something to do with how the cli handles profiles and authentification, but I can't figure out what exactly..."
AWS Key Management Service	"Limiting api call to a certain server
Hello

i have a server inside a vpc that needs to call Elastic beanstalk Api to launch and terminate elastic beanstalk environments.

Natrually, such calls require a lot of permissions to that aws api user. i would feel much more comfortable if i could limit the api calls of this user only to a certain server ip.

I tried to use apolicy that denies calls from {""IpAddressIfExists"": {""aws:SourceIp"" :  } like in this example: https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies_examples_aws_deny-ip.html

but this only works if the server is not inside a vpc. however,  i need this server to be inside a vpc.

i also tried to do the limitation with ""StringEqualsIfExists"" : {""aws:SourceVpc"" : } } but this doesn't seem to work - all calls are blocked.

So my question is - is this supposed to work? is there a way to limit all api calls of an aws user  to a certain Server

Thank!"
