label	description
AWS Schema Conversion Tool	"SCT SQL Server connection error
Anyone having issue to connect to a local instance of SQL server? I have tried every single combination
1. .\
2. localhost
3. ipaddress
4. computer name

None of them worked.

'A connection error occurred. For details, see the log file.  Connection wasn't established. Check connection properties.'

Edited by: keeyu on Feb 14, 2019 5:59 AM"
AWS Schema Conversion Tool	"Re: SCT SQL Server connection error
I got it work

Go to Start->All Programs-> Microsoft SQL Server 2017--> Click SQL Server Configuration Manager -> Expand SQL Server Network Configuration-> Protocol ->Enable TCP/IP Right box

Restart the SQL service--> the connection name 127.0.0.1 --> port 1433

Edited by: keeyu on Feb 14, 2019 6:55 AM"
AWS Schema Conversion Tool	"AWS SCT - Uploading statistics file
Hi, Is there a specific format for the statistics file that we can upload(which is not generated with SCT tool)? Noticed that SCT tool is taking long time to generate statistics. Not sure if we can use the statistics generated with DBCC SHOW_STATISTICS from SQL server to upload to SCT. Please advise. Thanks."
AWS Schema Conversion Tool	"Re: AWS SCT - Uploading statistics file
Hi
I am not able to migrate SQL SERVER store procedure using sct,need help"
AWS Schema Conversion Tool	"Problems with Oracle Extension Pack
I have some issues and questions when converting Oracle RDS to AWS Aurora database. I am using SCT build 622. I appreciate all your help and advice.
My first step is to decide whether to convert it to MySQL compatible or PostgreSQL compatible. It seems it much easier to convert to PostgreSQL. 

1. When choosing PostgreSQL, Oracle functions TO_DATE, TO_CHAR and TO_NUMBER are created in aws_oracle_ext schema correctly. But, when choosing MySQL, these functions are failed, thus not created. The error messages look like ""ERROR: executing statement  ext_pack/mysql/oracle/functions/aws_oracle_ext.to_date.sql. Cause: You have an error in your SQL syntax;""   Do you know what could be wrong? Where are the script actually located?

2. In both cases, Oracle scheduler jobs are not converted. Do I need to apply extension pack manually to implement Lambda functions?  SCT manual reads ""The AWS SCT extension pack contains Lambda functions that provide email, job scheduling, and other features to databases hosted on the Amazon EC2 platform"", but I am not using EC2 platform.

3.  In one project, Oracle function TO_DATE in DDL, such as VIEW definitions, is converted to aws_oracle_ext.TO_DATE().  But in another project, it is converted to aws_oracle_ext.TO_DATE(JSON_OBJECT()). Why there are such kind of random things? I don't think I have different settings among the two projects.

Appreciate any advice.

Gary

Edited by: gy on Jan 30, 2019 4:12 PM

Edited by: gy on Jan 30, 2019 4:13 PM"
AWS Schema Conversion Tool	"Convert table ORACLE => ORACLE(RDS)
Hi There,

I'm facing some issues to convert tables that are using diferent tablespaces for DATA, INDEX and LOBs.

1. All table spaces was correct created on target. OK.

2. SCP identify that lobs should use specific tablespaces OK. First image in attach

3. All LOBs are being created using default table tablespace. Second image in attach

Edited by: RafaelAlmeida on Dec 10, 2018 5:39 AM"
AWS Schema Conversion Tool	"Replication 1 month old data in sql server using DMS
Hi all,

SQl server 2014 data was migrated from on -prem to cloud EC2 using native backup tools and the database was open post recovery.
Can DMS be used to replicate the delta changes from source to target database if the target database is already in  open mode?

Regards,
Yasir"
AWS Schema Conversion Tool	"Not able to see Menu Item Database Migration View (Local & DMS) in SCT Tool
Hi All , 
I am not able to see the menu Item Database Migration View (Local & DMS) it just appears as Database migration View , Please let me know if"
AWS Schema Conversion Tool	"AWS SCT Profile Error
Hello:

I am creating new AWS Service Profiles in SCT and i am getting error as shown in attached screenshot.

Any help is greatly appreciated.

FYI....... my Access Key & Secret Key is working one. I did with & without S3 Bucket folder and same error.

Thanking in advance
Jugal"
AWS Schema Conversion Tool	"Re: AWS SCT Profile Error
faced with similar issue"
AWS Schema Conversion Tool	"Re: AWS SCT Profile Error
Hi, 

I have got a similar error when I tested a new AWS Service Profile.
OS: RHEL6
Internet access: The machine have internet access
AK & SK: Provided the correct ones. Even aws cli commands are working fine with same AK/SK.
S3 Bucket & Region: My bucket is in ap-south-1 region. With or without s3 bucket name, the connection test is failing.

Log Error snippet from the AWS SCT UI tool:

2018-04-15 18:03:13.218 https://forums.aws.amazon.com/     GENERAL INFO    Attached GC listener to PS Scavenge
2018-04-15 18:03:13.218 https://forums.aws.amazon.com/     GENERAL INFO    Attached GC listener to PS MarkSweep
2018-04-15 18:03:16.104 https://forums.aws.amazon.com/     GENERAL INFO    Error getting HTML code from https://d15coatskj6gs5.cloudfront.net/?versionNumber=0&buildNumber=0. No connection.
2018-04-15 18:03:16.104 https://forums.aws.amazon.com/     GENERAL INFO    Unable to get server version list. Check your internet connection
2018-04-15 18:03:16.104 https://forums.aws.amazon.com/     GENERAL INFO    Server version list is empty. Can't get last remote version
2018-04-15 18:03:36.015 https://forums.aws.amazon.com/     GENERAL INFO    Fire event update dms global settings
2018-04-15 18:03:36.032 https://forums.aws.amazon.com/          UI INFO    incorrect S3 bucket name
2018-04-15 18:04:10.945 https://forums.aws.amazon.com/          UI INFO    UI.Taskcom.amazon.sct.handler.dms.GlobalEnvironmentHandler
2018-04-15 18:04:12.744 https://forums.aws.amazon.com/          UI INFO    UI.Callback com.amazon.sct.handler.dms.GlobalEnvironmentHandler
2018-04-15 18:04:20.306 https://forums.aws.amazon.com/          UI INFO    UI.Taskcom.amazon.sct.handler.dms.GlobalEnvironmentHandler"
AWS Schema Conversion Tool	"Re: AWS SCT Profile Error
If you haven't done so, please try to use the latest build of SCT.  It should have more information on which components are having a problem and we can take a look at diagnosing the issue."
AWS Schema Conversion Tool	"Re: AWS SCT Profile Error
Hello Jugal,

Sorry to hear that you are facing issues while creating Profile in AWS Schema Conversation Tool. Would you be able to share log which you are seeing?

Are you following below steps listed on our public documentation? Please give me some more details and I would be able to help you resolve the issue.

https://docs.aws.amazon.com/SchemaConversionTool/latest/userguide/CHAP_UserInterface.html#CHAP_UserInterface.Profiles

Thanks,
Mahesh Kansara"
AWS Schema Conversion Tool	"Re: AWS SCT Profile Error
Hello, 

I had the same issue today , i had to do the following workaround to make this work:

1- go to global settings and create first profile that have your aws access/secret keys.
2- go to global settings and create second profile that have dummy/invalid aws access/secret keys. use this one as default in global !!
3- go to project settings and use the first profile as default and then try to create DMS task from UI.

this is how it worked for me .. 

Thanks,
Hussein"
AWS Schema Conversion Tool	"AWS SCT Throws Exceptions When Trying to Connect Cassandra
Hello,
I am trying to migrate Cassandra to DynamoDB according to the post:
https://aws.amazon.com/cn/blogs/database/migrate-apache-cassandra-databases-to-amazon-dynamodb-more-easily/
When I was trying to use AWS SCT to connect to my test Cassandra, I got the following exceptions. I have no idea what was wrong. Could you please help me? Thanks!

[Connection Configuration]
Server name: {my test Cassandra ip}
Server port: 9042
User name: cassandra
Password: cassandra

[Loader Info]
vendorType=Cassandra; url='null'; username='cassandra'; serverVersion='2.1.13.0'; dbLoaderCoreInternalNumber=4

[Exception Logs]
2018-09-21 16:13:37.305 [  17]     GENERAL ERROR   com.amazon.sct.dbloader.DbLoaderException: java.util.NoSuchElementException: No value present
java.util.concurrent.ExecutionException: com.amazon.sct.dbloader.DbLoaderException: java.util.NoSuchElementException: No value present
	at java.util.concurrent.FutureTask.report(FutureTask.java:122)
	at java.util.concurrent.FutureTask.get(FutureTask.java:192)
	at com.amazon.sct.task.launcher.CommonTaskLauncher.lambda$run$0(CommonTaskLauncher.java:30)
	at com.sun.javafx.binding.ExpressionHelper$Generic.fireValueChangedEvent(ExpressionHelper.java:361)
	at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
	at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:105)
	at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112)
	at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:146)
	at javafx.concurrent.Task.setState(Task.java:696)
	at javafx.concurrent.Task$TaskCallable.lambda$call$501(Task.java:1453)
	at com.sun.javafx.application.PlatformImpl.lambda$null$173(PlatformImpl.java:295)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.application.PlatformImpl.lambda$runLater$174(PlatformImpl.java:294)
	at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
	at com.sun.glass.ui.gtk.GtkApplication.enterNestedEventLoopImpl(Native Method)
	at com.sun.glass.ui.gtk.GtkApplication._enterNestedEventLoop(GtkApplication.java:211)
	at com.sun.glass.ui.Application.enterNestedEventLoop(Application.java:511)
	at com.sun.glass.ui.EventLoop.enter(EventLoop.java:107)
	at com.sun.javafx.tk.quantum.QuantumToolkit.enterNestedEventLoop(QuantumToolkit.java:583)
	at javafx.stage.Stage.showAndWait(Stage.java:474)
	at javafx.scene.control.HeavyweightDialog.showAndWait(HeavyweightDialog.java:162)
	at javafx.scene.control.Dialog.showAndWait(Dialog.java:341)
	at com.amazon.sct.view.util.show.ShowDialogHandler.show(ShowDialogHandler.java:46)
	at com.amazon.sct.view.AppView.showWizardDialog(AppView.java:325)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:71)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:275)
	at javafx.fxml.FXMLLoader$MethodHandler.invoke(FXMLLoader.java:1771)
	at javafx.fxml.FXMLLoader$ControllerMethodEventHandler.handle(FXMLLoader.java:1657)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.control.MenuItem.fire(MenuItem.java:462)
	at com.sun.javafx.scene.control.skin.ContextMenuContent$MenuItemContainer.doSelect(ContextMenuContent.java:1405)
	at com.sun.javafx.scene.control.skin.ContextMenuContent$MenuItemContainer.lambda$createChildren$343(ContextMenuContent.java:1358)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:352)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:275)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$354(GlassViewEventHandler.java:388)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:387)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)
	at com.sun.glass.ui.gtk.GtkApplication._runLoop(Native Method)
	at com.sun.glass.ui.gtk.GtkApplication.lambda$null$49(GtkApplication.java:139)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.amazon.sct.dbloader.DbLoaderException: java.util.NoSuchElementException: No value present
	at com.amazon.sct.dbloader.NoSqlLoaderEngine.initializingMetadataTree(NoSqlLoaderEngine.java:819)
	at com.amazon.sct.dbloader.DbLoader.loadMetaData(DbLoader.java:733)
	at com.amazon.sct.task.LoadTreeTask.call(LoadTreeTask.java:41)
	at com.amazon.sct.task.LoadTreeTask.call(LoadTreeTask.java:15)
	at javafx.concurrent.Task$TaskCallable.call(Task.java:1423)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	... 1 more
Caused by: java.util.NoSuchElementException: No value present
	at java.util.Optional.get(Optional.java:135)
	at com.amazon.sct.dbloader.VendorTemplate.getQueryCollection(VendorTemplate.java:170)
	at com.amazon.sct.dbloader.CassandraLoaderEngine.loadServerInfo(CassandraLoaderEngine.java:697)
	at com.amazon.sct.dbloader.NoSqlLoaderEngine.initializingMetadataTree(NoSqlLoaderEngine.java:801)"
AWS Schema Conversion Tool	"Unable to get ""compare schema"" working
I'm trying my first tests with SCT.
Wondering first of all if I could use SCT to check consistency between databases schemas,
I connected as source and target two identical databases hosted in the same server (RDS PostgreSQL 9.6.6)
and did a first ""compare schema"" obtaining a satisfactory ""No differences"".

Then I started to apply, one at a time, some simple changes to target database (drop a table, drop a column, add that column but with different length, drop an index)
obtaining an increasingly different target database.

I did ""compare schema"" after each change.

Well, after the changes the result are always the same ""No differences"", obviously unreal.

Probably I'm missing something, some constraint of the workflow...

In the log of the ""compare schema"" operations I found several ""ERROR: relation ""ddl_replication.ddl_log"" does not exist ""
but I have not found info about this error message.
You can find attached the log from a ""compare schema"" operation.

Maybe, Can I use ""compare schema"" only between source and target of AWS-DMS successful migrations?
There are constraints in the workflow (i.e. change only in the source database, compare only source and target of occurred migrations, and so on.. ) to follow?

BTW: page 88 of “Schema-Conversion-Tool_User-Guide.pdf” and https://docs.aws.amazon.com/SchemaConversionTool/latest/userguide/CHAP_Converting.SchemaCompare.html (“You can compare schemas for versions the same as or earlier than the source schema.”) contrasts
with the blog post https://aws.amazon.com/blogs/database/introducing-schema-compare-in-aws-schema-conversion-tool/
(""The schema compare feature works only when your target database version is the same or higher than the source database version."")"
AWS Schema Conversion Tool	"Re: Unable to get ""compare schema"" working
Hello, this appears to be a issue with the schema compare feature between PostgreSQL databases.  We're investigating this as a bug, and I'll update this forum when we have more information on the root cause."
AWS Schema Conversion Tool	"Connection to Oracle DB is not working through SCT
hi,
I am using the latest version of schema conversion tool (Version 1 and build 613) and my source database is oracle (11g Edition Release 11.2.0.2.0), but I am not able to connect with oracle database and getting below error.
Please note that I am able to connect with same credential from another oracle client from the same machine.
Also my user has all the required i.e. roles connect ,select_catalog_role and select any dictionary needed by sct.
I am using ojdbc7.jar as driver. I am really not sure where I am doing wrong. Any help regarding this will be highly appreciated.

2018-03-27 13:55:28.010 https://forums.aws.amazon.com/     GENERAL INFO    Test connecting to Oracle database started...
2018-03-27 13:57:31.551 https://forums.aws.amazon.com/      LOADER ERROR   Connection to 'jdbc:oracle:thin:@//serverIpAddress:port/serviceName' wasn't established. ERROR: code: 17002; message: IO Error: The Network Adapter could not establish the connection
2018-03-27 13:57:31.553 https://forums.aws.amazon.com/     GENERAL INFO    Test connecting to Oracle database finished in 0:02:03.536 sec with memory consumption of 201.12 MB (145.69 MB .. 330.89 MB).
2018-03-27 13:57:31.553 https://forums.aws.amazon.com/     GENERAL INFO    Test connecting to Oracle database statistics:
    GENERAL: 0:02:03.536 sec
2018-03-27 13:57:31.563 https://forums.aws.amazon.com/     GENERAL ERROR   com.amazon.sct.dbloader.DbLoaderHandledException: Connection was not established. Please check connection properties.
java.util.concurrent.ExecutionException: com.amazon.sct.dbloader.DbLoaderHandledException: Connection was not established. Please check connection properties.
              at java.util.concurrent.FutureTask.report(FutureTask.java:122)
              at java.util.concurrent.FutureTask.get(FutureTask.java:192)
              at com.amazon.sct.task.launcher.CommonTaskLauncher.lambda$run$0(CommonTaskLauncher.java:30)
              at com.sun.javafx.binding.ExpressionHelper$Generic.fireValueChangedEvent(ExpressionHelper.java:361)
              at com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
              at javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:105)
              at javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112)
              at javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:146)
              at javafx.concurrent.Task.setState(Task.java:696)
              at javafx.concurrent.Task$TaskCallable.lambda$call$501(Task.java:1453)
              at com.sun.javafx.application.PlatformImpl.lambda$null$173(PlatformImpl.java:295)
              at java.security.AccessController.doPrivileged(Native Method)
              at com.sun.javafx.application.PlatformImpl.lambda$runLater$174(PlatformImpl.java:294)
              at com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
              at com.sun.glass.ui.win.WinApplication._enterNestedEventLoopImpl(Native Method)
              at com.sun.glass.ui.win.WinApplication._enterNestedEventLoop(WinApplication.java:218)
              at com.sun.glass.ui.Application.enterNestedEventLoop(Application.java:511)
              at com.sun.glass.ui.EventLoop.enter(EventLoop.java:107)
              at com.sun.javafx.tk.quantum.QuantumToolkit.enterNestedEventLoop(QuantumToolkit.java:583)
              at javafx.stage.Stage.showAndWait(Stage.java:474)
              at javafx.scene.control.HeavyweightDialog.showAndWait(HeavyweightDialog.java:162)
              at javafx.scene.control.Dialog.showAndWait(Dialog.java:341)
              at com.amazon.sct.handler.CreateConnectionHandler.createConnection(CreateConnectionHandler.java:36)
              at com.amazon.sct.viewmodel.AppViewModel.createConnection(AppViewModel.java:1193)
              at com.amazon.sct.viewmodel.AppViewModel.createSourceConnection(AppViewModel.java:764)
              at com.amazon.sct.view.AppView.loadSource(AppView.java:271)
              at com.amazon.sct.view.AppView.lambda$initConnectionMenusBindings$20(AppView.java:787)
              at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
              at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
              at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
              at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
              at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
              at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
              at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
              at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
              at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
              at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
              at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
              at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
              at javafx.event.Event.fireEvent(Event.java:198)
              at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
              at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
              at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
              at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
              at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:352)
              at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:275)
              at java.security.AccessController.doPrivileged(Native Method)
              at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$354(GlassViewEventHandler.java:388)
              at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
              at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:387)
              at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
              at com.sun.glass.ui.View.notifyMouse(View.java:937)
              at com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
              at com.sun.glass.ui.win.WinApplication.lambda$null$148(WinApplication.java:191)
              at java.lang.Thread.run(Thread.java:745)
Caused by: com.amazon.sct.dbloader.DbLoaderHandledException: Connection was not established. Please check connection properties.
              at com.amazon.sct.dbloader.DbLoader.checkConnection(DbLoader.java:655)
              at com.amazon.sct.dbloader.DbLoader.initLoader(DbLoader.java:507)"
AWS Schema Conversion Tool	"Re: Connection to Oracle DB is not working through SCT
I'm seeing the same issue, has anyone resolved this? Thanks"
AWS Schema Conversion Tool	"Re: Connection to Oracle DB is not working through SCT
This Oracle error ""IO Error: The Network Adapter could not establish the connection"" normally indicates that there is no network connection to the Oracle database host.  Can you verify that you are using the correct fully qualified domain name and port?"
AWS Schema Conversion Tool	"Re: Connection to Oracle DB is not working through SCT
I've also had the same problem connecting from SCT to an on premise Oracle Exadata box and I've cycled through all the possible variations of the connections that I can think of without any joy including replacing server with direct IP address and SERVER=DEDICATED etc. From my PC I can ping the server and connect from Toad using the same connection string, but always over the ojdbc7 thin client there is a long pause and then the connection fails with ERROR 17002

Like this (obv. I've changed SERVER and SID  ):-

""LOADER ERROR   Connection to 'jdbc:oracle:thin:@SERVER:1521:SID' wasn't established. ERROR: code: 17002; message: IO Error: The Network Adapter could not establish the connection""

As the connect string works OK via other client tools - what else might be causing this?"
AWS Schema Conversion Tool	"SQL Server @@Trancount supposed to be automatically converted to MySQL
Hi, 
According to docs
https://docs.aws.amazon.com/SchemaConversionTool/latest/userguide/CHAP_SchemaConversionTool.Reference.ConversionSupport.SQLServer.html
System function @@Trancount would be automatically converted.
AWS Tool (1.0 Build 612) show following message:
Issue 811: Unable to convert function 
(And add this comment to my procedure)
/*
[811 - Severity CRITICAL - MySQL doesn't support the @@TRANCOUNT function. 
Create a user-defined function.]
IF (@@TRANCOUNT > 0) ROLLBACK TRANSACTION
*/;

So?
Thanks in advanced!"
AWS Schema Conversion Tool	"Re: SQL Server @@Trancount supposed to be automatically converted to MySQL
Hello,

Sorry to hear that you are facing issues while converting @@TRANCOUNT function from SQL Server to MySQL using AWS Schema Conversion Extension Pack.

It seems @@TRANCOUNT is not supported MySql function and not getting converted using extension Pack, I was able to reproduce the behavior which you have mentioned with latest version of tool.

Let me open feature request to AWS Schema Conversation Tool development team and get back to you based on their reply.

Thanks,
Mahesh Kansara"
AWS Schema Conversion Tool	"Schema Conversion Tools doesn't run on Mac
I just installed Schema Conversion Tool but I can't get it to run. The app doesn't start, it keeps loading and loading.
My mac:
Version: 10.12.6
Processor: Intel Core i5 3.7 GHz
Memory: 8 GB

I have uploaded the last log.

Thanks."
AWS Schema Conversion Tool	"Re: Schema Conversion Tools doesn't run on Mac
Hello,

Sorry to hear that you are facing some issues running AWS Schema Conversion Tools on Mac. Are you still seeing the issue ? Would you be able to share what version of AWS Schema Conversion Tools you are trying to use?

Did you try installing latest version of AWS Schema Conversion Tool using below link?

https://docs.aws.amazon.com/SchemaConversionTool/latest/userguide/CHAP_Installing.html#CHAP_Installing.Procedure

Are you seeing any logs generated in log folder ? What is the permission on installed files/folders for AWS Schema Conversation Tool ?

Ex Log Path: /Users/youruser/AWS Schema Conversion Tool/Log

Please share me some more details if you are still seeing any issue and I would try to help you resolve this issue.

Thanks,
Mahesh Kansara"
AWS Schema Conversion Tool	"List and range partitioned tables
We just completed a schema conversion from Oracle 12.2 to PostgreSQL 10.  The source Oracle database contained some list partitioned tables.  The tables created by SCT in the target PostgreSQL database for each of the partitioned tables did have child tables, but the tables aren't actually partitioned.  Does SCT support list and range partitioned tables for Oracle to PostgreSQL migrations?

Edited by: ClintonArbaugh on May 24, 2018 2:26 PM

Edited by: ClintonArbaugh on May 24, 2018 2:27 PM"
AWS Schema Conversion Tool	"Re: List and range partitioned tables
The latest build, 615, added support for range and list partitioned tables in Oracle to PostgreSQL.  We have tried it and aren't thrilled with the results, but it is a step closer than it was."
AWS Schema Conversion Tool	"Re: List and range partitioned tables
Hello,

I'm sorry to hear that.  Please let us know what the issues are and we can try to help."
AWS Schema Conversion Tool	"Oracle deferred segment creation
Hi,

Sory posted this in RDS section and got now response so trying here:

Hi,

i am trying to set up a schema conversion using SCT, when the SCT tool runs and grabs the DDL from source it has the statement regarding deffered segment allocation. This then fails when applying to target schema.

Example of DDL from source:

CREATE TABLE ""ADAPTINTOUCH"".""AUTOUPDATER_TASKS""(
""TASK_NAME"" NVARCHAR2(50) NOT NULL,
""DT_COMPLETED"" TIMESTAMP(6) DEFAULT CURRENT_TIMESTAMP ,
CONSTRAINT ""SYS_C0047335"" PRIMARY KEY (""TASK_NAME"")
)
SEGMENT CREATION DEFERRED
PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255
LOGGING
STORAGE ( PCTINCREASE 0
FREELISTS 1
FREELIST GROUPS 1
BUFFER_POOL DEFAULT
FLASH_CACHE DEFAULT
CELL_FLASH_CACHE DEFAULT)
TABLESPACE ADAPTINTOUCH
NOCOMPRESS;

I have tried setting the parameter DEFERED_SEGMENT_CREATION to FALSE and then restarting SCT but its still building the DDL with the defered segment issue.

Log shows:

NOCOMPRESS]
Error(s):
Attempt(s) ##[1]: error occurred during batching: ORA-00439: feature not enabled: Deferred Segment Creation

Attempt(s) ##https://forums.aws.amazon.com/: Closed Connection
How do I stop SCT trying to build with the DDL with a feature that is not enabled in standard edition?

Edited by: ScottD on Jun 25, 2018 4:11 AM"
AWS Schema Conversion Tool	"Re: Oracle deferred segment creation
Hello,

Unfortunately there isn't a feature in SCT to do that at the moment, but one workaround would be to save the DDLs into a file and do a search/replace to remove the deferred option."
AWS Schema Conversion Tool	"Applying Schema To Existing Data
All,

I'm trying to get a handle on the best way to use this tool. Some details:

Source - MSSQL (EC2)
Target - PG (RDS)


Now, since this is a Heterogeneous Database Migration, the documentation states that I should create the target schema first using this tool, then use DMS to load the data. The only issue is, now that there are FK's and whatnot, loading is now complicated by the fact that it seems as if DMS doesn't have the smarts to load in the proper order. I had a load task (Task ARN below) that blew up due to a FK constraint, which wouldn't have happened if the data was loaded in a particular order.

Task ARN: arn:aws:dms:us-east-1:827541288795:task:F5RIHYTRN2K4XCCBNAAS6YIP4A


All of this said, I was wondering... Since a full load works without using the Schema Conversion Tool first, is it possible to do the load, then run the schema conversion? Effectively applying indexes, FK's, etc. after the load, which is sort of how it should be handled anyway?

Any and all help would be greatly appreciated. Just wondering if I'm missing anything."
AWS Schema Conversion Tool	"Re: Applying Schema To Existing Data
Hi,

It's certainly possible to use DMS and SCT in the way you describe.  DMS will create the target tables and primary keys if they are missing on the target, and you are correct that foreign key constraints should not be in place during the full load.  So if you are running a full load plus CDC task, you can configure the task to stop after the full load completes, then build all secondary indexes (to support CDC) and restart.  If you are using transactional apply you can add foreign key constraints at this time as well. Otherwise you can add them prior to your application cutover."
AWS Schema Conversion Tool	"AWS SCT - Node JS Application conversion from SQL to Aurora issue
Created an Node.js application to interact with SQL server (Sequelize as ORM). We have direct queries as following in the code.

  sequelize.query(""Select count(*) as 'Table 1 RowCount' from Table1"").then(function(response) {
    console.log(chalk.green(""Select query executed successfully""));
  })
  .error(function(err){
    res.json(err);
});

  sequelize.query(""EXEC spProcedure"").then(function(response) {
    console.log(chalk.green(""Stored procedure spProcedure executed successfully""));
  })
  .error(function(err){
    res.json(err);
});

When we used AWS Schema Conversion Tool to convert the above code, it found the following queries.
•	SELECT count(*) AS 'Table 1 RowCount'
FROM Table1 AS "").then(function(response) {
console.log(chalk.green(“
•	SELECT query AS executed

It found the first query but not just query it included some more lines in that.

It found another query, but it is not actually a query, it is a log added in the code.

It did not find the Exec procedure statement.

Does the SCT tool has any limitation working with Node js or missing something here."
AWS Schema Conversion Tool	"Schema conversion tool sql to aurora permissions issue
Hi,

We are attempting to run the schema conversion tool to convert our SQL databases hosted on a single Ec2 windows instance running on SQL 2014 web edition to Aurora. 

When running the tool and connecting to the SQL instance using the sa account we receive the following error;

The specified account (sa) does not have sufficient privileges for working with the following object(s):
Database 'databasename' : VIEW DEFINITION

We receive this for every database on the SQL instance. Don't see how this can be permissions related as we are using the sa account but have tried other accounts with full access and applying the View Definition to the pubic role with no difference. 

Has anyone else encountered this or are we doing something wrong when connecting to the SQL instance?

Cheers,

Colin."
AWS Schema Conversion Tool	"Re: Schema conversion tool sql to aurora permissions issue
Did you ever figure this out? I'm having the same problem, with a SQL Server 2008 R2 database in EC2. Tried multiple accounts will full DB privileges as well as one with an explicit set of grants. Same error, on all the databases."
AWS Schema Conversion Tool	"Re: Schema conversion tool sql to aurora permissions issue
I've just had this same issue. In my case, only some of my databases would give this error. I narrowed it down to the problem databases had a full stop in their database name, eg. ""MyProject.DatabaseBlah"". After I replaced the ""."" with underscores ""MyProject_DatabaseBlah"",  I no longer got the error and could view the schemas for these databases.

So it seems the error may be a bit misleading and that error may be shown no matter what the underlying error is.

I think the underlying cause here is that the database names aren't being quoted properly when the tool communicates with the server. eg. needs to be sent as [MyProject.DatabaseBlah] .

I've logged this issue through the feedback process within the tool, so hopefully it will be fixed.

Edited by: lynd0n on May 20, 2018 3:53 PM"
AWS Schema Conversion Tool	"Add support @ldap oracle JDBC urls (or raw jdbc urls)
Hi,
The conversion tool does not seem to support @ldap jdbc connection feature of oracle.

Instead of jdbc:oracle:thin:@//mydb/ it should be possible to have jdbc url of:
jdbc:oracle:thin:@ldap://myldap1.mydomain.com:3389/service_name,cn=OracleContext,dc=some,dc=company,dc=com

Or why not just allow raw JDBC url?

This is currently blocking us from using this tool.

Cheers,
Petteri"
AWS Schema Conversion Tool	"""NUMBER"" data type on Oracle to DOUBLE PRECISION data type on PostgresSQL
Hi

I tried converting a schema on Oracle to PostgreSQL using SCT (version 1.0 Build 611). 
Then, ""NUMBER"" data type on Oracle was converted to DOUBLE PRECISION data type on PostgresSQL.
More specifically, Data types are converted as follows.

NUMBER(p) -> NUMERIC(p) (ex. NUMBER(10) -> NUMERIC(10) )
NUMBER(p,s) -> NUMERIC(p,s) (ex. NUMBER(10,5) -> NUMERIC (10,5) )
NUMBER ->  DOUBLE PRECISION
FLOAT -> DOUBLE PRECISION
FLOAT(p) -> DOUBLE PRECISION (ex.  FLOAT(10) -> DOUBLE PRECISION )

I think that it is more convenient that ""NUMBER""  is converted to ""NUMERIC"". 
And, since FLOAT data type on Oracle is the subset of NUMBER data type, 
I'm glad if ""FLOAT"" and ""FLOAT(p)"" data type would be converted to ""NUMERIC"".

Best regards."
AWS Schema Conversion Tool	"Windows authentication for SQL server
Hi,

In SCT tool can we connect to SQL server as source using windows authentication ? 

Thanks,
Elias"
AWS Schema Conversion Tool	"Re: Windows authentication for SQL server
Hi, It asks for Servername,port,instancename,username and password of the sql server you would like to login. Thanks"
AWS Schema Conversion Tool	"Re: Windows authentication for SQL server
That's correct however it works fine if the login is SQL server login. I am looking specifically for windows authentication."
AWS Schema Conversion Tool	"Re: Windows authentication for SQL server
Hi Elias,

Unfortunately SCT currently does not support Windows authentication."
AWS Schema Conversion Tool	"Unable to install Schema Conversion Tool
Hello,
I am trying to install SCT from the installable file AWS Schema Conversion Tool-1.0.602.msi on Windows 7 Professional 32-bit (SP 1). It is throwing the below error as soon as I double click on the above msi file.
This installation package is not supported by this processor type. Contact your product vendor.
What is the issue here? How can I fix it and install SCT. Thanks in advance."
AWS Schema Conversion Tool	"Re: Unable to install Schema Conversion Tool
Unfortunately, SCT only runs on 64-bit operating systems (Windows, MacOS, Linux).

https://docs.aws.amazon.com/SchemaConversionTool/latest/userguide/CHAP_SchemaConversionTool.Installing.html"
AWS Schema Conversion Tool	"Unable to see all Oracle schemas in SCT
Running SCT on Windows.   When I add new project and connect to Oracle on RDS  I only see the PUBLIC and ORAADMIN schemas.  I have added multiple schemas including the demo under user SH.   I can see these schemas from SQL Developer and SQLWorkbenchJ and when I list users I see them all.  Not sure if there is a setting I need to change or if this is related to it being Oracle 12.

Any suggestions?"
AWS Schema Conversion Tool	"Re: Unable to see all Oracle schemas in SCT
SCT has a couple filters on schema you can check.  You can go on the upper right of the schema pane and open the Oracle Object Tree Filter window and choose which schemas to display.

Also you can go under Settings -> Global Settings -> Tree View and update your schema filter there.

Hope this helps!"
AWS Schema Conversion Tool	"Installing AWS Schema conversion on Windows
I cannot complete installation.  Because I have no idea where/what the ""trust store"" location is supposed to be.  Nor, for that matter, the ""Key store"" location/file.  I suspect they're ""certificate files"" of some sort.  If so, where do I get them from?  Or what do I need to do to create them

There is nothing in the documentation, that I can see, that explains these.

Can anyone help.  I'm new to cloud based operations.

Thank you

Alan"
AWS Schema Conversion Tool	"Re: Installing AWS Schema conversion on Windows
It is not mandatory.Have installed without choosing that.Thanks

Edited by: Deeps on Dec 15, 2017 3:59 PM"
AWS Schema Conversion Tool	"Not able to connect to a target RDS database via TCP/IP over ssh in AWS SCT
I have an AWS RDS instance which is not publicly accessible and only accessible through a bastion host via a TCP/IP over ssh tunnel. I can connect to the database from any sql client like Heidisql using TCP/IP over ssh. 
I am using AWS SCT to convert schema from POSTGRESQL to my Mysql RDS instance. When I setup the target as the above mentioned AWS RDS instance, I don't see any option to connect using a ssh tunnel.
Can I get some help as to how to connect to a target database in AWS SCT via TCP/IP over ssh. 

Thanks,
Abir"
AWS Schema Conversion Tool	"RDSAdmin db wants privileges it won't let me apply...
Hi all

I am in the process of using SCT to transfer a database between SQL Server endpoints into RDS. 

When first test connecting to the RDS instance (using the connect to AmazonRDS...' button in the menu bar), I get the message 'The specified account (xyz) does not have sufficient privileges for working with the following object(s): Database 'rdsadmin': (VIEW DATABASE STATE, VIEW DEFINITION)' 

Fair enough, but trying to make xyz (the account I'm using to drive the dms service) a user of the rdsadmin database so I can grant it the necessary privileges produces the message 'user' (ie me, the person who created the RDS instance) 'does not have permission to perform this action'. So how the heck do I give my dms user account the necessary access to do this?

I should add that I have already proved that I can DMS quite happily between my two endpoints.

So in summary, SCT is insisting I give it access to something I cannot give it access to....

Any thoughts or suggestions would be much appreciated!

Thanks

Richard

Edited by: TPRichardS on Aug 17, 2017 1:19 AM"
AWS Schema Conversion Tool	"AWS-SCT is not capturing IDENTITY COLUMN details - Teradata To Redshift
Hello,
       I am trying to convert schema via SCT build:064, from Teradata TD14 to Redshift and the SCT is not able to convert the IDENTITY COLUMN. It does not capture the SEED and the INCREMENT.
Please advice.

Listed below is the original DDL in TD14, followed by the DDL as seen by SCT and DDL converted into REDSHIFT by SCT.
=============================================================
-----------------ORIGINAL DDL FROM TERADATA------------------------
CREATE MULTISET TABLE TEST.CUSTOMER_SITE ,NO FALLBACK ,
     NO BEFORE JOURNAL,
     NO AFTER JOURNAL,
     CHECKSUM = DEFAULT,
     DEFAULT MERGEBLOCKRATIO
     (
      CUSTOMER_SITE_KEY INTEGER TITLE 'CUSTOMER_SITE_KEY' NOT NULL GENERATED BY DEFAULT AS IDENTITY
           (START WITH 255405
            INCREMENT BY 1 
            MINVALUE -2147483647 
            MAXVALUE 2147483647 
            NO CYCLE),
      CUSTOMER_SITE_UID VARCHAR(50) CHARACTER SET UNICODE CASESPECIFIC TITLE 'CUSTOMER_SITE_UID' NOT NULL,
      CUSTOMER_SITE_UID2 VARCHAR(50) CHARACTER SET UNICODE CASESPECIFIC TITLE 'CUSTOMER_SITE_UID2' NOT NULL,
      CUSTOMER_SITE_NUMBER VARCHAR(50) CHARACTER SET UNICODE CASESPECIFIC TITLE 'CUSTOMER_SITE_NUMBER' NOT NULL,
      CUSTOMER_SITE_NAME VARCHAR(255) CHARACTER SET UNICODE CASESPECIFIC TITLE 'CUSTOMER_SITE_NAME' NOT NULL,
      PARENT_CUSTOMER_SITE_KEY INTEGER TITLE 'PARENT_CUSTOMER_SITE_KEY' NOT NULL,
      CUSTOMER_KEY INTEGER TITLE 'CUSTOMER_KEY' NOT NULL,
      META_SRC_SYS_NAME CHAR(20) CHARACTER SET LATIN NOT CASESPECIFIC TITLE 'META_SRC_SYS_NAME' NOT NULL
UNIQUE PRIMARY INDEX XPKCUSTOMER_SITE ( CUSTOMER_SITE_KEY )
INDEX XIE1CUSTOMER_SITE ( META_SRC_SYS_NAME );

-----------------DDL AS SEEN BY SCT------------------------
CREATE MULTISET TABLE TEST.CUSTOMER_SITE(
CUSTOMER_SITE_KEY INTEGER NOT NULL,
CUSTOMER_SITE_UID VARCHAR(100) NOT NULL,
CUSTOMER_SITE_UID2 VARCHAR(100) NOT NULL,
CUSTOMER_SITE_NUMBER VARCHAR(100) NOT NULL,
CUSTOMER_SITE_NAME VARCHAR(510) NOT NULL,
PARENT_CUSTOMER_SITE_KEY INTEGER NOT NULL,
CUSTOMER_KEY INTEGER NOT NULL,
META_SRC_SYS_NAME CHARACTER(20) NOT NULL
)
UNIQUE PRIMARY INDEX(CUSTOMER_SITE_KEY);

-----------------DDL CONVERTED TO REDSHIFT BY SCT------------------------
CREATE TABLE IF NOT EXISTS test.customer_site(
customer_site_key INTEGER NOT NULL,
customer_site_uid CHARACTER VARYING(100) NOT NULL,
customer_site_uid2 CHARACTER VARYING(100) NOT NULL,
customer_site_number CHARACTER VARYING(100) NOT NULL,
customer_site_name CHARACTER VARYING(510) NOT NULL,
parent_customer_site_key INTEGER NOT NULL,
customer_key INTEGER NOT NULL,
meta_src_sys_name CHARACTER VARYING(20) NOT NULL
)
DISTSTYLE KEY
DISTKEY
(
customer_site_key
)
SORTKEY
(
customer_site_key,
meta_src_sys_name
);

Thanks,
gpdba"
AWS Schema Conversion Tool	"Trouble connecting to Rackspace/LiquidWeb Database
I have a MariaDB on a LiquidWeb (formerly Rackspace) cloud sites account that I am trying to move over to a MariaDB on AWS. I am using the SCT because I have secondary keys on the source DB. When I try to connect to the LiquidWeb database, I get this error:

The specified account (DATABASE_USER_NAME) does not have sufficient privileges for working with the following object(s):
MYSQL Server : SELECT, SHOW VIEW

I have spoken to the support folks at Liquid Web and they have assured me that the account in question DOES have those privileges.

Has anyone out there been able to successfully connect to a Rackspace/LiquidWeb Cloud Sites database with SCT?

Edited by: Juno on May 5, 2017 10:21 AM"
AWS Schema Conversion Tool	"SCT - Does Bulk DB migration possible?
We wanted to migrate all our MS-SQL Server on-Prem DBs to AWS-RDS-PostgreSQL DBs.  Is there a way to pass source and target and make Bulk Migration possible?

Or We need to go with DMS and CLI Scripting?  Any suggestions will help!"
AWS Schema Conversion Tool	"SCT cannot load my AWS profiles
OS: Mac OSX 10.12.1
AWS SCT: 1.0.502

In Project Settings -> Project Environment I see this error:

There is no AWS Profile defined in Global Settings. Please, define a new profile.

My profiles do appear in Global Settings, and I've tried adding new ones and quitting/restarting the application, but the error pops up every time. I turned on debug logging, and when I browse to Project Settings -> Project Environment the following error+trace is logged:

13:21:49.563 [  13]          UI ERROR   can't getDmsProfilesList()
java.lang.NullPointerException
	at com.amazon.sct.view.dialog.settings.SettingsGuiUtils.lambda$getDmsProfilesList$3(SettingsGuiUtils.java:426)
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:174)
	at java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1374)
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481)
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471)
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708)
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499)
	at com.amazon.sct.view.dialog.settings.SettingsGuiUtils.getDmsProfilesList(SettingsGuiUtils.java:428)
	at com.amazon.sct.view.dialog.settings.CurrentProjectSettingView.drawView(CurrentProjectSettingView.java:254)
	at com.amazon.sct.view.dialog.settings.CurrentProjectSettingView.addContent(CurrentProjectSettingView.java:245)
	at com.amazon.sct.view.dialog.settings.CurrentProjectSettingView.projectEnvironmentContent(CurrentProjectSettingView.java:234)
	at com.amazon.sct.view.dialog.settings.CurrentProjectSettingView.init(CurrentProjectSettingView.java:114)
	at com.amazon.sct.view.dialog.settings.CurrentProjectSettingView.initialize(CurrentProjectSettingView.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:71)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:275)
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2566)
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2441)
	at javafx.fxml.FXMLLoader.load(FXMLLoader.java:2409)
	at com.amazon.sct.view.dialog.settings.CurrentProjectSettingView.initFXML(CurrentProjectSettingView.java:100)
	at com.amazon.sct.view.dialog.settings.CurrentProjectSettingView.<init>(CurrentProjectSettingView.java:91)
	at com.amazon.sct.view.dialog.settings.SettingsDialogView.setBorderContent(SettingsDialogView.java:154)
	at com.amazon.sct.view.dialog.settings.SettingsDialogView.initialize(SettingsDialogView.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:71)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:275)
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2566)
	at javafx.fxml.FXMLLoader.loadImpl(FXMLLoader.java:2441)
	at javafx.fxml.FXMLLoader.load(FXMLLoader.java:2409)
	at com.amazon.sct.view.dialog.settings.SettingsDialogView.loadFXML(SettingsDialogView.java:92)
	at com.amazon.sct.view.dialog.settings.SettingsDialogView.<init>(SettingsDialogView.java:72)
	at com.amazon.sct.viewmodel.AppViewModel.createProjectsSettingsDialog(AppViewModel.java:1213)
	at com.amazon.sct.viewmodel.AppViewModel.showCurrProjectSettingsDialog(AppViewModel.java:1176)
	at com.amazon.sct.view.AppView.loadProjectSettings(AppView.java:331)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.Trampoline.invoke(MethodUtil.java:71)
	at sun.reflect.GeneratedMethodAccessor2.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at sun.reflect.misc.MethodUtil.invoke(MethodUtil.java:275)
	at javafx.fxml.FXMLLoader$MethodHandler.invoke(FXMLLoader.java:1771)
	at javafx.fxml.FXMLLoader$ControllerMethodEventHandler.handle(FXMLLoader.java:1657)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:86)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:49)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.control.MenuItem.fire(MenuItem.java:462)
	at com.sun.javafx.scene.control.skin.ContextMenuContent$MenuItemContainer.doSelect(ContextMenuContent.java:1405)
	at com.sun.javafx.scene.control.skin.ContextMenuContent$MenuItemContainer.lambda$createChildren$343(ContextMenuContent.java:1358)
	at com.sun.javafx.event.CompositeEventHandler$NormalEventHandlerRecord.handleBubblingEvent(CompositeEventHandler.java:218)
	at com.sun.javafx.event.CompositeEventHandler.dispatchBubblingEvent(CompositeEventHandler.java:80)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:238)
	at com.sun.javafx.event.EventHandlerManager.dispatchBubblingEvent(EventHandlerManager.java:191)
	at com.sun.javafx.event.CompositeEventDispatcher.dispatchBubblingEvent(CompositeEventDispatcher.java:59)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:58)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.BasicEventDispatcher.dispatchEvent(BasicEventDispatcher.java:56)
	at com.sun.javafx.event.EventDispatchChainImpl.dispatchEvent(EventDispatchChainImpl.java:114)
	at com.sun.javafx.event.EventUtil.fireEventImpl(EventUtil.java:74)
	at com.sun.javafx.event.EventUtil.fireEvent(EventUtil.java:54)
	at javafx.event.Event.fireEvent(Event.java:198)
	at javafx.scene.Scene$MouseHandler.process(Scene.java:3757)
	at javafx.scene.Scene$MouseHandler.access$1500(Scene.java:3485)
	at javafx.scene.Scene.impl_processMouseEvent(Scene.java:1762)
	at javafx.scene.Scene$ScenePeerListener.mouseEvent(Scene.java:2494)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:352)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler$MouseEventNotification.run(GlassViewEventHandler.java:275)
	at java.security.AccessController.doPrivileged(Native Method)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.lambda$handleMouseEvent$354(GlassViewEventHandler.java:388)
	at com.sun.javafx.tk.quantum.QuantumToolkit.runWithoutRenderLock(QuantumToolkit.java:389)
	at com.sun.javafx.tk.quantum.GlassViewEventHandler.handleMouseEvent(GlassViewEventHandler.java:387)
	at com.sun.glass.ui.View.handleMouseEvent(View.java:555)
	at com.sun.glass.ui.View.notifyMouse(View.java:937)"
AWS Schema Conversion Tool	"Re: SCT cannot load my AWS profiles
Hi,

I'm sorry you are having problems.  Could you try downloading the new version: 1.0.600.  Under Settings/Global Settings/AWS Service Profiles, click on ""Add new AWS Service Profile"".  Edit the new profile and fill in your keys, etc.  There click on ""Test Connection"" to test the credentials that you have entered in.

Thanks."
AWS Schema Conversion Tool	"Data Migration Service timing out
Attempting to create a DMS task between a remote Oracle database and Aurora. I have both the source and target set up successfully in SCT. 

I can migrate the schema to the Aurora target at AWS just fine and it gets created. The problem comes in when attempting to set up a DMS task. 

After maybe 30 seconds, a dialog with the following message appears:
""In order to set up Data Migration Service (DMS), please go to the Current Project Settings and select the correct profile under Project Environment.""

I've done this and made sure the key and secret are correct for the profile. I think if this was the problem, the schema wouldn't even migrate. 

However, in the log files, though I get the following stack trace.

13:24:56.656 https://forums.aws.amazon.com/ TRANSFORMER ERROR   Unable to execute HTTP request: Connect to dms.us-gov-west-1.amazonaws.com:443 http://dms.us-gov-west-1.amazonaws.com/205.251.239.154 failed: connect timed out
com.amazonaws.SdkClientException: Unable to execute HTTP request: Connect to dms.us-gov-west-1.amazonaws.com:443 http://dms.us-gov-west-1.amazonaws.com/205.251.239.154 failed: connect timed out
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:972)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.doExecute(AmazonHttpClient.java:676)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeWithTimer(AmazonHttpClient.java:650)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.execute(AmazonHttpClient.java:633)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.access$300(AmazonHttpClient.java:601)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutionBuilderImpl.execute(AmazonHttpClient.java:583)
	at com.amazonaws.http.AmazonHttpClient.execute(AmazonHttpClient.java:447)
	at com.amazonaws.services.databasemigrationservice.AWSDatabaseMigrationServiceClient.doInvoke(AWSDatabaseMigrationServiceClient.java:1824)
	at com.amazonaws.services.databasemigrationservice.AWSDatabaseMigrationServiceClient.invoke(AWSDatabaseMigrationServiceClient.java:1800)
	at com.amazonaws.services.databasemigrationservice.AWSDatabaseMigrationServiceClient.describeReplicationInstances(AWSDatabaseMigrationServiceClient.java:1110)
	at com.amazon.sct.base.dms.integration.DMSServiceUtil.getProperAWSDatabaseMigrationServiceClient(DMSServiceUtil.java:433)
	at com.amazon.sct.base.dms.integration.DMSServiceUtil.validateProfile(DMSServiceUtil.java:416)
	at com.amazon.sct.base.dms.integration.DMSServiceManager.validateProfile(DMSServiceManager.java:174)
	at com.amazon.sct.dms.behavior.implementation.DMSTaskWorkerImpl.validateProfile(DMSTaskWorkerImpl.java:24)
	at com.amazon.sct.handler.CreateNewDmsTaskHandler.runSelect(CreateNewDmsTaskHandler.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.amazon.sct.viewmodel.util.task.TaskLauncher$TaskRunContent$1.call(TaskLauncher.java:111)
	at javafx.concurrent.Task$TaskCallable.call(Task.java:1423)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:745)
Caused by: org.apache.http.conn.ConnectTimeoutException: Connect to dms.us-gov-west-1.amazonaws.com:443 http://dms.us-gov-west-1.amazonaws.com/205.251.239.154 failed: connect timed out
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:150)
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:353)
	at sun.reflect.GeneratedMethodAccessor85.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.amazonaws.http.conn.ClientConnectionManagerFactory$Handler.invoke(ClientConnectionManagerFactory.java:76)
	at com.amazonaws.http.conn.$Proxy13.connect(Unknown Source)
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:380)
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236)
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:184)
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:184)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:55)
	at com.amazonaws.http.apache.client.impl.SdkHttpClient.execute(SdkHttpClient.java:72)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeOneRequest(AmazonHttpClient.java:1115)
	at com.amazonaws.http.AmazonHttpClient$RequestExecutor.executeHelper(AmazonHttpClient.java:964)
	... 22 more
Caused by: java.net.SocketTimeoutException: connect timed out
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:350)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:206)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:188)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:589)
	at org.apache.http.conn.ssl.SSLConnectionSocketFactory.connectSocket(SSLConnectionSocketFactory.java:337)
	at com.amazonaws.http.conn.ssl.SdkTLSSocketFactory.connectSocket(SdkTLSSocketFactory.java:132)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:141)
	... 37 more

Please let me know if you have any suggestions or ideas!"
AWS Schema Conversion Tool	"Re: Data Migration Service timing out
Hi nickso@,

Can you log in directly into the AWS account and confirm that the task was created and/or started?  Are you able to create any endpoints from SCT?  Does the host that SCT is running from have internet connectivity to contact AWS?

Thanks."
AWS Schema Conversion Tool	"Re: Data Migration Service timing out
I was able to get things working finally by tweaking the IAM user permissions and generating a new access key. I also added it with us-west as the region, not sure if that made a difference or not."
AWS Schema Conversion Tool	"How to save upper and lower letters when transferring schema?
Names of tables, procedures, views, columns become lowercase.
What you need to do to register was preserved?

Edited by: irbis50 on Apr 29, 2016 10:30 AM

Edited by: irbis50 on May 5, 2016 2:56 AM"
AWS Schema Conversion Tool	"Re: How to save upper and lower letters when transferring schema?
No answer for this one?  I have the same problem, migrating from MSSQL to PostgreSQL, I want the case to remain unchanged, yet the tool lowercases everything."
AWS Schema Conversion Tool	"Re: How to save upper and lower letters when transferring schema?
Hi,

Please try the following:

Download the latest version 1.0, build 502 of the Schema Conversion Tool.  Connect to the source SQL Server DB and target PostgreSQL DB.

Under Project Settings -> Conversion Settings, select both options:

*Treat object names as case sensitive
*Treat variable names as case sensitive

Then run a schema conversion.

Thanks."
AWS Schema Conversion Tool	"Re: How to save upper and lower letters when transferring schema?
Sorry, that doesn't work either, apparently according to your support guys there is no way in the tool to have it conserve the original case, it lowercases regardless."
AWS Schema Conversion Tool	"Re: How to save upper and lower letters when transferring schema?
Why would Amazon post this?

Dec 20, 2016 announcement states ""SCT now supports case sensitivity for SQL Server to PostgreSQL conversions,"" 
(https://aws.amazon.com/about-aws/whats-new/2016/12/aws-schema-conversion-tool-now-converts-schema-and-runs-a-migration/)

AWS Support is saying that this is not really true?  Or does the announcement refer to something other than this topic?

Correction: Turns out the announcement was erroneous but never corrected.  My bad.

Edited by: BlakeB on Feb 9, 2017 7:20 AM"
AWS Schema Conversion Tool	"MySQL -> Redshift
Looks like there is mysql to redshift conversion in this tool. Granted that mysql is not an OLAP, but we still can benefit from the schema creation. I am using PostgreSQL as output and i do some editing if needed to use the schema for redshift. 

Is there any plan to add MySQL to redshift conversion?"
AWS Schema Conversion Tool	"Re: MySQL -> Redshift
Hello!

Thank you for using AWS Schema Conversion Tool. 

I will investigate and inquire with the service team responsible for the tool to see if it can be used to convert MySQL to RedShift. 

I will update you as soon as I have more detailed information."
AWS Schema Conversion Tool	"Re: MySQL -> Redshift
hi kitikorntaws 

any update on this ticket? 

Thanks
Aslan"
AWS Schema Conversion Tool	"Re: MySQL -> Redshift
any updates on this ticket?"
AWS Schema Conversion Tool	"Re: MySQL -> Redshift
Hello,

At this time, it is not supported.

I've passed this feedback onto our internal service team in the form of a feature request. I cannot comment on if or when this feature will be developed, but our roadmap is driven by requests like this. 

Please keep an eye on the AWS Blog https://aws.amazon.com/blogs/aws/ and the What's New? page https://aws.amazon.com/new/ for updates on new features as they are deployed. 

Regards,
Tim"
AWS Schema Conversion Tool	"MySql to Postgres Conversion - Source Database Columns Not Displayed
Hello

I am currently trying to do a conversion between to local databases using the conversion tool. I can connect to both my source (MySql) and target (Postgres) databases no problem. Once I go to convert the source schema I can see the tables, indexes, constraints etc but I can not see the columns at all, they aren not loading.  I have included a snippet from the logs, which includes and MySql error:

Thread:      54 LOADER 19:20:09.113    DEBUG  MetadataLoading Query 'load-table-view-columns(table)' started...
Thread:      57 LOADER 19:20:09.113    ERROR  Error executing 'load-table-view-columns(table)' query: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Unknown column 'DATETIME_PRECISION' in 'field list'

MySql Version : 5.5, driver version: mysql-connector-java-5.1.39
Postgres Version: 9.5, driver version: postgresql-9.4.1209.jre6.jar

This error appears in every use of the load-table-view-columns(table) function for the same column.

Our schema is pretty straight forward and I have tried this using source that has data and has no data (schema only DB).

Thanks,
Teresa

Edited by: tbrooks on Jul 28, 2016 4:27 PM

Edited by: tbrooks on Jul 29, 2016 10:06 AM

Edited by: tbrooks on Jul 29, 2016 10:09 AM"
AWS Schema Conversion Tool	"Re: MySql to Postgres Conversion - Source Database Columns Not Displayed
Hi,

Sorry to hear that you have run into issues!

 In order to try and help you resolve these issues as quickly as possible could you please provide us with the following.

1) The version of the schema conversion tool you are

2) The Full logs from the schema conversion job that ran into the issues.

3) If possible re-run the conversion with detailed debugging turned on for the Schema Conversion Tool.

With this information hopefully we will have  a better idea of what is occurring and be able to assist in getting things working for you."
AWS Schema Conversion Tool	"SCT Update
Is there a time frame of when to expect the AWS SCT to be updated to support Redshift as a target source now that DMS supports it?

Thanks"
AWS Schema Conversion Tool	"Re: SCT Update
I figured it out."
AWS Schema Conversion Tool	"Tool generates idata type BIT incompatible with default value
I am migrating a MS SQL Server database to Postgres RDS(9.4.5). The tool generates the following script:
CREATE TABLE IF NOT EXISTS test10(
isautomated BIT(1) NOT NULL DEFAULT 0
);

This SQL does not work:

ERROR: column ""isautomated"" is of type bit but default expression is of type integer
SQL state: 42804
Hint: You will need to rewrite or cast the expression.

The fix is easy:
CREATE TABLE IF NOT EXISTS test10(
isautomated BIT(1) NOT NULL DEFAULT '0'
);

Question: is it a bug in the tool? Anyway to define a conversion rule to generate '0' instead of 0?

I have lots of such SQLs generated by the tool, and prefer not have tomodify them manually.

Thanks

James"
AWS Schema Conversion Tool	"Cannot load object tree when connecting to Oracle
when connecting to an Oracle service as SYSTEM, I got the following exceptions, although Test Connection was successful (see the attached file). The exceptions were thrown after I clicked OK button.

A post in the forum says that it's permission issue, but I am connecting as SYSTEM. Also, there is no Oracle error.

Thanks for help.

Thanks

James

=== Exceptions ===

java.lang.AbstractMethodError: Method oracle/jdbc/driver/OracleStatementWrapper.isClosed()Z is abstract
	at oracle.jdbc.driver.OracleStatementWrapper.isClosed(OracleStatementWrapper.java)
	at org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer.closeInvoked(StatementFinalizer.java:63)
	at org.apache.tomcat.jdbc.pool.interceptor.AbstractCreateStatementInterceptor.invoke(AbstractCreateStatementInterceptor.java:59)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.interceptor.ConnectionState.invoke(ConnectionState.java:152)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.TrapException.invoke(TrapException.java:40)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy8.close(Unknown Source)
	at com.amazon.sct.dbloader.SqlStatementExecutor.executeScalarQuery(SqlStatementExecutor.java:167)
	at com.amazon.sct.dbloader.DbLoader.init(DbLoader.java:215)
	at com.amazon.sct.dbloader.DbLoader.getDbLoader(DbLoader.java:287)
	at com.amazon.sct.task.InitDbLoaderTask.call(InitDbLoaderTask.java:37)
	at com.amazon.sct.task.InitDbLoaderTask.call(InitDbLoaderTask.java:15)
	at javafx.concurrent.Task$TaskCallable.call(Task.java:1423)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:745)"
AWS Schema Conversion Tool	"Re: Cannot load object tree when connecting to Oracle
Try turning debug mode on under: Settings -> Global Settings -> Logging.

Then look in the log file and see if you get an Oracle error.

Thanks,
Ed"
AWS Schema Conversion Tool	"Re: Cannot load object tree when connecting to Oracle
no, do not see any oracle errors. Attached please find settings and the log file. I turned on debug and set message levels to DEBUG too.

Please note that I am using the latest version 1.0.202 which became available yesterday.

thanks

james"
AWS Schema Conversion Tool	"Re: Cannot load object tree when connecting to Oracle
this is my oracle driver
C:\app\dba\product\11g\jdbc\lib\ojdbc5_g.jar

is it supported?"
AWS Schema Conversion Tool	"Re: Cannot load object tree when connecting to Oracle
That's a good point: Please see this thread  - https://forums.aws.amazon.com/thread.jspa?threadID=218028&tstart=0 

A different version of the driver might work.
Please let us know what you find.
Thanks,
Ed"
AWS Schema Conversion Tool	"Re: Cannot load object tree when connecting to Oracle
ok, it seems that my jdbc driver is old. after switching to ojdbc7.jar, the error is gone.

thanks

james"
AWS Schema Conversion Tool	"Re: Cannot load object tree when connecting to Oracle
Thanks James!"
AWS Schema Conversion Tool	"connecting to SQL Server DB with \ or - in instance name
So, my problem is that when I try to connect to my SQL Server DB I can't because my instance name contains a \ and the instance name field gets marked with a little red X and the 'Test Connection' button gets grayed out. 

I posted this in the DMS forum and got this response:

You'll need to input the service name in to separate field called Service Name.
So connection will looks like
1. Server Name (should contain only server name without \ and instance name)
2. Port
3. Service Name (could be empty)
4. login
5. password

The things is when I connect to my DB using SSMS I connect to frlsql01\mssql2012, if I just try to connect to frlsql01 using SSMS I can't because that's not the name. If I put frlsql01\mssql2012 in the server name in AWS SCT then I get the red X thing. If I put frlsql01 as the server name and mssql2012 as the instance name then I can't connect."
AWS Schema Conversion Tool	"Re: connecting to SQL Server DB with \ or - in instance name
Hi,

In SCT the server name field needs to be a name that can be resolved and connected to from the machine where SCT is installed. Can you nslookup frlsql01 successfully from the location where SCT is installed?

""frlsql01"" is likely the NetBIOS hostname of the SQL server. If the SCT machine cannot resolve the hostname to the IP address and SCT and SQL server are not able to communicate then you will need to resolve that connection issue so the two systems can connect successfully.

Where do you have the SCT installed?"
AWS Schema Conversion Tool	"Re: connecting to SQL Server DB with \ or - in instance name
Thanks for your reply.

FRLSQL01 is the name of the windows server that SQL Server is running on. On the maching that is running SCT, I can RDP into FRLSQL01. If I want to connect to the SQL Server DB on FRLSQL01(from the box where SCT is running) using SSMS then I connect to FRLSQL01\MSSQL2012. From the box where SCT is running I can both RDP into the FRLSQL01 and connect to FRLSQL01\MSSQL2012 using SSMS."
AWS Schema Conversion Tool	"Re: connecting to SQL Server DB with \ or - in instance name
So, I cannot nslookup frlsql01 from the SCT location. What does that mean ? As I said, I can RDP to frlsql01, and I can ping it. How does nslookup differ ? I gather that it ignore the HOSTS file."
AWS Schema Conversion Tool	"Re: connecting to SQL Server DB with \ or - in instance name
I installed SCT on another box where I am able to nslookup FRLSQL01 sucessfully and I still have the same issue."
AWS Schema Conversion Tool	"Re: connecting to SQL Server DB with \ or - in instance name
Have you tried using the FQDN of the SQLServer in the SCT dialog?"
AWS Schema Conversion Tool	"convert oracle on - premise to oracle RDS ?
I haven't gotten around to downloading the conversion tool yet, but we were hoping to use it in conjunction with DMS to get the objects migrated ( stored procedures, sequences, indexes, etc ) that DMS doesn't migrate. From the skimming of the documentation I've done, it doesn't appear that it is possible to use the conversion tool in this manner. It looks as though you can not use Oracle RDS as a target. Is that the case?"
AWS Schema Conversion Tool	"Re: convert oracle on - premise to oracle RDS ?
Hi balvey79,
Yes, that is correct. Oracle RDS as a target is not yet supported. 

In the mean time perhaps you can use datapump to do a no data export/import.

Thanks,
Ed

Edited by: edm@AWS on Feb 22, 2016 12:49 PM"
AWS Schema Conversion Tool	"""cannot load objects tree"" on step 4 - Oracle migration to mySQL
error message on step 4 - on premise Oracle migration to aws MySQL :
MySQL database
Cannot load objects tree.
java.lang.AbstractMethodError: Method com/mysql/jdbc/Statement.isClosed()Z is abstract
	at com.mysql.jdbc.Statement.isClosed(Statement.java)
	at org.apache.tomcat.jdbc.pool.interceptor.StatementFinalizer.closeInvoked(StatementFinalizer.java:63)
	at org.apache.tomcat.jdbc.pool.interceptor.AbstractCreateStatementInterceptor.invoke(AbstractCreateStatementInterceptor.java:59)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.interceptor.ConnectionState.invoke(ConnectionState.java:152)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.TrapException.invoke(TrapException.java:40)
	at org.apache.tomcat.jdbc.pool.JdbcInterceptor.invoke(JdbcInterceptor.java:108)
	at org.apache.tomcat.jdbc.pool.DisposableConnectionFacade.invoke(DisposableConnectionFacade.java:81)
	at com.sun.proxy.$Proxy8.close(Unknown Source)
	at com.amazon.sct.dbloader.SqlStatementExecutor.executeScalarQuery(SqlStatementExecutor.java:150)
	at com.amazon.sct.dbloader.DbLoader.init(DbLoader.java:140)
	at com.amazon.sct.dbloader.DbLoader.getDbLoader(DbLoader.java:193)
	at com.amazon.sct.task.InitDbLoaderTask.call(InitDbLoaderTask.java:33)
	at com.amazon.sct.task.InitDbLoaderTask.call(InitDbLoaderTask.java:13)
	at javafx.concurrent.Task$TaskCallable.call(Task.java:1423)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.lang.Thread.run(Thread.java:745)"
AWS Schema Conversion Tool	"Re: ""cannot load objects tree"" on step 4 - Oracle migration to mySQL
Hello,

I am also having this issue, with the exact same error message too.

The only difference is I am migrating from SQL Server to MySQL.

I can post any relevant information you might need from me to help solve this issue."
AWS Schema Conversion Tool	"Re: ""cannot load objects tree"" on step 4 - Oracle migration to mySQL
It could be you are using the wrong mySQL jar Driver.  The correct driver should be located here: https://www.mysql.com/products/connector/

Edited by: edm@AWS on Feb 22, 2016 12:37 PM"
AWS Schema Conversion Tool	"Error when connecting to oracle ""cannot load objects tree""
Getting the error below, GUI says ""cannot load objects tree"" any advice?

Thread:      15 GENERAL 16:10:23.021    ERROR  java.sql.SQLSyntaxErrorException: ORA-00942: table or view does not exist

                                java.util.concurrent.FutureTask.report(FutureTask.java:122)
                                java.util.concurrent.FutureTask.get(FutureTask.java:192)
                                com.amazon.sct.service.TreeService.lambda$initDbLoader$5(TreeService.java:72)
                                com.amazon.sct.service.TreeService$$Lambda$1014/2035735819.changed(Unknown Source)
                                com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
                                com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
                                javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:105)
                                javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112)
                                javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:146)
                                javafx.concurrent.Task.setState(Task.java:696)
                                javafx.concurrent.Task$TaskCallable.lambda$call$497(Task.java:1453)
                                javafx.concurrent.Task$TaskCallable$$Lambda$975/596013028.run(Unknown Source)
                                com.sun.javafx.application.PlatformImpl.lambda$null$170(PlatformImpl.java:295)
                                com.sun.javafx.application.PlatformImpl$$Lambda$55/279211512.run(Unknown Source)
                                java.security.AccessController.doPrivileged(Native Method)
                                com.sun.javafx.application.PlatformImpl.lambda$runLater$171(PlatformImpl.java:294)
                                com.sun.javafx.application.PlatformImpl$$Lambda$54/689286580.run(Unknown Source)
                                com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
                                com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
                                com.sun.glass.ui.win.WinApplication.lambda$null$145(WinApplication.java:101)
                                com.sun.glass.ui.win.WinApplication$$Lambda$43/654157756.run(Unknown Source)
                                java.lang.Thread.run(Thread.java:745)
Thread:      45 GENERAL 16:12:56.330     INFO  Connecting to Oracle database . . .
Thread:      15 GENERAL 16:12:58.171    ERROR  java.sql.SQLSyntaxErrorException: ORA-00942: table or view does not exist

                                java.util.concurrent.FutureTask.report(FutureTask.java:122)
                                java.util.concurrent.FutureTask.get(FutureTask.java:192)
                                com.amazon.sct.service.TreeService.lambda$initDbLoader$5(TreeService.java:72)
                                com.amazon.sct.service.TreeService$$Lambda$1014/2035735819.changed(Unknown Source)
                                com.sun.javafx.binding.ExpressionHelper$SingleChange.fireValueChangedEvent(ExpressionHelper.java:182)
                                com.sun.javafx.binding.ExpressionHelper.fireValueChangedEvent(ExpressionHelper.java:81)
                                javafx.beans.property.ObjectPropertyBase.fireValueChangedEvent(ObjectPropertyBase.java:105)
                                javafx.beans.property.ObjectPropertyBase.markInvalid(ObjectPropertyBase.java:112)
                                javafx.beans.property.ObjectPropertyBase.set(ObjectPropertyBase.java:146)
                                javafx.concurrent.Task.setState(Task.java:696)
                                javafx.concurrent.Task$TaskCallable.lambda$call$497(Task.java:1453)
                                javafx.concurrent.Task$TaskCallable$$Lambda$975/596013028.run(Unknown Source)
                                com.sun.javafx.application.PlatformImpl.lambda$null$170(PlatformImpl.java:295)
                                com.sun.javafx.application.PlatformImpl$$Lambda$55/279211512.run(Unknown Source)
                                java.security.AccessController.doPrivileged(Native Method)
                                com.sun.javafx.application.PlatformImpl.lambda$runLater$171(PlatformImpl.java:294)
                                com.sun.javafx.application.PlatformImpl$$Lambda$54/689286580.run(Unknown Source)
                                com.sun.glass.ui.InvokeLaterDispatcher$Future.run(InvokeLaterDispatcher.java:95)
                                com.sun.glass.ui.win.WinApplication._runLoop(Native Method)
                                com.sun.glass.ui.win.WinApplication.lambda$null$145(WinApplication.java:101)
                                com.sun.glass.ui.win.WinApplication$$Lambda$43/654157756.run(Unknown Source)
                                java.lang.Thread.run(Thread.java:745)"
AWS Schema Conversion Tool	"Re: Error when connecting to oracle ""cannot load objects tree""
Hi,
Can I ask how many objects are in the source schema you are attempting to convert?  Also, is this repeatable and if so what are the steps I might take to repeat what you are doing to get this error?
Thanks,
Ed"
AWS Schema Conversion Tool	"Re: Error when connecting to oracle ""cannot load objects tree""
I'm not sure how many object, my guess is a lot. if you have a query I can run to find out let me know.

yes this is repeatable and happens each time I try to connect to the DB."
AWS Schema Conversion Tool	"Re: Error when connecting to oracle ""cannot load objects tree""
This is a permission issue. The user you are connecting with has insufficient privileges to read the dictionary objects of your Oracle database.

If you or someone (your DBA) can grant the user the ""select any dictionary"" privilege, you should be able to display the object tree. 
Thanks,
Ed"
AWS Schema Conversion Tool	"Re: Error when connecting to oracle ""cannot load objects tree""
it's my first try just for learning. it happens when i even attempt to covert simple oracle schema SCOTT.
my steps:
i opened new mySQL on aws
i downloaded conversion tool
i launch it, provide oracle details , selected SCOTT schema and give mySQL connection details.
getting this error.

thanks"
AWS Schema Conversion Tool	"Re: Error when connecting to oracle ""cannot load objects tree""
Ed
i think it's not permission issue - i gave dba privilege and connected with system."
AWS Schema Conversion Tool	"Re: Error when connecting to oracle ""cannot load objects tree""
the reason is found - wrong mySQL jar Driver"
AWS Schema Conversion Tool	"Re: Error when connecting to oracle ""cannot load objects tree""
Hi Michael,
That's really odd as the error is an Oracle error.
If you know the JAR file you were using, could you please post it here so I can:
1) test
2) let our support team know
3) update our documentation

and so people who stumble on it here  in the forums can avoid the issue?

Thanks!
-Ed"
AWS Schema Conversion Tool	"DMS source/target engine for MSSQL??
Reading the DMS FAQ it says that MS SQL is available as a source and target engine:

""Supported database sources include: (1) Oracle, (2) SQL Server, (3) MySQL, (4) Amazon Aurora and (5) PostgreSQL. All sources are supported on-premises, in EC2, and RDS except Amazon Aurora which is available only in RDS.""

The only options in the DMS admin are mysql, oracle, postgres, aurora or mariadb. What gives?"
AWS Schema Conversion Tool	"Re: DMS source/target engine for MSSQL??
The following is posted in the DMS forum:

Unfortunately, we’re not quite ready to support SQL Server endpoints in the DMS preview. Keep watching this forum and the DMS website for updates.

Thanks,
Ed"
AWS Schema Conversion Tool	"Re: DMS source/target engine for MSSQL??
This is really strange --- the initial blog post in December is here and definitely mentions SQL Server:

https://aws.amazon.com/about-aws/whats-new/2015/10/now-in-preview-aws-database-migration-service/

Hopefully this means it's imminent?"
AWS Schema Conversion Tool	"Unable to get source and target end-points to ""test connections""
We have configured an on-site oracle RDBMS as source and created a Aurora instance as a target on AWS in our replication server. However, the replication server is unable to connect to either the on-site oracle database or the AWS Aurora database. Getting the following error when testing connection to these end-points..

failed - Error in connecting:Read timed out"
AWS Schema Conversion Tool	"Re: Unable to get source and target end-points to ""test connections""
We were able to ""Test connection"" to the AWS Aurora Server from our replication server. We had to play around with the Security Groups before these would talk to each other. Still working on connecting to the on-premises Oracle server."
AWS Schema Conversion Tool	"Re: Unable to get source and target end-points to ""test connections""
You may need to open a firewall to whatever port the oracle listener is running on, (default is 1521)"
AWS Schema Conversion Tool	"Re: Unable to get source and target end-points to ""test connections""
On the source, upon changing some of the server details, we get the following error which does not seem happy with any combination of server/port/user/service

Operation:testEndpointDetails:[errType=ERROR_RESPONSE, status=122305, errMessage=ORA-12154: TNS:could not resolve the connect identifier specified http://122305] OCI connection failure., errDetails="
AWS Schema Conversion Tool	"Re: Unable to get source and target end-points to ""test connections""
can you please attache the log file? (or pm me with it)
Thanks,
Ed"
AWS Schema Conversion Tool	"Re: Unable to get source and target end-points to ""test connections""
Thanks Ed, Our Engineers did some network configuration changes and our on-premise DB is now visible to the AWS DMS server. Thanks for your help."
AWS Schema Conversion Tool	"Re: Unable to get source and target end-points to ""test connections""
Perfect. Thanks for the update!"
AWS Schema Conversion Tool	"Freezing problems / examples where this tool has worked?
We are trying to run a report on an mssql db.  We have tried remotely form a mac with jvm memory bumped to 2048 and locally on the windows machine with memory bumped to 4096.  Initially cpu usage spikes as well as memory usage and then memory stays pinned but cpu drops right off to nothing suggesting to us that the app has just frozen and is not doing anything.

This database does not have much data in it but it does have over 1000 stored functions / procedures

On the mac we could see the log file and the fact that it had crashed due to running out of memory.  We cant seem to find the log files on windows.

Is there anyone who has managed to complete a report with this tool or can anyone advise on weather this 'freezing' is normal and we just have to leave it run or how should we approach it?

Thanks

edit: Here is a screenshot from the tool showing how many objects it is about to attempt to analyze if that matters.   screenshot 

We just spun up a windows server instance with 24 cores and 60gb of memory and assigned a large chunk of it to the tool which seems to have resolved the out of memory error but we get the following stackoverflow

java.lang.StackOverflowError
at java.util.HashMap.hash(HashMap.java:338)
at java.util.HashMap.containsKey(HashMap.java:595)
at java.util.HashSet.contains(HashSet.java:203)
at com.amazon.sct.base.resolver.LoopCatcher.isLoop(LoopCatcher.java:30)
at com.amazon.sct.base.resolver.declarations.AmbiguousDeclaration.getBodyScope(AmbiguousDeclaration.java:63)
at com.amazon.sct.base.resolver.declarations.AmbiguousDeclaration.getBodyScope(AmbiguousDeclaration.java:65)
at com.amazon.sct.base.resolver.declarations.AmbiguousDeclaration.getBodyScope(AmbiguousDeclaration.java:65)
at com.amazon.sct.base.resolver.declarations.AmbiguousDeclaration.getBodyScope(AmbiguousDeclaration.java:65)
at com.amazon.sct.base.resolver.declarations.AmbiguousDeclaration.getBodyScope(AmbiguousDeclaration.java:65)


Edited by: MarkiOffice on Oct 14, 2015 1:11 PM

Edited by: MarkiOffice on Oct 14, 2015 1:29 PM"
AWS Schema Conversion Tool	"Re: Freezing problems / examples where this tool has worked?
This is not a known issue.

However at this time the only workaround I can suggest and it isn't a great one is the following.
Is it possible to break up the procedures into multiple schemas for the purpose of conversion?
Such as putting 200 procedures each in 5 schemas?

Edited by: MikeR@AWS on Oct 15, 2015 3:43 PM"
AWS Schema Conversion Tool	"Re: Freezing problems / examples where this tool has worked?
If possible, could you please attach a log file from your failed conversion? 
Thanks!"
AWS Schema Conversion Tool	"Re: Freezing problems / examples where this tool has worked?
Has this issue been resolved?  I'm getting the same error.  

java.lang.StackOverflowError
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)
	at com.amazon.sct.base.resolver.declarations.TableReference.getTargetDeclaration(TableReference.java:63)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:102)
	at com.amazon.sct.base.resolver.declarations.TableReference.getBodyScope(TableReference.java:95)
	at com.amazon.sct.base.resolver.declarations.TableReference.getDeclarationsByName(TableReference.java:146)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ImportList.getDeclarationsByName(ImportList.java:21)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getImportedByName(ExtendedScope.java:89)
	at com.amazon.sct.base.resolver.scopes.ExtendedScope.getDeclarationsByName(ExtendedScope.java:68)
	at com.amazon.sct.base.resolver.Identifier.resolve(Identifier.java:126)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:197)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolveByDefault(CompoundIdentifier.java:188)
	at com.amazon.sct.mssql.resolver.tuners.TableResolvingModifier.resolve(TableResolvingModifier.java:74)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:161)
	at com.amazon.sct.base.resolver.CompoundIdentifier.resolve(CompoundIdentifier.java:155)"
AWS Schema Conversion Tool	"Re: Freezing problems / examples where this tool has worked?
Under settings -> global settings -> performance and memory ->select: low memory consumption but slower conversion

That might work. I suspect you're still consuming too much memory."
AWS Schema Conversion Tool	"Increasing JAVA Memory Allocation
If you are running low on memory after the installation of the AWS Schema Conversion Tool, you can increase the memory usage by the JVM for larger database schemas.

    Go to the installation folder (C:\Program Files\AWS Schema Conversion Tool\)
    Go to App folder under it C:\Program Files\AWS Schema Conversion Tool\app
    Open for Edit AWS Schema Conversion Tool.cfg
    Add values to the end of this file to set up vm settings that called jvmarg. 

If you want to set few args for JVM you need to add numbers to name of this args (jvmarg.1, jvmarg.2, jvmarg.3 etc.)

Sample of how to set maximum size to 8 Gb and Initial heap size (Free memory) to 1 Gb - 
Add the following two lines to the end of the config file:
jvmarg.1=-Xmx8192m
jvmarg.2=-Xms1024m

Edited by: edm@AWS on Oct 12, 2015 11:00 AM"
AWS Schema Conversion Tool	"Re: Increasing JAVA Memory Allocation
Hello-
I believe the snippet you posted as the example for increasing JVM Min Heap and Max size to 8Gb has missed a few key lines of information.  Maybe I'm missing something but the snippet is an exact copy of the content of the file that is shipped with the tool with no obvious changes for the increase indicated.
Could you please advise?  

Thanks,

bp"
AWS Schema Conversion Tool	"Re: Increasing JAVA Memory Allocation
Hi bp,
The post above was incorrect and we have corrected it. Thanks for pointing out the error!
-Ed"
AWS Schema Conversion Tool	"Re: Increasing JAVA Memory Allocation
How can we increase memory allocation on OS X?"
AWS Schema Conversion Tool	"Preview access to AWS DMS
Hi,

We are just now in the process of preparing a migration. See: https://forums.aws.amazon.com/thread.jspa?messageID=679097

We would love to test DMS for this. Would it be possible to get preview access asap?

Thank you!"
AWS Schema Conversion Tool	"Re: Preview access to AWS DMS
Hi,

Unfortunately at this point we are unable to expedite requests for the preview of the Data Migration Service. However we will notify you by email when additional capacity in the preview environment becomes available."
AWS Schema Conversion Tool	"How to create a read replica into a VPC from a master that is ""Non-VPC""?
Hi,

Currently, our RDS instance is not in VPC. We are now planning on migrating it into a VPC. Minimal downtime is a requirement and since the database is quite large (around 100GB), it would take way too long to simply stop, backup and restore.

Is there a way to create a read replica of our master (that is not in a VPC) in a VPC, in order to then being able to simply promote the read replica?

Thank you."
AWS Schema Conversion Tool	"Re: How to create a read replica into a VPC from a master that is ""Non-VPC""?
Wow, what a coincidence!

Amazon has just announced ""AWS Database Migration Service"" (https://aws.amazon.com/dms/). This sounds exactly like what we need!

Would it be possible to get entry to the preview asap?"
AWS Schema Conversion Tool	"Re: How to create a read replica into a VPC from a master that is ""Non-VPC""?
You can sign up for the preview here: https://aws.amazon.com/dms/preview/

Thanks,
Ed"
AWS Schema Conversion Tool	"Oracle/MSSQL -> MySQL/Aurora only?
Future versions will support everything listed at the conference, correct? I was excited to give this a try as we have a huge need for it right now."
AWS Schema Conversion Tool	"Re: Oracle/MSSQL -> MySQL/Aurora only?
At this time the tool only supports Oracle and SQL Server as sources and MySQL, Aurora as targets.  However, we are always working to expand options for our customers. Can I ask what other engines you are interested in? 
Thanks,
Ed"
AWS Schema Conversion Tool	"MS SQL To Redshift
I was very exited to use this service; however the schema conversion tool that I downloaded for Windows is showing only two source databases (Oracle and SQL Server) and two target databases (MySQL and Arora).

Any idea by when we will have other platforms supported? I have an immediate migration requirement where my source database is MS SQL server and target database is AWS Redshift."
AWS Schema Conversion Tool	"Re: MS SQL To Redshift
Hello,

I'll pass your feature request on to the correct people.

I'd be very surprised if we didn't add expanded format support in the future.

Richard"
AWS Schema Conversion Tool	"How do I upgrade to a new version?
Currently, you must first uninstall the existing version of the tool in order to upgrade to a new version. Your project files should remain intact.

To uninstall the current version: Windows:

    Navigate to Control Panel --> Programs and Features
    Double click on ""AWS Schema Conversion Tool"" (or highlight it and click ""uninstall"")"
AWS Schema Conversion Tool	"Installing the MySQL JDBC Drivers
Using your browser navigate, to the MySQL connector download site: https://dev.mysql.com/downloads/connector/
    Click on ""Connector/J""
    Select the appropriate driver (Microsoft Windows) and click Download
    Launch/Execute the .msi file that was downloaded
    In the AWS Schema Conversion Tool select ""Global Settings"" from the ""Settings"" drop down at the top
    Under ""Drivers"" select the ""MySql Driver Path""
    Navigate to C:\Program Files(x86)\MySQL\MySQL Connector J and select ""mysql-connector-java-5.1.36-bin.jar"""
