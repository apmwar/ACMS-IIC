label	description
AWS Secrets Manager	"Failing CIS 3.3 even when metric filter exists
Hello, 
 We have been failing CIS ""3.3 Ensure a log metric filter and alarm exist for usage of ""root"" account"" compliance check. We have a metric filter in place to detect and alert for this action. I am not sure what needs to happen to pass the compliance check.

This is current filter pattern on the cloudtrail logs in cloudwatch:
{( $.userIdentity.type = ""Root"" ) && ( $.userIdentity.invokedBy NOT EXISTS ) && ( $.eventType != ""AwsServiceEvent"" )}"
AWS Secrets Manager	"Re: Failing CIS 3.3 even when metric filter exists
Hi there,

In the current release, SecurityHub is looking for an exact pattern match for the metric filter based on the CIS guidelines. The additional parentheses in the filter pattern may be causing the pattern match to fail. Can you try changing the metric filter pattern to { $.userIdentity.type = ""Root""  &&  $.userIdentity.invokedBy NOT EXISTS  && $.eventType != ""AwsServiceEvent"" } ?


Aparna"
AWS Secrets Manager	"Re: Failing CIS 3.3 even when metric filter exists
I made the changes and it is working now."
AWS Secrets Manager	"Security Hub and Cloudwatch Events
Hi

Are there any plans to have CloudWatch events trigger automatically?
From what I understand and tested, the only way to trigger an event is to use a custom action and a manual press it. This seems very limited and would very much like something that automatically sends events when a finding is found.

The event pattern:
{
  ""source"": [
    ""aws.securityhub""
  ]
}

only seems to trigger on manual custom actions taken from Security Hub.

We are trying to make security hub automatically create incidents in our own ticket system and not having to check every account/region for new findings.

Is this just me not getting how this works, or is there a plan to implement this?"
AWS Secrets Manager	"Re: Security Hub and Cloudwatch Events
As a general rule, we don't comment on the future direction of the service in forums, but this is something that we are closely looking at as a future feature. Stay tuned for future announcements."
AWS Secrets Manager	"Disable not applicable rules or add custom rules
Security Hub looks promising but I am wondering what the flexibility would be to disable not applicable config rules (such as hardware mfa for root account) or add custom rules that show in the console? 

In addition, it would be great to be able to select accounts to show in the compliance dashboard (or even have multiple widgets)

Thanks"
AWS Secrets Manager	"Re: Disable not applicable rules or add custom rules
Hi Michael - thanks for the feedback! These are all roadmap items that we are looking at in 2019, so stay tuned for future Security Hub releases. 
All the best,
Ely"
AWS Secrets Manager	"Security Hub Fix Findings
Hello I am tasked with fixing some of the finding in security hub; specifically the CIS standards. We are currently failing on the 2.3 and 2.6. I know for sure that our cloudtrail bucket is not publicly available and the access logging is turned on. We have a multi-account set up with the s3 bucket being in a central log account. What can i do to pass the compliance check?"
AWS Secrets Manager	"Re: Security Hub Fix Findings
Hello, 

I understand you are currently failing on the 2.3 and 2.6 in in security hub specifically for the CIS standards. This is possibly being misreported. I have replicated it in my environment and I am also getting a failure on a bucket, but there is no public access on the bucket. 

I reached out our service team and our team is already aware of this feature request about implementing the public access evaluation of CloudTrail buckets in other regions and accounts. Unfortunately, I'm not able to provide when the fix will be implemented. I'd suggest that please keep an eye on our documentation. 

Thank you and Best Regards,"
AWS Secrets Manager	"Re: Security Hub Fix Findings
Today, AWS Security Hub runs CIS checks against a single region and single account. If you have a CloudTrail trail in that account and it logs to an S3 bucket in a different region, or a different account, you will see failed results for checks like CIS 2.3 (Ensure the S3 bucket used to store CloudTrail logs is not publicly accessible) and 2.6 (Ensure S3 bucket access logging is enabled on the CloudTrail S3 bucket) since the target bucket policy or logging status cannot be checked. Currently this results in ‘FAILED’ findings but we will be updating this behavior to report ‘NOT_AVAILABLE’ findings that will not impact the overall compliance status.

We appreciate your feedback. As Security Hub is in preview mode, customer feedback is critical for us to improve the product."
AWS Secrets Manager	"Re: Security Hub Fix Findings
Thank you for getting back to me. I look forward to seeing this improvement in the future."
AWS Secrets Manager	"Failing CIS 3.3 even when metric filter exists
Hello, 
 We have been failing CIS ""3.3 Ensure a log metric filter and alarm exist for usage of ""root"" account"" compliance check. We have a metric filter in place to detect and alert for this action. I am not sure what needs to happen to pass the compliance check.

This is current filter pattern on the cloudtrail logs in cloudwatch:
{( $.userIdentity.type = ""Root"" ) && ( $.userIdentity.invokedBy NOT EXISTS ) && ( $.eventType != ""AwsServiceEvent"" )}"
AWS Secrets Manager	"Re: Failing CIS 3.3 even when metric filter exists
Hi there,

In the current release, SecurityHub is looking for an exact pattern match for the metric filter based on the CIS guidelines. The additional parentheses in the filter pattern may be causing the pattern match to fail. Can you try changing the metric filter pattern to { $.userIdentity.type = ""Root""  &&  $.userIdentity.invokedBy NOT EXISTS  && $.eventType != ""AwsServiceEvent"" } ?


Aparna"
AWS Secrets Manager	"Re: Failing CIS 3.3 even when metric filter exists
I made the changes and it is working now."
AWS Secrets Manager	"Security Hub and Cloudwatch Events
Hi

Are there any plans to have CloudWatch events trigger automatically?
From what I understand and tested, the only way to trigger an event is to use a custom action and a manual press it. This seems very limited and would very much like something that automatically sends events when a finding is found.

The event pattern:
{
  ""source"": [
    ""aws.securityhub""
  ]
}

only seems to trigger on manual custom actions taken from Security Hub.

We are trying to make security hub automatically create incidents in our own ticket system and not having to check every account/region for new findings.

Is this just me not getting how this works, or is there a plan to implement this?"
AWS Secrets Manager	"Re: Security Hub and Cloudwatch Events
As a general rule, we don't comment on the future direction of the service in forums, but this is something that we are closely looking at as a future feature. Stay tuned for future announcements."
AWS Secrets Manager	"Disable not applicable rules or add custom rules
Security Hub looks promising but I am wondering what the flexibility would be to disable not applicable config rules (such as hardware mfa for root account) or add custom rules that show in the console? 

In addition, it would be great to be able to select accounts to show in the compliance dashboard (or even have multiple widgets)

Thanks"
AWS Secrets Manager	"Re: Disable not applicable rules or add custom rules
Hi Michael - thanks for the feedback! These are all roadmap items that we are looking at in 2019, so stay tuned for future Security Hub releases. 
All the best,
Ely"
AWS Secrets Manager	"Security Hub Fix Findings
Hello I am tasked with fixing some of the finding in security hub; specifically the CIS standards. We are currently failing on the 2.3 and 2.6. I know for sure that our cloudtrail bucket is not publicly available and the access logging is turned on. We have a multi-account set up with the s3 bucket being in a central log account. What can i do to pass the compliance check?"
AWS Secrets Manager	"Re: Security Hub Fix Findings
Hello, 

I understand you are currently failing on the 2.3 and 2.6 in in security hub specifically for the CIS standards. This is possibly being misreported. I have replicated it in my environment and I am also getting a failure on a bucket, but there is no public access on the bucket. 

I reached out our service team and our team is already aware of this feature request about implementing the public access evaluation of CloudTrail buckets in other regions and accounts. Unfortunately, I'm not able to provide when the fix will be implemented. I'd suggest that please keep an eye on our documentation. 

Thank you and Best Regards,"
AWS Secrets Manager	"Re: Security Hub Fix Findings
Today, AWS Security Hub runs CIS checks against a single region and single account. If you have a CloudTrail trail in that account and it logs to an S3 bucket in a different region, or a different account, you will see failed results for checks like CIS 2.3 (Ensure the S3 bucket used to store CloudTrail logs is not publicly accessible) and 2.6 (Ensure S3 bucket access logging is enabled on the CloudTrail S3 bucket) since the target bucket policy or logging status cannot be checked. Currently this results in ‘FAILED’ findings but we will be updating this behavior to report ‘NOT_AVAILABLE’ findings that will not impact the overall compliance status.

We appreciate your feedback. As Security Hub is in preview mode, customer feedback is critical for us to improve the product."
AWS Secrets Manager	"Re: Security Hub Fix Findings
Thank you for getting back to me. I look forward to seeing this improvement in the future."
AWS Secrets Manager	"Lambda is not authorized to perform: secretsmanager:GetSecretValue
I've setup the following policy on the my role. 

{
            ""Action"": [
                ""secretsmanager:GetSecretValue""
            ],
            ""Resource"": ""arn:aws:secretsmanager:us-west-2:354135999999:secret:beta/Secrets-2ZZZZZZ"",
            ""Effect"": ""Allow""
        }


But I keep getting this error when my lamba website tries to startup. It's using .NET Core 2.1.

User: arn:aws:sts::354135999999:assumed-role/Dragnet-Beta-LambdaRole-1O22YYYYYYYYY/Dragnet-Beta-WebsiteLambda-11AZX4HXXXXXX is not authorized to perform: secretsmanager:GetSecretValue on resource: arn:aws:secretsmanager:us-west-2:354135999999:secret:beta/Secrets-2ZZZZZZ


I've used the policy simulator and when I paste in the ARN in the error message it says ""Allowed"". So I'm really confused as to why my Lambda can't get the secret. 

I have triple checked the role and policy it's using are what are showing up in the error message and that the lambda is configured with the matching role."
AWS Secrets Manager	"Re: Lambda is not authorized to perform: secretsmanager:GetSecretValue
Fixed it. 

I just changed the memory size of the Lambda a little bit and Saved the change to force it to reload from cache. It then picked up the correct permissions and everything worked. 

Thanks"
AWS Secrets Manager	"Cost Prohibitive
Use Case 1:
We need the ability to store secrets on behalf of our customers. Each of our customers may be storing many secrets.

Use Case 2:
Storing client secrets for each client of our public API.

In both of these cases, where the the number of secrets under management is tied to end clients, the costs scale up drastically. I understand that the common use of Secret Manager is to store application secrets (database credentials, API credentials, ...), but I'm trying to understand if these cases are valid. 

Is Secret Manager the wrong tool for this kind of thing?"
AWS Secrets Manager	"Re: Cost Prohibitive
The cost per secret seems a bit expensive to us as well...  we've resorted to storing multiple keys per secret instead; but it would be much nicer and cleaner if we could store each secret as a discreet secret.

Just counting each AWS service we use and each of our apps with their own key (for security purposes) we easily reach 100+ keys, which is $40+ per month, just to store some tiny API keys.

It would be much nicer if it was pay per operation only.  Or even a Route53 type pricing where the additional keys over a certain number become cheaper per key."
